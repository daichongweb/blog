<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>解决微信小程序授权第一次总是会失败的问题</title>
      <link href="/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8E%88%E6%9D%83%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%80%BB%E6%98%AF%E4%BC%9A%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8E%88%E6%9D%83%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%80%BB%E6%98%AF%E4%BC%9A%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>&emsp;相信有很多同学都遇到过小程序需要授权两次的问题，这个问题的原因是错误的授权流程导致的。</p><p>&emsp;(1)错误的流程：<code>引导用户点击授权按钮(getUserProfile)</code>=&gt;<code>调起授权(wx.getUserProfile)</code>=&gt;<code>获取code(wx.login)</code>=&gt;<code>请求后端、传输数据（code、iv等）</code>=&gt;<code>后端解密并登陆</code>。</p><p>&emsp;(2)正确的流程：<code>获取code(wx.show)</code>=&gt;<code>引导用户点击授权按钮(getUserProfile)</code>=&gt;<code>调起授权(wx.getUserProfile)</code>=&gt;<code>请求后端、传输数据（code、iv等）</code>=&gt;<code>后端解密并登陆</code>。</p><a id="more"></a><h4 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h4><h5 id="1-错误的流程"><a href="#1-错误的流程" class="headerlink" title="(1)错误的流程"></a>(1)错误的流程</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">getUserProfile: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> _this = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">// 微信小程序授权框</span></span><br><span class="line">    wx.getUserProfile(&#123;</span><br><span class="line">        desc: <span class="string">'用于完善会员资料'</span>,</span><br><span class="line">        success: <span class="function">(<span class="params">userResult</span>) =&gt;</span> &#123;</span><br><span class="line">            wx.login(&#123;</span><br><span class="line">                success (loginResult) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (loginResult.code) &#123;</span><br><span class="line">                        <span class="comment">//发起网络请求,数据解密</span></span><br><span class="line">                        wx.request(&#123;</span><br><span class="line">                            url: <span class="string">'https://test.com/onLogin'</span>,</span><br><span class="line">                            data: &#123;</span><br><span class="line">                                code: loginResult.code,</span><br><span class="line">                                iv: userResult.iv,</span><br><span class="line">                                encryptedData: userResult.encryptedData,</span><br><span class="line">                                rawData: userResult.rawData</span><br><span class="line">                            &#125;,</span><br><span class="line">                            success(res)&#123;</span><br><span class="line">                                <span class="comment">// 解密成功，并登陆</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">'登录失败！'</span> + res.errMsg)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-正确的流程"><a href="#2-正确的流程" class="headerlink" title="(2)正确的流程"></a>(2)正确的流程</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取code</span></span><br><span class="line">onShow:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    wx.login(&#123;</span><br><span class="line">      success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        _this.setData(&#123;</span><br><span class="line">          code: res.code</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 用户点击了授权按钮</span></span><br><span class="line">getUserProfile: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> _this = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">// 检测授权是否过期</span></span><br><span class="line">    wx.checkSession(&#123;</span><br><span class="line">      success(checkRes) &#123;</span><br><span class="line">        <span class="comment">// 调起授权窗口</span></span><br><span class="line">        wx.getUserProfile(&#123;</span><br><span class="line">          lang: <span class="string">'zh_CN'</span>,</span><br><span class="line">          desc: <span class="string">'用于完善会员资料'</span>,</span><br><span class="line">          success: <span class="function">(<span class="params">userResult</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//发起网络请求,数据解密</span></span><br><span class="line">            wx.request(&#123;</span><br><span class="line">                url: <span class="string">'https://test.com/onLogin'</span>,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    code: _this.data.code,</span><br><span class="line">                    iv: userResult.iv,</span><br><span class="line">                    encryptedData: userResult.encryptedData,</span><br><span class="line">                    rawData: userResult.rawData</span><br><span class="line">                &#125;,</span><br><span class="line">                success(res)&#123;</span><br><span class="line">                    <span class="comment">//解密成功，并登陆</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      fail() &#123;</span><br><span class="line">          <span class="comment">//过期重新获取</span></span><br><span class="line">        _this.getCode();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>&emsp;正确的写法在<code>微信开发者工具</code>和<code>扫码预览</code>都无法调起微信授权框，一定要在<code>真机调试</code>和发布<code>体验版</code>中测试。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php微信支付ApiV3版-新版微信支付开发</title>
      <link href="/php%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98ApiV3%E7%89%88-%E6%96%B0%E7%89%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%BC%80%E5%8F%91/"/>
      <url>/php%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98ApiV3%E7%89%88-%E6%96%B0%E7%89%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h4 id="微信支付文档"><a href="#微信支付文档" class="headerlink" title="微信支付文档"></a>微信支付文档</h4><p><a herf="https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_1_1.shtml">统一下单文档JsApi</a></p><h4 id="前期准备流程"><a href="#前期准备流程" class="headerlink" title="前期准备流程"></a>前期准备流程</h4><ol><li>微信公众号申请</li><li>支付商户号申请</li><li>微信公众号绑定支付商户号<a id="more"></a> <img src="/php微信支付ApiV3版-新版微信支付开发/1.png">4.设置白名单、生成AppSecret（开发-基本配置） <img src="/php微信支付ApiV3版-新版微信支付开发/2.png">5.申请Api证书、设置APIv3密钥 <img src="/php微信支付ApiV3版-新版微信支付开发/3.png">6.设置支付配置、jsapi支付授权目录、Native支付回调链接（产品中心-开发配置） <img src="/php微信支付ApiV3版-新版微信支付开发/4.png"><h4 id="支付流程"><a href="#支付流程" class="headerlink" title="支付流程"></a>支付流程</h4> 1.前端调用后端下单接口 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建订单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>active </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>mobile </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>token </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createOrder</span>(<span class="params">active, mobile, token</span>) </span>&#123;</span><br><span class="line">    $.showLoading();</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: <span class="string">'post'</span>,</span><br><span class="line">        url: url,</span><br><span class="line">        data: &#123; <span class="string">'active'</span>: active, <span class="string">'pay_type'</span>: <span class="string">'wechat'</span>, <span class="string">'mobile'</span>: mobile &#125;,</span><br><span class="line">        dataType: <span class="string">'json'</span>,</span><br><span class="line">        beforeSend: <span class="function"><span class="keyword">function</span> (<span class="params">XMLHttpRequest</span>) </span>&#123;</span><br><span class="line">            XMLHttpRequest.setRequestHeader(<span class="string">"token"</span>, token);</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (res.status == <span class="string">'error'</span> || res.code != <span class="number">200</span>) &#123;</span><br><span class="line">                    $.toptip(res.message, <span class="string">'warning'</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                WeixinJSBridge.invoke(<span class="string">'getBrandWCPayRequest'</span>, &#123;</span><br><span class="line">                    <span class="string">"appId"</span>: res.data.appId,</span><br><span class="line">                    <span class="string">"timeStamp"</span>: res.data.timeStamp,</span><br><span class="line">                    <span class="string">"nonceStr"</span>: res.data.nonceStr,</span><br><span class="line">                    <span class="string">"package"</span>: res.data.package,</span><br><span class="line">                    <span class="string">"signType"</span>: res.data.signType,</span><br><span class="line">                    <span class="string">"paySign"</span>: res.data.paySign</span><br><span class="line">                &#125;,</span><br><span class="line">                    <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (res.err_msg == <span class="string">"get_brand_wcpay_request:ok"</span>) &#123;</span><br><span class="line">                            $.toptip(<span class="string">'支付成功'</span>, <span class="string">'success'</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">                toLogin();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">            $.toptip(<span class="string">'网络错误'</span>, <span class="string">'warning'</span>)</span><br><span class="line">        &#125;, <span class="attr">complete</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">            $.hideLoading();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;a href=<span class="string">"javascript:;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"weui-btn weui-btn_primary"</span> onclick=<span class="string">"createOrder(1,mobile,token)"</span>&gt;立即支付&lt;<span class="regexp">/a&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>2.处理信息、生成订单、返回支付信息<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成订单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $userId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $mobile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $active</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $payType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|mixed</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ApiException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> \Throwable</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createOrder</span><span class="params">($userId, $mobile, $active = <span class="number">1</span>, $payType = <span class="string">'wechat'</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        DB::beginTransaction();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;countWaitOrderByUserId($userId)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(<span class="string">'您有未支付的订单，请先处理完毕'</span>, <span class="number">500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $activity = <span class="keyword">$this</span>-&gt;findActive($active);</span><br><span class="line">            <span class="keyword">if</span> (!$activity) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(<span class="string">'充值金额有误'</span>, <span class="number">500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $orderId = StringHelper::getOrderId(<span class="string">'R'</span>);</span><br><span class="line">            $orderData = [</span><br><span class="line">                <span class="string">'order_id'</span> =&gt; $orderId,</span><br><span class="line">                <span class="string">'user_id'</span> =&gt; $userId,</span><br><span class="line">                <span class="string">'original_price'</span> =&gt; $activity-&gt;original_price,</span><br><span class="line">                <span class="string">'price'</span> =&gt; $activity-&gt;price,</span><br><span class="line">                <span class="string">'pay_type'</span> =&gt; $payType,</span><br><span class="line">                <span class="string">'mobile'</span> =&gt; $mobile,</span><br><span class="line">                <span class="string">'active'</span> =&gt; $active</span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;insertOrder($orderData)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(<span class="string">'订单创建失败'</span>, <span class="number">500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 请求微信统一下单</span></span><br><span class="line">            <span class="keyword">if</span> ($result = <span class="keyword">$this</span>-&gt;payOrder($orderId, $userId)) &#123;</span><br><span class="line">                DB::commit();</span><br><span class="line">                <span class="keyword">return</span> $result;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(<span class="string">'统一下单失败'</span>, <span class="number">500</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (\<span class="keyword">Exception</span> $exception) &#123;</span><br><span class="line">            DB::rollBack();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException($exception-&gt;getMessage(), <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 微信统一下单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $orderId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $userId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ApiException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> GuzzleException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">payOrder</span><span class="params">($orderId, $userId)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $orderInfo = <span class="keyword">$this</span>-&gt;findOrderByOrderId($orderId);</span><br><span class="line">        <span class="keyword">if</span> (!$orderInfo || $orderInfo-&gt;user_id != $userId) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(<span class="string">'订单不存在'</span>, <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $userInfo = (<span class="keyword">new</span> UserService())-&gt;findUserById($userId, [<span class="string">'openid'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!$userInfo) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(<span class="string">'用户不存在'</span>, <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$userInfo-&gt;openid) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(<span class="string">'请先绑定微信'</span>, <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $payParam = config(<span class="string">'wechat.config'</span>);</span><br><span class="line">        <span class="comment">//统一下单参数</span></span><br><span class="line">        $payConfig = [</span><br><span class="line">            <span class="string">'appid'</span> =&gt; $payParam[<span class="string">'appId'</span>],</span><br><span class="line">            <span class="string">'mchid'</span> =&gt; $payParam[<span class="string">'mchId'</span>],</span><br><span class="line">            <span class="string">'description'</span> =&gt; $orderInfo[<span class="string">'price'</span>] . <span class="string">'话费充值-话费慢充72小时内到账'</span>,</span><br><span class="line">            <span class="string">'out_trade_no'</span> =&gt; $orderId,</span><br><span class="line">            <span class="string">'notify_url'</span> =&gt; $payParam[<span class="string">'notifyUrl'</span>],</span><br><span class="line">            <span class="string">'amount'</span> =&gt; [</span><br><span class="line">                <span class="string">'total'</span> =&gt; $orderInfo[<span class="string">'price'</span>],</span><br><span class="line">                <span class="string">'currency'</span> =&gt; <span class="string">'CNY'</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'payer'</span> =&gt; [</span><br><span class="line">                <span class="string">'openid'</span> =&gt; $userInfo[<span class="string">'openid'</span>]</span><br><span class="line">            ]</span><br><span class="line">        ];</span><br><span class="line">        <span class="comment">// 重点，微信apiv3必须在headers里设置四个参数</span></span><br><span class="line">        $client = <span class="keyword">new</span> Client();</span><br><span class="line">        $httpClient = $client-&gt;post($payParam[<span class="string">'payUrl'</span>], [</span><br><span class="line">            <span class="string">'headers'</span> =&gt; [</span><br><span class="line">                <span class="string">'Content-Type'</span> =&gt; <span class="string">'application/json'</span>,</span><br><span class="line">                <span class="string">'User-Agent'</span> =&gt; <span class="string">'Mozilla/4.0'</span>,</span><br><span class="line">                <span class="string">'Accept'</span> =&gt; <span class="string">'application/json'</span>,</span><br><span class="line">                <span class="string">'Authorization'</span> =&gt; StringHelper::getAuth($payParam[<span class="string">'payUrl'</span>], json_encode($payConfig), <span class="string">'POST'</span>)</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'json'</span> =&gt; $payConfig</span><br><span class="line">        ]);</span><br><span class="line">        $result = $httpClient-&gt;getBody()</span><br><span class="line">            -&gt;getContents();</span><br><span class="line">        $payResult = json_decode($result, <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span> ($httpClient-&gt;getStatusCode() != <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(<span class="string">'支付错误'</span>, <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($payResult[<span class="string">'errcode'</span>])) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException($payResult[<span class="string">'errmsg'</span>], <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($payResult[<span class="string">'code'</span>])) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException($payResult[<span class="string">'code'</span>], <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取支付参数</span></span><br><span class="line">        $appId = $payParam[<span class="string">'appId'</span>];</span><br><span class="line">        $time = time();</span><br><span class="line">        $str = StringHelper::createNonce();</span><br><span class="line">        $prepayId = <span class="string">'prepay_id='</span> . $payResult[<span class="string">'prepay_id'</span>];</span><br><span class="line">        $message = $appId . <span class="string">"\n"</span> .</span><br><span class="line">            $time . <span class="string">"\n"</span> .</span><br><span class="line">            $str . <span class="string">"\n"</span> .</span><br><span class="line">            $prepayId . <span class="string">"\n"</span>;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'appId'</span> =&gt; $payParam[<span class="string">'appId'</span>],</span><br><span class="line">            <span class="string">'timeStamp'</span> =&gt; $time,</span><br><span class="line">            <span class="string">'nonceStr'</span> =&gt; $str,</span><br><span class="line">            <span class="string">'package'</span> =&gt; <span class="string">'prepay_id='</span> . $payResult[<span class="string">'prepay_id'</span>],</span><br><span class="line">            <span class="string">'signType'</span> =&gt; <span class="string">'RSA'</span>,</span><br><span class="line">            <span class="string">'paySign'</span> =&gt; StringHelper::getSign($message)</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成字符串</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">createNonce</span><span class="params">($length = <span class="number">32</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $chars = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789"</span>;</span><br><span class="line">        $str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">            $str .= substr($chars, mt_rand(<span class="number">0</span>, strlen($chars) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成auth</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getAuth</span><span class="params">($url, $body, $type = <span class="string">'POST'</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $config = Config::get(<span class="string">'wechat.config'</span>);</span><br><span class="line">        $nonce = <span class="keyword">self</span>::createNonce();</span><br><span class="line">        $timestamp = time();</span><br><span class="line">        $url_parts = parse_url($url);</span><br><span class="line">        $canonical_url = ($url_parts[<span class="string">'path'</span>] . (!<span class="keyword">empty</span>($url_parts[<span class="string">'query'</span>]) ? <span class="string">"?$&#123;url_parts['query']&#125;"</span> : <span class="string">""</span>));</span><br><span class="line">        $message = $type . <span class="string">"\n"</span> .</span><br><span class="line">            $canonical_url . <span class="string">"\n"</span> .</span><br><span class="line">            $timestamp . <span class="string">"\n"</span> .</span><br><span class="line">            $nonce . <span class="string">"\n"</span> .</span><br><span class="line">            $body . <span class="string">"\n"</span>;</span><br><span class="line">        $sign = <span class="keyword">self</span>::getSign($message);</span><br><span class="line">        $schema = <span class="string">'WECHATPAY2-SHA256-RSA2048'</span>;</span><br><span class="line">        $token = sprintf(<span class="string">'mchid="%s",nonce_str="%s",timestamp="%d",serial_no="%s",signature="%s"'</span>,</span><br><span class="line">            $config[<span class="string">'mchId'</span>], $nonce, $timestamp, $config[<span class="string">'serialNo'</span>], $sign);</span><br><span class="line">        <span class="keyword">return</span> $schema . <span class="string">' '</span> . $token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取证书</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getSign</span><span class="params">($message)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $filePath = <span class="string">'../resources/cert/apiclient_key.pem'</span>;</span><br><span class="line">        openssl_sign($message, $raw_sign, openssl_get_privatekey(file_get_contents($filePath)), <span class="string">'sha256WithRSAEncryption'</span>);</span><br><span class="line">        <span class="keyword">return</span> base64_encode($raw_sign);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h4 id="完成支付"><a href="#完成支付" class="headerlink" title="完成支付"></a>完成支付</h4><p>这篇文章没有使用微信的sdk，所以代码量还有有点大的，不过整体逻辑简单。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 微信支付 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JetBrains2020全家桶激活</title>
      <link href="/JetBrains2020%E5%85%A8%E5%AE%B6%E6%A1%B6%E6%BF%80%E6%B4%BB/"/>
      <url>/JetBrains2020%E5%85%A8%E5%AE%B6%E6%A1%B6%E6%BF%80%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<h4 id="官方下载最新版"><a href="#官方下载最新版" class="headerlink" title="官方下载最新版"></a>官方下载最新版</h4><a href="https://www.jetbrains.com" target="_blank" rel="noopener">JetBrains官网下载</a><h5 id="亲测可激活"><a href="#亲测可激活" class="headerlink" title="亲测可激活"></a>亲测可激活</h5><blockquote><p>1.IntelliJ IDEA 2020.2及以下版本<br>2.PhpStorm 2020.2及以下版本<br>3.WebStorm 2020.2及以下版本<br><a id="more"></a></p></blockquote><h4 id="下载补丁"><a href="#下载补丁" class="headerlink" title="下载补丁"></a>下载补丁</h4><a href="https://www.daichongweb.cn/image/jetbrains-agent-2020.jar" target="_blank" rel="noopener">下载补丁</a><h4 id="如何激活"><a href="#如何激活" class="headerlink" title="如何激活"></a>如何激活</h4><p>&emsp;(1).运行IDE（新安装的选择<code>Evaluate</code>）</p><p>&emsp;(2).随便打开或者创建一个项目，成功后保持不动</p><p>&emsp;(3).把补丁解压后的<code>jetbrains-agent.jar</code>拖入到IDE中，弹框后点击<code>Restart</code>。</p><p>&emsp;(4).重启后会弹出【JetbrainsAgent 配置助手】，选择<code>Activation Code</code>，复制下面的安装参数，然后点击为<code>XXX</code>安装就可以了！！！</p><h4 id="安装参数"><a href="#安装参数" class="headerlink" title="安装参数"></a>安装参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LFq51qqupnaiTNn39w6zATiOTxZI2JYuRJEBlzmUDv4zeeNlXhMgJZVb0q5QkLr+CIUrSuNB7ucifrGXawLB4qswPOXYG7+ItDNUR/<span class="number">9</span>UkLTUWlnHLX07hnR1USOrWIjTmbytcIKEdaI6x0RskyotuItj84xxoSBP/iRBW2EHpOc</span><br></pre></td></tr></table></figure><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><p>&emsp;(1).安装成功后还是跳转到激活页面，请尝试断网后再操作。<br>&emsp;(2).断网后还是无法破解，请尝试删除hosts设置的映射后再操作。</p><h4 id="致谢🙏"><a href="#致谢🙏" class="headerlink" title="致谢🙏"></a>致谢🙏</h4><p>&emsp;好用的话就请评论一下再走吧！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fastjson类型转换</title>
      <link href="/fastjson%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
      <url>/fastjson%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h4 id="jsonString转map"><a href="#jsonString转map" class="headerlink" title="jsonString转map"></a>jsonString转map</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JSON.parseObject(string)</span><br></pre></td></tr></table></figure><h4 id="实体类转jsonstring"><a href="#实体类转jsonstring" class="headerlink" title="实体类转jsonstring"></a>实体类转jsonstring</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JSON.toJSONString(javaClass)</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="存入redis队列之前是jsonString，拿出来变成object处理办法"><a href="#存入redis队列之前是jsonString，拿出来变成object处理办法" class="headerlink" title="存入redis队列之前是jsonString，拿出来变成object处理办法"></a>存入redis队列之前是jsonString，拿出来变成object处理办法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先转字符</span></span><br><span class="line">String value = lotteryData.index(roomId, userId).toString();</span><br><span class="line"><span class="comment">// 转map</span></span><br><span class="line">JSON.parseObject(value);</span><br></pre></td></tr></table></figure><h4 id="如何组成一个多维数组"><a href="#如何组成一个多维数组" class="headerlink" title="如何组成一个多维数组"></a>如何组成一个多维数组</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例子</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"nickname"</span>: <span class="string">"戴崇"</span>,</span><br><span class="line">            <span class="string">"userId"</span>: <span class="number">6144</span>,</span><br><span class="line">            <span class="string">"roomId"</span>: <span class="number">10086</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"nickname"</span>: <span class="string">"戴崇"</span>,</span><br><span class="line">            <span class="string">"userId"</span>: <span class="number">2174</span>,</span><br><span class="line">            <span class="string">"roomId"</span>: <span class="number">10086</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"nickname"</span>: <span class="string">"戴崇"</span>,</span><br><span class="line">            <span class="string">"userId"</span>: <span class="number">9997</span>,</span><br><span class="line">            <span class="string">"roomId"</span>: <span class="number">10086</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"code"</span>: <span class="string">"0"</span>,</span><br><span class="line">    <span class="string">"msg"</span>: <span class="string">"操作成功！"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 做法</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">long</span> userId : rands) &#123;</span><br><span class="line">    <span class="keyword">if</span> (userId == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    String value = lotteryData.index(roomId, userId).toString();</span><br><span class="line">    list.add(JSON.parseObject(value));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac下使用homebrew安装指定版本node</title>
      <link href="/mac%E4%B8%8B%E4%BD%BF%E7%94%A8homebrew%E5%AE%89%E8%A3%85%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%ACnode/"/>
      <url>/mac%E4%B8%8B%E4%BD%BF%E7%94%A8homebrew%E5%AE%89%E8%A3%85%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%ACnode/</url>
      
        <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>&emsp;mac下的homebrew直接使用<code>brew install node</code>安装的node版本是<code>14.+</code>，这给很多程序带来了问题，如果直接安装低版本的node会造成‘npm’等无法使用。</p><h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew remove node</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="解绑"><a href="#解绑" class="headerlink" title="解绑"></a>解绑</h4><p>&emsp;卸载之后要先把之前node解除连接。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew unlink node</span><br></pre></td></tr></table></figure></p><h4 id="查找可用的node版本"><a href="#查找可用的node版本" class="headerlink" title="查找可用的node版本"></a>查找可用的node版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew search node</span><br></pre></td></tr></table></figure><img src="/mac下使用homebrew安装指定版本node/img/2.png" width="500"><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node@10</span><br></pre></td></tr></table></figure><img src="/mac下使用homebrew安装指定版本node/img/3.png" width="500"><h4 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bash_profile</span><br><span class="line">export PATH="/usr/local/opt/node@10/bin:$PATH"</span><br></pre></td></tr></table></figure><img src="/mac下使用homebrew安装指定版本node/img/4.png" width="500"><p>&emsp;经过此步骤还是无法在终端使用‘node -v’就增加<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bash_profile</span><br><span class="line">alias node='/usr/local/opt/node@10/bin/node'</span><br></pre></td></tr></table></figure></p><p>&emsp;无法使用<code>npm</code>等情况执行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew link --overwrite --force node@10</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php生成海报图出现图片损坏的问题</title>
      <link href="/php%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E5%9B%BE%E5%87%BA%E7%8E%B0%E5%9B%BE%E7%89%87%E6%8D%9F%E5%9D%8F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/php%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E5%9B%BE%E5%87%BA%E7%8E%B0%E5%9B%BE%E7%89%87%E6%8D%9F%E5%9D%8F%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>&emsp;近年小程序、微信发展迅速。微信、微博病毒式传播使用户从传统的APP上向<code>即扫即用、无需安装</code>的小程序上转化。而微信公众号、小程序的迅速发展离不开转发、二维码分享。</p><p>&emsp;但是二维码形式单一，对用户来说毫无吸引力。纯粹依靠‘吆喝、金钱、礼物吸引’方式已经变得愈来愈无价值。</p><p>&emsp;对于’视觉动物’和大部分用户来说，精美的图片加上二维码的组合更具有吸引力。<br><a id="more"></a><br><img src="/php生成海报图出现图片损坏的问题/img/3.jpg"></p><h4 id="php生成海报图前提条件"><a href="#php生成海报图前提条件" class="headerlink" title="php生成海报图前提条件"></a>php生成海报图前提条件</h4><ul><li>gd库扩展</li></ul><h4 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h4><h5 id="生成方法"><a href="#生成方法" class="headerlink" title="生成方法"></a>生成方法</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">createPoster</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $poster = <span class="keyword">new</span> Poster();</span><br><span class="line">        <span class="comment">//创建画布</span></span><br><span class="line">        $im = $poster-&gt;createTrueColor(<span class="number">672</span>, <span class="number">1060</span>);</span><br><span class="line">        <span class="comment">//字体文件</span></span><br><span class="line">        $font_file = <span class="keyword">$this</span>-&gt;typeface;</span><br><span class="line">        <span class="comment">// 商品图片</span></span><br><span class="line">        $goodsImg = $poster-&gt;createImgBoard($im, $data[<span class="string">'goodsPath'</span>], <span class="number">0</span>, <span class="number">0</span>, <span class="number">672</span>, <span class="number">668</span>);</span><br><span class="line">        <span class="comment">//二维码</span></span><br><span class="line">        $codeImg = $poster-&gt;createImgBoard($im, $data[<span class="string">'qrcode'</span>], <span class="number">410</span>, <span class="number">710</span>, <span class="number">225</span>, <span class="number">225</span>);</span><br><span class="line">        <span class="comment">//headimg</span></span><br><span class="line">        $headImg = $poster-&gt;createImgBoard($im, $data[<span class="string">'headimg'</span>], <span class="number">46</span>, <span class="number">942</span>, <span class="number">65</span>, <span class="number">65</span>);</span><br><span class="line">        <span class="comment">//btnimg</span></span><br><span class="line">        $btnimg = $poster-&gt;createImgBoard($im, $data[<span class="string">'btn'</span>], <span class="number">420</span>, <span class="number">960</span>, <span class="number">220</span>, <span class="number">48</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 价格</span></span><br><span class="line">        $price_font = ImageColorAllocate($im, <span class="number">248</span>, <span class="number">6</span>, <span class="number">74</span>);</span><br><span class="line">        imagettftext($im, <span class="number">25</span>, <span class="number">0</span>, <span class="number">41</span>, <span class="number">759</span>, $price_font, $font_file, <span class="string">'¥'</span>);</span><br><span class="line">        imagettftext($im, <span class="number">38</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">760</span>, $price_font, $font_file, $data[<span class="string">"price"</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 商品名称</span></span><br><span class="line">        $goodsName = trim(mb_substr($data[<span class="string">'title'</span>], <span class="number">0</span>, <span class="number">20</span>));</span><br><span class="line">        $good_font = ImageColorAllocate($im, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        imagettftext($im, <span class="number">24</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">820</span>, $good_font, $font_file, $poster-&gt;AutoWrap(<span class="number">12</span>, <span class="number">0</span>, $font_file, $goodsName, <span class="number">160</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 昵称</span></span><br><span class="line">        $nickname = trim(mb_substr($data[<span class="string">'nickname'</span>], <span class="number">0</span>, <span class="number">8</span>));</span><br><span class="line">        $nick_font = ImageColorAllocate($im, <span class="number">109</span>, <span class="number">114</span>, <span class="number">120</span>);</span><br><span class="line">        imagettftext($im, <span class="number">16</span>, <span class="number">0</span>, <span class="number">130</span>, <span class="number">965</span>, $nick_font, $font_file, $poster-&gt;AutoWrap(<span class="number">12</span>, <span class="number">0</span>, $font_file, $nickname, <span class="number">80</span>));</span><br><span class="line">        imagettftext($im, <span class="number">16</span>, <span class="number">0</span>, <span class="number">130</span>, <span class="number">1000</span>, $nick_font, $font_file, $data[<span class="string">'time'</span>]);</span><br><span class="line">        ob_clean();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="comment">// 输出图片</span></span><br><span class="line">        $poster-&gt;lookImg($im);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放空间</span></span><br><span class="line">        imagedestroy($im);</span><br><span class="line">        imagedestroy($btnimg);</span><br><span class="line">        imagedestroy($goodsImg);</span><br><span class="line">        imagedestroy($codeImg);</span><br><span class="line">        imagedestroy($headImg);</span><br><span class="line">        <span class="comment">// 删除本地二维码</span></span><br><span class="line">        Qrcode::deleteCode($data[<span class="string">'qrcode'</span>]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="实现类"><a href="#实现类" class="headerlink" title="实现类"></a>实现类</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 具体类</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">library</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  生成海报图</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> daichongweb</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> daichongweb.cn,daichongweb.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Poster</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从图片文件创建Image资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $file 图片文件，支持url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool|resource    成功返回图片image资源，失败返回false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createImageFromFile</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/http(s)?:\/\//'</span>, $file)) &#123;</span><br><span class="line">            $fileSuffix = <span class="keyword">self</span>::getNetworkImgType($file);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $file_info = getimagesize($file);</span><br><span class="line">            $fileSuffix = $file_info[<span class="number">2</span>];</span><br><span class="line">            <span class="comment">// $fileSuffix = pathinfo($file, PATHINFO_EXTENSION);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!$fileSuffix) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> ($fileSuffix) &#123;</span><br><span class="line">            <span class="comment">/*case 'jpeg':</span></span><br><span class="line"><span class="comment">                $theImage = <span class="doctag">@imagecreatefromjpeg</span>($file);</span></span><br><span class="line"><span class="comment">                break;*/</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">                $theImage = imagecreatefromjpeg($file);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">                $theImage = @imagecreatefrompng($file);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">                $theImage = @imagecreatefromgif($file);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                $theImage = @imagecreatefromstring(file_get_contents($file));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $theImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文字换行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">AutoWrap</span><span class="params">($fontsize, $angle, $fontface, $string, $width)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; mb_strlen($string); $i++) &#123;</span><br><span class="line">            $letter[] = mb_substr($string, $i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($letter <span class="keyword">as</span> $l) &#123;</span><br><span class="line">            $teststr = $content . <span class="string">""</span> . $l;</span><br><span class="line">            $testbox = imagettfbbox($fontsize, $angle, $fontface, $teststr);</span><br><span class="line">            <span class="keyword">if</span> (($testbox[<span class="number">2</span>] &gt; $width) &amp;&amp; ($content !== <span class="string">""</span>)) &#123;</span><br><span class="line">                $content .= <span class="string">"\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $content .= $l;</span><br><span class="line">        &#125;</span><br><span class="line">        $content = mb_convert_encoding($content, <span class="string">"html-entities"</span>, <span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="keyword">return</span> $content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNetworkImgType</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_NOBODY, <span class="number">1</span>);</span><br><span class="line">        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, <span class="number">3</span>);</span><br><span class="line">        curl_setopt($ch, CURLOPT_TIMEOUT, <span class="number">3</span>);</span><br><span class="line">        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line">        curl_exec($ch);</span><br><span class="line">        $http_code = curl_getinfo($ch);</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($http_code[<span class="string">'http_code'</span>] == <span class="number">200</span>) &#123;</span><br><span class="line">            $theImgType = explode(<span class="string">'/'</span>, $http_code[<span class="string">'content_type'</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ($theImgType[<span class="number">0</span>] == <span class="string">'image'</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> $theImgType[<span class="number">1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建真彩画布</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $width</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $height</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $r</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $g</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $b</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> false|resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createTrueColor</span><span class="params">(int $width, int $height, $r = <span class="number">255</span>, $g = <span class="number">255</span>, $b = <span class="number">255</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $im = imagecreatetruecolor($width, $height);</span><br><span class="line">        $color = imagecolorallocate($im, $r, $g, $b);</span><br><span class="line">        imagefill($im, <span class="number">0</span>, <span class="number">0</span>, $color);</span><br><span class="line">        <span class="keyword">return</span> $im;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建图像画布</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $im</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $imgUrl</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $dst_w</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $dst_h</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool|resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createImgBoard</span><span class="params">($im, $imgUrl, $dst_x, $dst_y, $dst_w, $dst_h)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($width, $height) = getimagesize($imgUrl);</span><br><span class="line">        $imgBoard = Poster::createImageFromFile($imgUrl);</span><br><span class="line">        imagecopyresized($im, $imgBoard, $dst_x, $dst_y, <span class="number">0</span>, <span class="number">0</span>, $dst_w, $dst_h, $width, $height);</span><br><span class="line">        <span class="keyword">return</span> $imgBoard;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $im</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">lookImg</span><span class="params">($im)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        header(<span class="string">"Content-type:text/html;charset=utf-8"</span>);</span><br><span class="line">        Header(<span class="string">"Content-Type: image/jpeg"</span>); <span class="comment">// jpeg 生成会更快，png生成速度慢但是高清</span></span><br><span class="line">        imagejpeg($im);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取微信二维码</span></span><br><span class="line">$codePath = Qrcode::createQrcode([</span><br><span class="line">    <span class="string">'scene'</span> =&gt; $scene,</span><br><span class="line">    <span class="string">'page'</span> =&gt; $path,</span><br><span class="line">    <span class="string">'width'</span> =&gt; <span class="string">'112'</span>,</span><br><span class="line">    <span class="string">'auto_color'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">    <span class="string">'line_color'</span> =&gt; [</span><br><span class="line">        <span class="string">'r'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">        <span class="string">'g'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">        <span class="string">'b'</span> =&gt; <span class="number">0</span></span><br><span class="line">    ]</span><br><span class="line">]);</span><br><span class="line">$data = [</span><br><span class="line">    <span class="string">'bg'</span> =&gt; <span class="keyword">$this</span>-&gt;bg,</span><br><span class="line">    <span class="string">'goodsPath'</span> =&gt; $goodsPath,</span><br><span class="line">    <span class="string">'title'</span> =&gt; $goodsName,</span><br><span class="line">    <span class="string">'price'</span> =&gt; $goodsPrice,</span><br><span class="line">    <span class="string">'btn'</span> =&gt; <span class="keyword">$this</span>-&gt;btn,</span><br><span class="line">    <span class="string">'time'</span> =&gt; date(<span class="string">'Y-m-d H:i'</span>),</span><br><span class="line">    <span class="string">'qrcode'</span> =&gt; $codePath,</span><br><span class="line">    <span class="string">'headimg'</span> =&gt; $userInfo-&gt;headimgurl ? $userInfo-&gt;headimgurl : <span class="keyword">$this</span>-&gt;defaultHeadImg,</span><br><span class="line">    <span class="string">'nickname'</span> =&gt; $userInfo-&gt;nickname ? $userInfo-&gt;nickname : <span class="string">'特抱抱'</span></span><br><span class="line">];</span><br><span class="line"><span class="keyword">$this</span>-&gt;createPoster($data);</span><br></pre></td></tr></table></figure><h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><div style="display: flex;justify-content: space-around;"><br>    <div style="display: inline-block;"><img src="/php生成海报图出现图片损坏的问题/img/1.jpg" width="300"></div><div style="display: inline-block;"><img src="/php生成海报图出现图片损坏的问题/img/2.jpg" width="300"></div><br></div><p>&emsp;从上面两个图很明显可以看出，第二张图下面被切掉了，而且电脑是打不开的。解决这个问题的关键在于<code>ob_clean();ob_end_clean();</code>两个函数。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 清空缓冲区</span></span><br><span class="line">ob_clean();</span><br><span class="line">ob_end_clean();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序支付</title>
      <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98/"/>
      <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98/</url>
      
        <content type="html"><![CDATA[<h4 id="小程序支付"><a href="#小程序支付" class="headerlink" title="小程序支付"></a>小程序支付</h4><p>&emsp;现如今的小程序愈发重要，微信小程序开发也成为开发者必须掌握的重要的技能之一。<br>&emsp;经过多年的发展，小程序开发更新换代非常快，在最近的开发中发现之前小程序支付的写法已经完全不适用了，害得我研究了很久，特写一篇文章记录一下。</p><h4 id="开发前提"><a href="#开发前提" class="headerlink" title="开发前提"></a>开发前提</h4><p>&emsp;（1）开通微信支付商户号。<br>&emsp;（2）开通小程序。<br>&emsp;（3）微信支付平台设置特约商户APPID,绑定小程序Appid。（这里要注意，小程序和支付商户必须是同一个主体）。<br>&emsp;（4）小程序绑定微信支付商户号。</p><a id="more"></a><h4 id="具体差别"><a href="#具体差别" class="headerlink" title="具体差别"></a>具体差别</h4><p>&emsp;可以从很久之前的文章看出，现在的小程序支付多了一个二次签名的步骤，这点需要大家注意。<br>&emsp;其他的步骤倒是没什么差别，具体可 <a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=9_1" target="_blank" rel="noopener">官方文档</a>。</p><h4 id="上代码（废话不多说，yii2写法）"><a href="#上代码（废话不多说，yii2写法）" class="headerlink" title="上代码（废话不多说，yii2写法）"></a>上代码（废话不多说，yii2写法）</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $user_id = FsRequest::userId(<span class="string">'true'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!$user_id) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'请先登录'</span>, [], <span class="number">201</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data = \Yii::$app-&gt;request-&gt;post();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($data)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'参数不全'</span>, [], <span class="number">201</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $openId = WeixinUser::find()-&gt;where([<span class="string">'ecuid'</span> =&gt; $user_id])-&gt;select([<span class="string">'dingdang_mini'</span>])-&gt;one();</span><br><span class="line">        <span class="keyword">if</span> (!$openId) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'未绑定小程序'</span>, [], <span class="number">201</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $payParams = [</span><br><span class="line">            <span class="string">'appid'</span> =&gt; $appid,</span><br><span class="line">            <span class="string">'mch_id'</span> =&gt; $mch_id,</span><br><span class="line">            <span class="string">'nonce_str'</span> =&gt; WxHelper::createNoncestr(<span class="number">32</span>),</span><br><span class="line">            <span class="string">'sign'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="string">'body'</span> =&gt; $data[<span class="string">'body'</span>],</span><br><span class="line">            <span class="string">'out_trade_no'</span> =&gt; $data[<span class="string">'orderId'</span>],</span><br><span class="line">            <span class="string">'total_fee'</span> =&gt; (int)($data[<span class="string">'price'</span>] * <span class="number">100</span>),</span><br><span class="line">            <span class="string">'openid'</span> =&gt; $openId-&gt;dingdang_mini,</span><br><span class="line">            <span class="string">'spbill_create_ip'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line">            <span class="string">'notify_url'</span> =&gt; <span class="string">'支付回调'</span>,</span><br><span class="line">            <span class="string">'trade_type'</span> =&gt; <span class="string">'JSAPI'</span>,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        $payParams[<span class="string">'sign'</span>] = WxHelper::paySign($payParams, $key);</span><br><span class="line">        $xml = WxHelper::arrayToXml($payParams);</span><br><span class="line">        <span class="comment">// die($xml);</span></span><br><span class="line">        $payUrl = <span class="string">'https://api.mch.weixin.qq.com/pay/unifiedorder'</span>;</span><br><span class="line"></span><br><span class="line">        $curl = <span class="keyword">new</span> Curl();</span><br><span class="line">        $curl-&gt;setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/xml; charset=utf-8'</span>); <span class="comment">// xml</span></span><br><span class="line">        $curl-&gt;post($payUrl, $xml);</span><br><span class="line">        <span class="comment">// 请求失败</span></span><br><span class="line">        <span class="keyword">if</span> ($curl-&gt;error) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($curl-&gt;errorMessage, [], <span class="number">201</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 微信返回错误</span></span><br><span class="line">            $result = WxHelper::xmlToArray($curl-&gt;response);</span><br><span class="line">            <span class="keyword">if</span> ($result[<span class="string">'result_code'</span>] == <span class="string">'FAIL'</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($result[<span class="string">'err_code_des'</span>], [], <span class="number">201</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 二次签名</span></span><br><span class="line">            $payParamsResult = [</span><br><span class="line">                <span class="string">'appId'</span> =&gt; <span class="keyword">$this</span>-&gt;appid,</span><br><span class="line">                <span class="string">'nonceStr'</span> =&gt; WxHelper::createNoncestr(<span class="number">32</span>),</span><br><span class="line">                <span class="string">'package'</span> =&gt; <span class="string">'prepay_id='</span> . $result[<span class="string">'prepay_id'</span>],</span><br><span class="line">                <span class="string">'paySign'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">                <span class="string">'signType'</span> =&gt; <span class="string">'MD5'</span>,</span><br><span class="line">                <span class="string">'timeStamp'</span> =&gt; (string)time()</span><br><span class="line">            ];</span><br><span class="line">            $payParamsResult[<span class="string">'paySign'</span>] = WxHelper::paySign($payParamsResult, <span class="keyword">$this</span>-&gt;key);</span><br><span class="line">            FsResponse::jsonSuccess($payParamsResult);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">        <span class="keyword">return</span> FsResponse::jsonFaild($e-&gt;getCode(), $e-&gt;getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 具体方法</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">library</span>\<span class="title">wechat</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> \<span class="title">Curl</span>\<span class="title">Curl</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">models</span>\<span class="title">redis</span>\<span class="title">WxAccessToken</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">Exception</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class WxHelper</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> app\library</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WxHelper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取小程序AccessToken</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getToken</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $token = WxAccessToken::get();</span><br><span class="line">        <span class="keyword">if</span> (!$token) &#123;</span><br><span class="line">            $url = <span class="string">'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid='</span> . $appId . <span class="string">'&amp;secret='</span> . $secret;</span><br><span class="line">            $curl = <span class="keyword">new</span> Curl();</span><br><span class="line">            $curl-&gt;get($url);</span><br><span class="line">            <span class="keyword">if</span> ($curl-&gt;error) &#123;</span><br><span class="line">                WxAccessToken::delete();</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($curl-&gt;errorMessage, [],<span class="number">210</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($curl-&gt;response-&gt;errcode)) &#123;</span><br><span class="line">                WxAccessToken::delete();</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($curl-&gt;response-&gt;errmsg,[],<span class="number">210</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $token = $curl-&gt;response-&gt;access_token;</span><br><span class="line">            $time = $curl-&gt;response-&gt;expires_in;</span><br><span class="line">            WxAccessToken::set($token, $time - <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $token;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">xmlToArray</span><span class="params">($xml)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//禁止引用外部xml实体</span></span><br><span class="line">        libxml_disable_entity_loader(<span class="keyword">true</span>);</span><br><span class="line">        $values = json_decode(json_encode(simplexml_load_string($xml, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA)), <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">return</span> $values;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">paySign</span><span class="params">($payParams, $key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ksort($payParams);</span><br><span class="line">        $signString = <span class="keyword">self</span>::toUrlParams($payParams);</span><br><span class="line">        $signString .= <span class="string">'&amp;key='</span> . $key;</span><br><span class="line">        $signString = strtoupper(md5($signString));</span><br><span class="line">        <span class="keyword">return</span> $signString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#生成随机字符串</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">createNoncestr</span><span class="params">($length = <span class="number">7</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $chars = <span class="string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ0123456789"</span>;</span><br><span class="line">        $str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">            $str .= substr($chars, mt_rand(<span class="number">0</span>, strlen($chars) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">toUrlParams</span><span class="params">($payParams)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $buff = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">foreach</span> ($payParams <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($k != <span class="string">"sign"</span> &amp;&amp; $v != <span class="string">""</span> &amp;&amp; !is_array($v)) &#123;</span><br><span class="line">                $buff .= $k . <span class="string">"="</span> . $v . <span class="string">"&amp;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $buff = trim($buff, <span class="string">"&amp;"</span>);</span><br><span class="line">        <span class="keyword">return</span> $buff;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">arrayToXml</span><span class="params">($array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $xml = <span class="string">"&lt;xml&gt;"</span>;</span><br><span class="line">        <span class="keyword">foreach</span> ($array <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_numeric($val)) &#123;</span><br><span class="line">                $xml .= <span class="string">"&lt;"</span> . $key . <span class="string">"&gt;"</span> . $val . <span class="string">"&lt;/"</span> . $key . <span class="string">"&gt;"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $xml .= <span class="string">"&lt;"</span> . $key . <span class="string">"&gt;&lt;![CDATA["</span> . $val . <span class="string">"]]&gt;&lt;/"</span> . $key . <span class="string">"&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $xml .= <span class="string">"&lt;/xml&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> $xml;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>&emsp;微信支付比较简单，只是文档写的不清晰导致开发难度增加。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 小程序支付 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpOffice/phpSpreadsheet导出excel</title>
      <link href="/phpOffice-phpSpreadsheet%E5%AF%BC%E5%87%BAexcel/"/>
      <url>/phpOffice-phpSpreadsheet%E5%AF%BC%E5%87%BAexcel/</url>
      
        <content type="html"><![CDATA[<h4 id="初识phpSpreadsheet"><a href="#初识phpSpreadsheet" class="headerlink" title="初识phpSpreadsheet"></a>初识phpSpreadsheet</h4><p>&emsp;PHPSpreadsheet是由老外使用纯PHP编写的Excel文件处理扩展，他使用的是最新写法，相比PHPExcel(已不再维护)性能提升巨大，使用方法和函数基本相同，可以完全的替代PHPExcel。使用PhpSpreadsheet可以轻松读取和写入Excel文档，支持Excel的所有操作。</p><h5 id="软件依赖"><a href="#软件依赖" class="headerlink" title="软件依赖"></a>软件依赖</h5><ul><li>PHP5.6或更高版本，推荐PHP7</li><li>php_zip扩展</li><li>php_gd2扩展<a id="more"></a></li></ul><h5 id="PHPSpreadsheet-特性"><a href="#PHPSpreadsheet-特性" class="headerlink" title="PHPSpreadsheet 特性"></a>PHPSpreadsheet 特性</h5><ul><li><p>支持导入和导出.xls，.xlsx，.html，.csv，.pdf等格式文件。</p></li><li><p>提供丰富的API，提供单元格样式设置、Excel表格属性设置、图表设置等等诸多功能。使用PhpSpreadsheet完全可以生成一个外观结构都满足你的Excel表格文件。</p></li><li><p>卓越的性能，尤其在PHP7上表现优异，比PHPExcel强大很多。</p></li></ul><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer <span class="keyword">require</span> phpoffice/phpspreadsheet</span><br></pre></td></tr></table></figure><h4 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h4><p>&emsp;下面咱们来做一个通用的导出Excel表格类。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">library</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">exception</span>\<span class="title">BusiException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpOffice</span>\<span class="title">PhpSpreadsheet</span>\<span class="title">IOFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpOffice</span>\<span class="title">PhpSpreadsheet</span>\<span class="title">Spreadsheet</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 导出excel class</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> daichongweb</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Export</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 表格坐标</span></span><br><span class="line">    <span class="keyword">private</span> $cellIndex = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'H'</span>, <span class="string">'I'</span>, <span class="string">'J'</span>, <span class="string">'K'</span>, <span class="string">'L'</span>, <span class="string">'M'</span>, <span class="string">'N'</span>, <span class="string">'O'</span>, <span class="string">'P'</span>, <span class="string">'Q'</span>, <span class="string">'R'</span>, <span class="string">'S'</span>, <span class="string">'T'</span>, <span class="string">'U'</span>, <span class="string">'V'</span>, <span class="string">'W'</span>, <span class="string">'X'</span>, <span class="string">'Y'</span>, <span class="string">'Z'</span>, <span class="string">'AA'</span>, <span class="string">'AB'</span>, <span class="string">'AC'</span>, <span class="string">'AD'</span>, <span class="string">'AE'</span>, <span class="string">'AF'</span>, <span class="string">'AG'</span>, <span class="string">'AH'</span>, <span class="string">'AI'</span>, <span class="string">'AJ'</span>, <span class="string">'AK'</span>, <span class="string">'AL'</span>, <span class="string">'AM'</span>, <span class="string">'AN'</span>, <span class="string">'AO'</span>, <span class="string">'AP'</span>, <span class="string">'AQ'</span>, <span class="string">'AR'</span>, <span class="string">'AS'</span>, <span class="string">'AT'</span>, <span class="string">'AU'</span>, <span class="string">'AV'</span>, <span class="string">'AW'</span>, <span class="string">'AX'</span>, <span class="string">'AY'</span>, <span class="string">'AZ'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认配置</span></span><br><span class="line">    <span class="keyword">public</span> $config = [</span><br><span class="line">        <span class="string">'bold'</span> =&gt; <span class="keyword">true</span>, <span class="comment">// 加粗</span></span><br><span class="line">        <span class="string">'size'</span> =&gt; <span class="number">12</span>, <span class="comment">// 文字大小</span></span><br><span class="line">        <span class="string">'column'</span> =&gt; <span class="number">4</span>, <span class="comment">// 设置列数</span></span><br><span class="line">        <span class="string">'title'</span> =&gt; <span class="string">'默认导出'</span>, <span class="comment">// 表格标题</span></span><br><span class="line">        <span class="string">'name'</span> =&gt; <span class="string">'特抱抱'</span>, <span class="comment">// 文件名</span></span><br><span class="line">        <span class="string">'type'</span> =&gt; <span class="string">'Xls'</span>, <span class="comment">// 导出格式</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认表头</span></span><br><span class="line">    <span class="keyword">public</span> $tableHeader = [</span><br><span class="line">        <span class="string">'php'</span>,</span><br><span class="line">        <span class="string">'vue'</span>,</span><br><span class="line">        <span class="string">'java'</span>,</span><br><span class="line">        <span class="string">'go'</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认数据</span></span><br><span class="line">    <span class="keyword">public</span> $tableDefaultData = [</span><br><span class="line">        [</span><br><span class="line">            <span class="string">'天下第一'</span>,</span><br><span class="line">            <span class="string">'Vue牛逼'</span>,</span><br><span class="line">            <span class="string">'java牛逼'</span>,</span><br><span class="line">            <span class="string">'go牛逼'</span>,</span><br><span class="line">        ],</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $tableHeader 表头</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $tableDefaultData 需要导出数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($tableHeader, $tableDefaultData)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($tableHeader)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusiException(<span class="string">'export error'</span>, <span class="string">'请设置表头'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($tableDefaultData)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusiException(<span class="string">'export error'</span>, <span class="string">'请设置导出数据'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;tableHeader = $tableHeader;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;config[<span class="string">'column'</span>] = count($tableHeader);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;tableDefaultData = $tableDefaultData;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建表格 createTable</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createTable</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $spreadsheet = <span class="keyword">new</span> Spreadsheet();</span><br><span class="line">        $worksheet = $spreadsheet-&gt;getActiveSheet();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//居中</span></span><br><span class="line">        $styleArray = [</span><br><span class="line">            <span class="string">'alignment'</span> =&gt; [</span><br><span class="line">                <span class="string">'horizontal'</span> =&gt; \PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_CENTER,</span><br><span class="line">            ],</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置基本属性</span></span><br><span class="line">        $worksheet-&gt;setTitle(<span class="keyword">$this</span>-&gt;config[<span class="string">'title'</span>]);</span><br><span class="line">        $worksheet-&gt;getStyle(<span class="keyword">$this</span>-&gt;getColumn())-&gt;applyFromArray($styleArray)</span><br><span class="line">            -&gt;getFont()</span><br><span class="line">            -&gt;setBold(<span class="keyword">$this</span>-&gt;config[<span class="string">'bold'</span>])</span><br><span class="line">            -&gt;setName(<span class="string">'Verdana'</span>)</span><br><span class="line">            -&gt;setSize(<span class="keyword">$this</span>-&gt;config[<span class="string">'size'</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;tableHeader <span class="keyword">as</span> $index =&gt; $name) &#123;</span><br><span class="line">            $worksheet-&gt;setCellValue(<span class="keyword">$this</span>-&gt;cellIndex[$index] . <span class="string">'1'</span>, $name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $baseRow = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;tableDefaultData <span class="keyword">as</span> $index =&gt; $data) &#123;</span><br><span class="line">            $i = $index + $baseRow;</span><br><span class="line">            <span class="keyword">for</span> ($k = <span class="number">0</span>; $k &lt;= <span class="keyword">$this</span>-&gt;config[<span class="string">'column'</span>] - <span class="number">1</span>; $k++) &#123;</span><br><span class="line">                $item = $data[$k];</span><br><span class="line">                $worksheet-&gt;setCellValue(<span class="keyword">$this</span>-&gt;cellIndex[$k] . $i, <span class="string">' '</span> . $item);</span><br><span class="line">                <span class="comment">// 中文设置表格宽度</span></span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">"/[\x7f-\xff]/"</span>, $data[$k])) &#123;</span><br><span class="line">                    $worksheet-&gt;getColumnDimension(<span class="keyword">$this</span>-&gt;cellIndex[$k])-&gt;setWidth(strlen($item));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 非中文自动设置宽度</span></span><br><span class="line">                    $worksheet-&gt;getColumnDimension(<span class="keyword">$this</span>-&gt;cellIndex[$k])-&gt;setAutoSize(<span class="keyword">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $worksheet-&gt;calculateColumnWidths();</span><br><span class="line">        <span class="keyword">self</span>::downloadExcel($spreadsheet, <span class="keyword">$this</span>-&gt;config[<span class="string">'name'</span>], <span class="string">'Xls'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件下载 downloadExcel</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data $spreadsheet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $filename</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $format</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">downloadExcel</span><span class="params">($spreadsheet, $filename, $format)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// $format只能为 Xlsx 或 Xls</span></span><br><span class="line">        <span class="keyword">if</span> ($format == <span class="string">'Xlsx'</span>) &#123;</span><br><span class="line">            header(<span class="string">'Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</span>);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> ($format == <span class="string">'Xls'</span>) &#123;</span><br><span class="line">            header(<span class="string">'Content-Type: application/vnd.ms-excel'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        header(<span class="string">"Content-Disposition: attachment;filename="</span></span><br><span class="line">            . urlencode($filename) . <span class="string">'.'</span> . strtolower($format)); <span class="comment">//. date('Y-m-d')</span></span><br><span class="line">        header(<span class="string">'Cache-Control: max-age=0'</span>);</span><br><span class="line">        $objWriter = IOFactory::createWriter($spreadsheet, $format);</span><br><span class="line">        $objWriter-&gt;save(<span class="string">'php://output'</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getColumn</span><span class="params">($row = <span class="number">1</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $index = <span class="keyword">$this</span>-&gt;cellIndex[<span class="keyword">$this</span>-&gt;config[<span class="string">'column'</span>]];</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'A'</span> . $row . <span class="string">':'</span> . $index . $row;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">autoFitColumnWidthToContent</span><span class="params">($sheet, $fromCol, $toCol)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($toCol)) &#123; <span class="comment">//not defined the last column, set it the max one</span></span><br><span class="line">            $toCol = $sheet-&gt;getColumnDimension($sheet-&gt;getHighestColumn())-&gt;getColumnIndex();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> ($i = $fromCol; $i &lt;= $toCol; $i++) &#123;</span><br><span class="line">            $sheet-&gt;getColumnDimension($i)-&gt;setAutoSize(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $sheet-&gt;calculateColumnWidths();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">helper</span>\<span class="title">Export</span>;</span><br><span class="line">...</span><br><span class="line"><span class="comment">// 设置表头</span></span><br><span class="line">$export = <span class="keyword">new</span> Export(</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'测试标题'</span>,</span><br><span class="line">        <span class="string">'测试标题2'</span>,</span><br><span class="line">        <span class="string">'时间'</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        [<span class="string">'11111111111111'</span>, <span class="string">'测试数据2'</span>, <span class="string">'2020-04-30'</span>],</span><br><span class="line">        [<span class="string">'测试数据1-1'</span>, <span class="string">'测试数据2-2'</span>, <span class="string">'2020-04-30'</span>],</span><br><span class="line">    ]</span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> $export-&gt;createTable();</span><br><span class="line"><span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><img src="/phpOffice-phpSpreadsheet导出excel/img/3.gif">]]></content>
      
      
      
        <tags>
            
            <tag> php扩展类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx负载均衡的实现</title>
      <link href="/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
      <url>/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="负载均衡是什么？"><a href="#负载均衡是什么？" class="headerlink" title="负载均衡是什么？"></a>负载均衡是什么？</h4><p>&emsp;负载均衡建立在现有网络结构之上，它提供了一种廉价有效透明的方法扩展网络设备和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的灵活性和可用性。</p><p>&emsp;负载均衡（Load Balance）其意思就是分摊到多个操作单元上进行执行，例如Web服务器、FTP服务器、企业关键应用服务器和其它关键任务服务器等，从而共同完成工作任务。</p><h4 id="为什么要做负载均衡"><a href="#为什么要做负载均衡" class="headerlink" title="为什么要做负载均衡"></a>为什么要做负载均衡</h4><ul><li>服务器总是崩溃怎么办？</li><li>一台服务器扛不住大量的并发怎么办？</li><li>……</li></ul><p> &nbsp;有了这些问题，我相信你一定会用得到这个技术。最让人高兴的一点是：只需要你懂点nginx的配置就能完美的驾驭负载均衡的配置，至于配置之后可能出现的问题，再慢慢去研究也不迟。<br><a id="more"></a></p><h4 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h4><img src="/nginx负载均衡的实现/img/1.png"><p>&emsp;从上图可以看出，我们利用负载均衡可以很好的应对并发请求过高的情况，使每一台服务器发挥最大的效用。</p><h4 id="负载均衡的实现方式"><a href="#负载均衡的实现方式" class="headerlink" title="负载均衡的实现方式"></a>负载均衡的实现方式</h4><ul><li><p>轮询(rr) ：按时间顺序逐一分配到不同的后端服务器(默认);</p></li><li><p>权重(weight)：加权轮询(wrr)。weight值越大，分配到的访问率越高;</p></li><li><p>源IP地址hash调度方法(ip_hash):将每个请求按访问IP的hash值来分配，来自同一个IP固定访问一个后端服务器;</p></li><li><p>最少连接数(least_conn)：当server拥有不同的权重时为wlc，当所有后端主机；连接数相同时，则使用wrr，适用于长连接(keepalive_timeout不为0);</p></li></ul><h4 id="实战配置"><a href="#实战配置" class="headerlink" title="实战配置"></a>实战配置</h4><p>&emsp;准备三台服务器：（1）192.168.133.128（调度器）（2）192.168.133.129（服务器1）（3）192.168.133.130（服务器2）<br>&emsp;在调度服务器中配置：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">upstream 192.168.133.128&#123;</span><br><span class="line">    server 192.168.133.129:80 weight=1;</span><br><span class="line">    server 192.168.133.130:80 weight=1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    client_max_body_size 50m;</span><br><span class="line">    client_body_buffer_size 256k;</span><br><span class="line"></span><br><span class="line">   location / &#123;</span><br><span class="line">       proxy_pass        http://192.168.133.128;</span><br><span class="line">       proxy_set_header X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">       proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;其他服务器server_name都配置成自己的IP就行。在各自的服务Html里命名，加以区分。</p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><img src="/nginx负载均衡的实现/img/2.gif">]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用最少的Sql实现一个特殊排行榜</title>
      <link href="/%E7%94%A8%E6%9C%80%E5%B0%91%E7%9A%84Sql%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%89%B9%E6%AE%8A%E6%8E%92%E8%A1%8C%E6%A6%9C/"/>
      <url>/%E7%94%A8%E6%9C%80%E5%B0%91%E7%9A%84Sql%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%89%B9%E6%AE%8A%E6%8E%92%E8%A1%8C%E6%A6%9C/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>&emsp;说起排行榜上一篇已经介绍过了用Redis实现的方法，而这篇完全是用Sql来实现，不使用任何缓存。</p><h4 id="需求功能（1）"><a href="#需求功能（1）" class="headerlink" title="需求功能（1）"></a>需求功能（1）</h4><p>&emsp;现有十个同学，年龄分布如下图所示，假设你是<code>戴七</code>，请根据年龄获得你在这十人中排第几？同时请获得你的前一名和后一名各是哪一位同学？</p><img src="/用最少的Sql实现一个特殊排行榜/img/1.png"><p>&emsp;这个题是我去年在一家公司被问到的面试题。根据上图分析，获取到自己的排名并不是难事，那前一名和后一名也非常简单了。<br><a id="more"></a></p><h5 id="自己的排名"><a href="#自己的排名" class="headerlink" title="自己的排名"></a>自己的排名</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 原生写法</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="string">`rank`</span> <span class="keyword">where</span> <span class="string">`age`</span> &gt; <span class="number">22</span> <span class="keyword">or</span> (<span class="string">`age`</span> = <span class="number">22</span> <span class="keyword">and</span> <span class="string">`created_at`</span> &gt; <span class="string">'2020-01-21 09:05:34'</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Laravel框架写法</span></span><br><span class="line">$my = DB::table(<span class="string">'rank'</span>)-&gt;where(<span class="string">'name'</span>, <span class="string">'戴七'</span>)-&gt;first();</span><br><span class="line">$rank = DB::table(<span class="string">'rank'</span>)-&gt;where(<span class="string">'age'</span>, <span class="string">'&gt;'</span>, $my-&gt;age)-&gt;orWhere(<span class="function"><span class="keyword">function</span> <span class="params">($query)</span> <span class="title">use</span> <span class="params">($my)</span> </span>&#123;</span><br><span class="line">    $query-&gt;where(<span class="string">'age'</span>, <span class="string">'='</span>, $my-&gt;age)-&gt;where(<span class="string">'created_at'</span>, <span class="string">'&gt;'</span>, $my-&gt;created_at);</span><br><span class="line">&#125;)-&gt;count();</span><br><span class="line">$myRank = $rank + <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>&emsp;这里要注意的是：如果两个人的年龄相同，那么就要比较时间。最终得到的是年龄大于自己人有多少个，+1就是自己的排名。</p><h5 id="前一名"><a href="#前一名" class="headerlink" title="前一名"></a>前一名</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 通过上面的Sql得知年龄大于自己的人数是6人</span><br><span class="line">$rankNum = 6;</span><br><span class="line">$top = $rankNum - 1;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">rank</span> <span class="keyword">where</span> age &gt; <span class="number">22</span> <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span> <span class="keyword">limit</span> $top,<span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id="后一名"><a href="#后一名" class="headerlink" title="后一名"></a>后一名</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`rank`</span> <span class="keyword">where</span> <span class="string">`age`</span> &lt; <span class="number">22</span> <span class="keyword">or</span> (<span class="string">`age`</span> = <span class="number">22</span> <span class="keyword">and</span> <span class="string">`created_at`</span> &lt; <span class="string">'2020-01-21 09:05:34'</span>) <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>,created_at <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>&emsp;这里和原始Sql不同的是：年龄是<code>&lt;22</code>，时间也是<code>&lt;自己的出生时间</code>。</p><h4 id="需求功能（2）"><a href="#需求功能（2）" class="headerlink" title="需求功能（2）"></a>需求功能（2）</h4><p>&emsp;还是这十名同学，假设<code>戴七</code>同学就是本人，现需要五名同学的年龄作为参考，要求这分别得知你本人的前两名同学和后两名同学都是谁（五名同学中必须包含你自己）？</p><h5 id="特殊情况："><a href="#特殊情况：" class="headerlink" title="特殊情况："></a>特殊情况：</h5><p>&emsp;（1）如果你是第一名，那么就获得你后面的四位同学。<br>&emsp;（2）如果你是第二名，那么就获得你前面的一名+后面的三名同学。<br>&emsp;（3）如果你是倒数第一名，那么就获得你前面的四位同学。<br>&emsp;（4）如果你是倒数第二名，那么就获得你前面的三名+后面的一位同学。<br>&emsp;（5）可使用其他语言辅助解决问题，但尽可能的简单清晰。</p><h4 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$myRank = $rank + <span class="number">1</span>;</span><br><span class="line">$total = Db::table(<span class="string">'rank'</span>)-&gt;count();</span><br><span class="line"><span class="comment">// 如果排名是在前三名</span></span><br><span class="line"><span class="keyword">if</span> ($myRank &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">    select * from rank where <span class="number">1</span> order by age desc,created_at desc limit <span class="number">5</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (($total - $myRank) &lt;= <span class="number">2</span>) &#123; <span class="comment">// 倒数两名</span></span><br><span class="line">    $unRank = $total - $myRank + <span class="number">1</span>;</span><br><span class="line">    $offset = $myRank - <span class="number">6</span> + $unRank;</span><br><span class="line">    select * from rank where <span class="number">1</span> order by age desc,created_at desc limit $offset,<span class="number">5</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $offset = $myRank - <span class="number">3</span>;</span><br><span class="line">    select * from rank where <span class="number">1</span> order by age desc,created_at desc limit $offset,<span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php+redis实现实时排行榜</title>
      <link href="/php-redis%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E6%8E%92%E8%A1%8C%E6%A6%9C/"/>
      <url>/php-redis%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E6%8E%92%E8%A1%8C%E6%A6%9C/</url>
      
        <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>&emsp;说起排行榜大家肯定不陌生，在项目开发中排行榜的运用非常的多。如王者农药的天梯排行榜、商城的销量排行榜、热卖榜、用户积分排行榜等等。不管他是什么类型的排行榜，其业务逻辑、实现方法几乎是完全相同的。<br>&emsp;如这样的一个手机和笔记本的销量排行榜是如何实现的呢？<br><a id="more"></a></p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><img src="/php-redis实现实时排行榜/img/1.png"><h4 id="榜单实现"><a href="#榜单实现" class="headerlink" title="榜单实现"></a>榜单实现</h4><p>&emsp;假设做一个如上图一样的排行榜，规定榜单必须是实时更新的，你会使用什么技术来实现呢？</p><h5 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h5><p>&emsp;在数据库新建一张数据表，通过下单事件钩子来更新这张表的数据，记录销量情况。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,<span class="keyword">name</span>,image <span class="keyword">from</span> goods <span class="keyword">left</span> <span class="keyword">join</span> goods_top <span class="keyword">on</span> goods.id=goods_top.goods_id <span class="keyword">where</span> sales &gt; <span class="number">0</span> <span class="keyword">order</span> <span class="keyword">by</span> sales <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure></p><p>&emsp;最常见、最简单的写法莫过于此，但这个写法有一个非常严重的问题。假设<code>goods</code>中数据规模极大，记录表<code>goods_top</code>表中数据规模也不小，在每次查询的性能消耗无疑是很大的，在极端的情况下甚至可能会出现请求超时的情况。</p><p>&emsp;这个方案在实际的项目运用中也很少出现，除非你能确定数据表规模一定会非常的小，或者你根本不考虑什么性能的情况下才会使用。</p><h5 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h5><p>&emsp;使用<code>redis</code>的<code>有序集合(zset)</code>来实现实时排行榜。<em style="font-size:12px;">关于redis有序集合的相关介绍、原理什么的大家自行百度</em></p><p>&emsp;(1)<code>Redis</code> 有序集合和集合一样也是<code>string</code>类型元素的集合,且不允许重复的成员。<br>&emsp;(2)不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。<br>&emsp;(3)有序集合的成员是唯一的,但分数(score)却可以重复。<br>&emsp;(4)集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。 集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。</p><p>&emsp;也就是说，我们可以通过下单事件钩子创建一个<code>zset集合</code>，我们通过<code>value</code>来区分是哪个商品，通过<code>score</code>来排名。</p><img src="/php-redis实现实时排行榜/img/2.png"><h5 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Redis</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品销量排行榜</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rank</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// key</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">key</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $activeActivityId = Main::info();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"goods_top"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增加销量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">($id, $number)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Redis::zIncrBy(<span class="keyword">self</span>::key(), $number, $id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取销量</span></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Redis::zScore(<span class="keyword">self</span>::key(), $id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取成员排名-正序</span></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getRank</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Redis::zrevrank(<span class="keyword">self</span>::key(), $id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过排名获取成员</span></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getRevRange</span><span class="params">($start, $stop)</span>: <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Redis::zRevRange(<span class="keyword">self</span>::key(), $start, $stop);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Rank::add(<span class="number">1008</span>,<span class="number">10</span>); <span class="comment">// 商品ID为1008的销量增加10</span></span><br><span class="line">Rank::get(<span class="number">1008</span>); <span class="comment">// 获取商品ID为1008的销量</span></span><br><span class="line">Rank::getRank(<span class="number">1008</span>); <span class="comment">// 获取商品ID为1008的排名</span></span><br><span class="line">Rank::getRevRange(<span class="number">0</span>,<span class="number">9</span>); <span class="comment">// 获取排名前十的商品ID,返回数组</span></span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>&emsp;实现排行榜的方式有很多，大家根据具体需求和现有技术来确定实现方案。不要过分的追求性能或者是开发速度，欲速则不达。</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php7.4预加载与swoole常驻内存有何区别？</title>
      <link href="/php7-4%E9%A2%84%E5%8A%A0%E8%BD%BD%E4%B8%8Eswoole%E5%B8%B8%E9%A9%BB%E5%86%85%E5%AD%98%E6%9C%89%E4%BD%95%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
      <url>/php7-4%E9%A2%84%E5%8A%A0%E8%BD%BD%E4%B8%8Eswoole%E5%B8%B8%E9%A9%BB%E5%86%85%E5%AD%98%E6%9C%89%E4%BD%95%E5%8C%BA%E5%88%AB%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h4 id="重大新闻"><a href="#重大新闻" class="headerlink" title="重大新闻"></a>重大新闻</h4><img src="/php7-4预加载与swoole常驻内存有何区别？/img/1.png"><p>php7.4在2019/11/28日发布！<br><a id="more"></a><br>其中RFC: Preloading（预加载）最引人瞩目。这一新特性的诞生标志着php作为解释型语言在性能瓶颈上再次突破。</p><p>根据各大网友的测试统计，php7.4与php7.0相比提升将近10%。</p><h4 id="特性介绍"><a href="#特性介绍" class="headerlink" title="特性介绍"></a>特性介绍</h4><h5 id="php生命周期"><a href="#php生命周期" class="headerlink" title="php生命周期"></a>php生命周期</h5><img src="/php7-4预加载与swoole常驻内存有何区别？/img/3.png"><p>每次请求php都会从0到1重复上图所示的操作，每次带来的内存、IO方面的消耗无疑是很大的。</p><h5 id="预加载"><a href="#预加载" class="headerlink" title="预加载"></a>预加载</h5><img src="/php7-4预加载与swoole常驻内存有何区别？/img/2.png" title="网图"><p>在预加载的特性下，php会当预加载完成后的请求直接会命中缓存，省下了编译、语法解析、语法分析、类库引入等等操作。</p><p>这里你会发现怎么和swoole的常驻内存有点像？</p><p>不过说实话，在没有真正使用的情况下还真没法判断两者的区别。</p><p>关于更详细的预加载使用大家可以看这里：<a href="https://blog.csdn.net/qmhball/article/details/103503939" target="_blank" rel="noopener">php7.4 preload(预加载)</a></p><p>欢迎大家来讨论有关于预加载和常驻内存的区别到底是什么？</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php+element+aliyunOss实现单图web直传</title>
      <link href="/php-element-aliyunOss%E5%AE%9E%E7%8E%B0%E5%8D%95%E5%9B%BEweb%E7%9B%B4%E4%BC%A0/"/>
      <url>/php-element-aliyunOss%E5%AE%9E%E7%8E%B0%E5%8D%95%E5%9B%BEweb%E7%9B%B4%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h4 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h4><h5 id="原有业务"><a href="#原有业务" class="headerlink" title="原有业务"></a>原有业务</h5><img src="/php-element-aliyunOss实现单图web直传/img/1.png"><a id="more"></a><p>和数据直传到 OSS 相比，以上方法有三个缺点：</p><ul><li>上传慢：用户数据需先上传到应用服务器，之后再上传到OSS。网络传输时间比直传到OSS多一倍。如果用户数据不通过应用服务器中转，而是直传到OSS，速度将大大提升。而且OSS采用BGP带宽，能保证各地各运营商之间的传输速度。</li><li>扩展性差：如果后续用户多了，应用服务器会成为瓶颈。</li><li>费用高：需要准备多台应用服务器。由于OSS上传流量是免费的，如果数据直传到OSS，不通过应用服务器，那么将能省下几台应用服务器。</li></ul><h5 id="代替业务"><a href="#代替业务" class="headerlink" title="代替业务"></a>代替业务</h5><img src="/php-element-aliyunOss实现单图web直传/img/2.png"><p>使用Oss web直传，能有效的解决上传速度过慢的问题。</p><h4 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h4><h5 id="php后端签名代码"><a href="#php后端签名代码" class="headerlink" title="php后端签名代码"></a>php后端签名代码</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 阿里Oss上传验签类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OssPolicy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="function"><span class="keyword">function</span> <span class="title">gmtIso8601</span><span class="params">($time)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $dtStr = date(<span class="string">"c"</span>, $time);</span><br><span class="line">        $mydatetime = <span class="keyword">new</span> DateTime($dtStr);</span><br><span class="line">        $expiration = $mydatetime-&gt;format(DateTime::ISO8601);</span><br><span class="line">        $pos = strpos($expiration, <span class="string">'+'</span>);</span><br><span class="line">        $expiration = substr($expiration, <span class="number">0</span>, $pos);</span><br><span class="line">        <span class="keyword">return</span> $expiration . <span class="string">"Z"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取签名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">policy</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $id = Config(<span class="string">'aliyun.webOss.accessKeyId'</span>); <span class="comment">// oss accessKeyId</span></span><br><span class="line">        $key = Config(<span class="string">'aliyun.webOss.accessKeySecret'</span>); <span class="comment">// oss accessKeySecret</span></span><br><span class="line">        $host = Config(<span class="string">'aliyun.webOss.host'</span>); <span class="comment">// oss 上传地址</span></span><br><span class="line">        $callbackUrl = Config(<span class="string">'aliyun.webOss.callbackUrl'</span>);<span class="comment">// 回调地址 这个可以忽略</span></span><br><span class="line">        $dir =  Config(<span class="string">'aliyun.webOss.dir'</span>); <span class="comment">// 存放的文件夹</span></span><br><span class="line"></span><br><span class="line">        $callback_param = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'callbackUrl'</span> =&gt; $callbackUrl,</span><br><span class="line">            <span class="string">'callbackBody'</span> =&gt; <span class="string">'filename=$&#123;object&#125;&amp;size=$&#123;size&#125;&amp;mimeType=$&#123;mimeType&#125;&amp;height=$&#123;imageInfo.height&#125;&amp;width=$&#123;imageInfo.width&#125;'</span>,</span><br><span class="line">            <span class="string">'callbackBodyType'</span> =&gt; <span class="string">"application/x-www-form-urlencoded"</span></span><br><span class="line">        );</span><br><span class="line">        $callback_string = json_encode($callback_param);</span><br><span class="line">        $base64_callback_body = base64_encode($callback_string);</span><br><span class="line">        $now = time();</span><br><span class="line">        $expire = <span class="number">30</span>;</span><br><span class="line">        $end = $now + $expire;</span><br><span class="line">        $expiration = <span class="keyword">$this</span>-&gt;gmtIso8601($end);</span><br><span class="line"></span><br><span class="line">        $condition = <span class="keyword">array</span>(<span class="number">0</span> =&gt; <span class="string">'content-length-range'</span>, <span class="number">1</span> =&gt; <span class="number">0</span>, <span class="number">2</span> =&gt; <span class="number">1048576000</span>);</span><br><span class="line">        $conditions[] = $condition;</span><br><span class="line"></span><br><span class="line">        $start = <span class="keyword">array</span>(<span class="number">0</span> =&gt; <span class="string">'starts-with'</span>, <span class="number">1</span> =&gt; <span class="string">'$key'</span>, <span class="number">2</span> =&gt; $dir);</span><br><span class="line">        $conditions[] = $start;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $arr = <span class="keyword">array</span>(<span class="string">'expiration'</span> =&gt; $expiration, <span class="string">'conditions'</span> =&gt; $conditions);</span><br><span class="line">        $policy = json_encode($arr);</span><br><span class="line">        $base64_policy = base64_encode($policy);</span><br><span class="line">        $string_to_sign = $base64_policy;</span><br><span class="line">        $signature = base64_encode(hash_hmac(<span class="string">'sha1'</span>, $string_to_sign, $key, <span class="keyword">true</span>));</span><br><span class="line"></span><br><span class="line">        $response = <span class="keyword">array</span>();</span><br><span class="line">        $response[<span class="string">'accessid'</span>] = $id;</span><br><span class="line">        $response[<span class="string">'host'</span>] = $host;</span><br><span class="line">        $response[<span class="string">'policy'</span>] = $base64_policy;</span><br><span class="line">        $response[<span class="string">'signature'</span>] = $signature;</span><br><span class="line">        $response[<span class="string">'expire'</span>] = $end;</span><br><span class="line">        $response[<span class="string">'callback'</span>] = $base64_callback_body;</span><br><span class="line">        $response[<span class="string">'dir'</span>] = $dir;</span><br><span class="line">        <span class="keyword">return</span> $response;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="封装组件-ossSingleUpload-vue"><a href="#封装组件-ossSingleUpload-vue" class="headerlink" title="封装组件 ossSingleUpload.vue"></a>封装组件 ossSingleUpload.vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-upload</span><br><span class="line">      list-type=<span class="string">"picture-card"</span></span><br><span class="line">      <span class="class"><span class="keyword">class</span></span>=<span class="string">"avatar-uploader"</span></span><br><span class="line">      action=<span class="string">"http://daichongwbe.oss-cn-beijing.aliyuncs.com"</span> <span class="comment">// 上传地址</span></span><br><span class="line">      :data=<span class="string">"dataObj"</span></span><br><span class="line">      accept=<span class="string">".jpeg, .png, .jpg"</span> <span class="comment">// 允许上传的文件</span></span><br><span class="line">      :multiple=<span class="string">"false"</span> <span class="comment">// 禁止多图上传</span></span><br><span class="line">      :before-upload=<span class="string">"beforeUpload"</span> <span class="comment">// 上传前回调</span></span><br><span class="line">      :on-success=<span class="string">"handleUploadSuccess"</span> <span class="comment">// 上传成功后回调</span></span><br><span class="line">      :limit=<span class="string">"limit"</span> <span class="comment">// 限制上传数量</span></span><br><span class="line">      :show-file-list=<span class="string">"false"</span> <span class="comment">// 禁止列表展示</span></span><br><span class="line">      ref=<span class="string">"upload"</span></span><br><span class="line">    &gt;</span><br><span class="line">      &lt;img v-<span class="keyword">if</span>=<span class="string">"imageUrl"</span> :src=<span class="string">"imageUrl"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"avatar"</span> /&gt;</span><br><span class="line">      &lt;i v-<span class="keyword">else</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"el-icon-plus avatar-uploader-icon"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-upload&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; getPolicy &#125; <span class="keyword">from</span> <span class="string">"@/api/oss/token"</span>; <span class="comment">// 后端验签接口</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">"ossSingleUpload"</span>, <span class="comment">//组件命名</span></span><br><span class="line">  props: &#123;</span><br><span class="line">    limit: <span class="built_in">Number</span>, <span class="comment">// 参数</span></span><br><span class="line">    imgCover: <span class="built_in">String</span> <span class="comment">// 参数</span></span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      dataObj: &#123;</span><br><span class="line">        policy: <span class="string">""</span>,</span><br><span class="line">        signature: <span class="string">""</span>,</span><br><span class="line">        key: <span class="string">""</span>,</span><br><span class="line">        ossaccessKeyId: <span class="string">""</span>,</span><br><span class="line">        dir: <span class="string">""</span>,</span><br><span class="line">        host: <span class="string">""</span>,</span><br><span class="line">        callback: <span class="string">""</span></span><br><span class="line">      &#125;,</span><br><span class="line">      imageUrl: <span class="string">""</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.imageUrl = <span class="keyword">this</span>.imgCover;</span><br><span class="line">    &#125;, <span class="number">500</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    emitInput(val) &#123; <span class="comment">// 组件交互</span></span><br><span class="line">      <span class="keyword">this</span>.$emit(<span class="string">"input"</span>, val);</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeUpload(file) &#123; <span class="comment">// 上传前钩子</span></span><br><span class="line">      <span class="keyword">let</span> _self = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        getPolicy()</span><br><span class="line">          .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            _self.dataObj.policy = response.data.policy;</span><br><span class="line">            _self.dataObj.signature = response.data.signature;</span><br><span class="line">            _self.dataObj.ossaccessKeyId = response.data.accessid;</span><br><span class="line">            _self.dataObj.key = response.data.dir + <span class="string">"$&#123;filename&#125;"</span>;</span><br><span class="line">            _self.dataObj.dir = response.data.dir;</span><br><span class="line">            _self.dataObj.host = response.data.host;</span><br><span class="line">            _self.dataObj.callback = response.data.callback;</span><br><span class="line">            resolve(<span class="literal">true</span>);</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err);</span><br><span class="line">            reject(<span class="literal">false</span>);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleUploadSuccess(res, file) &#123; <span class="comment">// 上传成功后</span></span><br><span class="line">       <span class="comment">// 清除上次的上传记录，这里如果不清除会导致第二次上传无效。</span></span><br><span class="line">      <span class="keyword">this</span>.$refs.upload.clearFiles(); </span><br><span class="line">       <span class="comment">// 组装图片路径，这里根据业务需要来。</span></span><br><span class="line">      <span class="keyword">this</span>.imageUrl = <span class="keyword">this</span>.dataObj.host + <span class="string">"/"</span> + <span class="keyword">this</span>.dataObj.dir + file.name; </span><br><span class="line">      <span class="comment">// 组件交互，把图片路径发送给页面</span></span><br><span class="line">      <span class="keyword">this</span>.$emit(<span class="string">"getMessage"</span>, <span class="keyword">this</span>.imageUrl); </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.avatar-uploader</span> <span class="selector-class">.el-upload</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#d9d9d9</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.avatar-uploader</span> <span class="selector-class">.el-upload</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#409eff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.avatar-uploader-icon</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#8c939d</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.avatar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="页面调用"><a href="#页面调用" class="headerlink" title="页面调用"></a>页面调用</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"app-container"</span>&gt;</span><br><span class="line">    &lt;oss-single-upload @getMessage=<span class="string">"coverImg"</span> :imgCover=<span class="string">"imgCover"</span> :limit=<span class="string">"1"</span>&gt;&lt;<span class="regexp">/oss-single-upload&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import ossSingleUpload from "@/</span>components/Upload/ossSingleUpload<span class="string">"; // 引入组件</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  components: &#123; ossSingleUpload &#125;,</span></span><br><span class="line"><span class="string">  data() &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line"><span class="string">      imgCover:"</span><span class="string">"</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  methods: &#123;</span></span><br><span class="line"><span class="string">    coverImg(imgUrl) &#123;</span></span><br><span class="line"><span class="string">      console.log(imgUrl); //得到的上传图片路径</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="请求结果"><a href="#请求结果" class="headerlink" title="请求结果"></a>请求结果</h4><img src="/php-element-aliyunOss实现单图web直传/img/3.png"><p>在callbackurl为空或者callbackurl文件内容错误的情况下，这里是没有返回值的。</p><img src="/php-element-aliyunOss实现单图web直传/img/4.png"><h4 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h4><img src="/php-element-aliyunOss实现单图web直传/img/5.gif"><h4 id="github仓库"><a href="#github仓库" class="headerlink" title="github仓库"></a>github仓库</h4><p><a href="https://github.com/DaiChongyu/osswebupload" target="_blank" rel="noopener">点击查看源代码</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel消息队列</title>
      <link href="/Laravel%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
      <url>/Laravel%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h4 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h4><img src="/Laravel消息队列/img/2.png"><a id="more"></a><h4 id="消息队列（MQ）"><a href="#消息队列（MQ）" class="headerlink" title="消息队列（MQ）"></a>消息队列（MQ）</h4><h5 id="什么是消息队列-MQ"><a href="#什么是消息队列-MQ" class="headerlink" title="什么是消息队列(MQ)"></a>什么是消息队列(MQ)</h5><p>关于消息队列大家肯定都不陌生，基本上每个项目中都会使用到的技术，在我前几期的博文中也有介绍。</p><p>&emsp;消息队列本质就是逻辑执行顺序，队列就如同一摞碗堆放在一起，你每放一个碗都会放在这螺碗的最上面，当你拿碗的时候也是只能从最上面拿。这个如同队列的消费特性（队列的特性是先进先出，先进后出，道理是一样的）。<br><img src="/Laravel消息队列/img/1.png"></p><h5 id="为什么要使用消息队列？"><a href="#为什么要使用消息队列？" class="headerlink" title="为什么要使用消息队列？"></a>为什么要使用消息队列？</h5><ul><li>提高系统性能（削峰，减少响应时间）。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 假设你有一个这样的接口</span><br><span class="line"># 新用户注册发送邮件验证码</span><br><span class="line">public function SendMailCode(Request $request)&#123;</span><br><span class="line">    $mail = $request-&gt;input(&apos;mail);</span><br><span class="line">    SendReminderEmail::dispatch($mail); // 把邮箱加入队列</span><br><span class="line">    return &apos;验证码发送成功，请注意查收！&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;假设注册接口的并发在1秒100，在使用队列的情况下发送邮件这个操作是异步的，也就是说当第100名用户点击获取验证码后立刻就能获得响应，无需等待前99名所有邮件发送成功后才能得到相应，这就是不阻塞。<br>当<code>SendReminderEmail::dispatch($mail)</code>执行之后立刻就会执行 <code>return &#39;验证码发送成功，请注意查收！&#39;</code>，控制器不需要知道邮件是否发送成功，减少了阻塞的等待时间。</p><ul><li>降低系统的耦合性。<br>传统写法<img src="/Laravel消息队列/img/3.png">消息队列（MQ）写法<img src="/Laravel消息队列/img/4.png"><h5 id="消息队列（MQ）的优缺点"><a href="#消息队列（MQ）的优缺点" class="headerlink" title="消息队列（MQ）的优缺点"></a>消息队列（MQ）的优缺点</h5></li><li>优点：上边已经讲过了。</li><li>缺点：<br>&emsp; (1)系统可用性降低:可以看出引入了MQ之后，如果MQ挂了相当于整个日志系统也随之崩溃。<br>&emsp; (2)系统复杂性提高:引入MQ增加了维护系统的工作量，出现问题的可能性会更高。<br>&emsp; (3)一致性问题。</li></ul><h4 id="队列的应用"><a href="#队列的应用" class="headerlink" title="队列的应用"></a>队列的应用</h4><p>&emsp;Laravel中的消息队列就非常简单了，他可以设置驱动和执行方式。</p><h5 id="安装扩展"><a href="#安装扩展" class="headerlink" title="安装扩展"></a>安装扩展</h5><ul><li>aws/aws-sdk-php ~3.0</li><li>pda/pheanstalk ~3.0</li><li>predis/predis ~1.0</li></ul><h5 id="生成任务类"><a href="#生成任务类" class="headerlink" title="生成任务类"></a>生成任务类</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:job SendReminderEmail</span><br></pre></td></tr></table></figure><h5 id="任务类结构"><a href="#任务类结构" class="headerlink" title="任务类结构"></a>任务类结构</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Jobs</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>\<span class="title">Queueable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Queue</span>\<span class="title">ShouldQueue</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Bus</span>\<span class="title">Dispatchable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Queue</span>\<span class="title">InteractsWithQueue</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Queue</span>\<span class="title">SerializesModels</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SendReminderEmail</span> <span class="keyword">implements</span> <span class="title">ShouldQueue</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Dispatchable</span>, <span class="title">InteractsWithQueue</span>, <span class="title">Queueable</span>, <span class="title">SerializesModels</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $id; <span class="comment">// 接收外部传入的参数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new job instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id = $id; <span class="comment">// 接收外部传入的参数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Execute the job.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'jobsss'</span> . <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="加入队列"><a href="#加入队列" class="headerlink" title="加入队列"></a>加入队列</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">SendReminderEmail</span>;</span><br><span class="line">SendReminderEmail::dispatch($id); <span class="comment">// 加入队列</span></span><br><span class="line">ehco <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h5 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h5><p>&emsp;（1）当我未开启消息队列服务的情况下，直接请求接口，会返回1。<br>&emsp;（2）开启消息队列<br><img src="/Laravel消息队列/img/5.png"></p><h4 id="消息队列的选择"><a href="#消息队列的选择" class="headerlink" title="消息队列的选择"></a>消息队列的选择</h4><p>&emsp;一般情况下大部分业务都使用的是redis的消息队列。加入你们公司业务量非常大，几千万甚至几亿就必须考虑使用其他的MQ工具。如<code>ActiveMQ</code>、<code>RabbitMQ</code>、<code>RocketMQ</code>、<code>Kafka</code>。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>&emsp;Laravel的消息队列应用比较简单且非常的好用，建议大家可以尝试一下。具体可以看<a href="https://learnku.com/docs/laravel/6.x/queues/5168" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
      
      
      
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>架构之路-mysql主从复制配置篇</title>
      <link href="/%E6%9E%B6%E6%9E%84%E4%B9%8B%E8%B7%AF-mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E9%85%8D%E7%BD%AE%E7%AF%87/"/>
      <url>/%E6%9E%B6%E6%9E%84%E4%B9%8B%E8%B7%AF-mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E9%85%8D%E7%BD%AE%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h4 id="前篇回忆"><a href="#前篇回忆" class="headerlink" title="前篇回忆"></a>前篇回忆</h4><p>上一篇介绍了主从复制的搭建的基础流程，为这篇的配置做了铺垫。便于理解是这篇最大的亮点，说实话经过亲手尝试了主从复制之后，感觉这个东西确实不难，就简单的改几个配置就可以搞定，但是作为高级程序优化的一部分，学习还是很有必要的。<br><a id="more"></a></p><h4 id="配置介绍"><a href="#配置介绍" class="headerlink" title="配置介绍"></a>配置介绍</h4><h5 id="确认环境"><a href="#确认环境" class="headerlink" title="确认环境"></a>确认环境</h5><p>1.服务器1号：192.168.22.130（主库服务器）<br><img src="/架构之路-mysql主从复制配置篇/img/1.png"><br>2.服务器2号：192.168.22.128（从库服务器）<br><img src="/架构之路-mysql主从复制配置篇/img/2.png"></p><h5 id="主库配置"><a href="#主库配置" class="headerlink" title="主库配置"></a>主库配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置主库标识（这里数字随意，但是一定要比从库配置的数字大，必须是数字）</span></span><br><span class="line">server_id=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启日志功能&amp;配置日志文件</span></span><br><span class="line">log_bin=master_log</span><br><span class="line"><span class="meta">#</span><span class="bash"> 保存退出&amp;重启mysql服务</span></span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><img src="/架构之路-mysql主从复制配置篇/img/3.png"><h5 id="配置从库连接用户"><a href="#配置从库连接用户" class="headerlink" title="配置从库连接用户"></a>配置从库连接用户</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登陆mysql</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="comment"># 进入mysql库</span></span><br><span class="line">use mysql</span><br><span class="line"><span class="comment"># 新增一个用户，并且绑定这个用户只能从192.168.22.128这个IP访问</span></span><br><span class="line">grant all privileges on *.* to <span class="string">'slave'</span>@<span class="string">'192.168.22.128'</span> identified by <span class="string">'slave123'</span> with grant option;</span><br><span class="line"><span class="comment"># 刷新权限</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="comment"># 这里要注意，真实的正式环境配置需要规定从库的连接IP，不能设置为*。</span></span><br><span class="line"><span class="comment"># 密码不能设置过于简单，最少是字母和数字组合的6位，否则会报错。</span></span><br></pre></td></tr></table></figure><p>查看主库状态<code>show master status</code><br><img src="/架构之路-mysql主从复制配置篇/img/4.png"><br>这里的<code>File</code>就是主库的<code>binlog</code>文件。</p><h5 id="从库配置"><a href="#从库配置" class="headerlink" title="从库配置"></a>从库配置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line"><span class="comment"># 这里只需要配置一个标识就行(一定要比主库的标识数字小)</span></span><br><span class="line">server_id=2</span><br><span class="line"><span class="comment"># 重启mysql服务</span></span><br><span class="line">systemctl restart mysqld</span><br><span class="line"><span class="comment"># 关闭slave</span></span><br><span class="line">stop slave</span><br><span class="line"><span class="comment"># 给从库配置主库参数</span></span><br><span class="line">mysql&gt; change master to</span><br><span class="line">-&gt; master_host=<span class="string">"ip地址"</span>，</span><br><span class="line">-&gt; master_user=<span class="string">"授权时指定的用户名"</span>，</span><br><span class="line">-&gt; master_password=<span class="string">"用户密码"</span>，</span><br><span class="line">-&gt; master_log_file=<span class="string">"binlog日志"</span>，</span><br><span class="line">-&gt; master_log_pos=偏移量；</span><br><span class="line"><span class="comment"># 重启从库服务</span></span><br><span class="line">start slave</span><br><span class="line"><span class="comment"># 测试是否正常连接</span></span><br><span class="line">show slave status \G;</span><br><span class="line"><span class="comment"># 如果报错error connecting to master 'repluse@192.168.22.130:3306' - retry-time: 60 retries:1</span></span><br><span class="line"><span class="comment"># 请检查密码是不是配置错了</span></span><br></pre></td></tr></table></figure><h5 id="最后测试同步"><a href="#最后测试同步" class="headerlink" title="最后测试同步"></a>最后测试同步</h5><p>再主库创建一个数据表，然后刷新从库看看是否同步成功。<br><img src="/架构之路-mysql主从复制配置篇/img/5.gif"></p><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>总体流程下来很简单、流程也不复杂、出现奇怪问题的几率小。<br>如果在配置中遇到问题，可在评论区提问，我会第一时间回复。<br><strong>预告：下一篇是读写分离的配置</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>架构之路-mysql主从复制基础搭建篇</title>
      <link href="/%E6%9E%B6%E6%9E%84%E4%B9%8B%E8%B7%AF-mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%9F%BA%E7%A1%80%E6%90%AD%E5%BB%BA%E7%AF%87/"/>
      <url>/%E6%9E%B6%E6%9E%84%E4%B9%8B%E8%B7%AF-mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%9F%BA%E7%A1%80%E6%90%AD%E5%BB%BA%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文介绍的是在虚拟机上搭建，实际情况其实和真正的线上环境一毛一样，使用的系统是Centos 7。</p><h4 id="什么是主从复制？原理是什么？"><a href="#什么是主从复制？原理是什么？" class="headerlink" title="什么是主从复制？原理是什么？"></a>什么是主从复制？原理是什么？</h4><p>答：简单点理解，主从复制其实就是两个数据库数据的项目备份过程。其原理就是主库产生的操作都会生成<code>binlog</code>传入从库，从库通过<code>I/O</code>线程把<code>binlog</code>写入<code>relaylog</code>，然后从库创建<code>I/O</code>线程执行<code>relaylog</code>进行数据备份。<br><a id="more"></a></p><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><img src="/架构之路-mysql主从复制基础搭建篇/img/1.png"><h4 id="为什么要做主从复制？"><a href="#为什么要做主从复制？" class="headerlink" title="为什么要做主从复制？"></a>为什么要做主从复制？</h4><p>答：一方面是为了备份数据，防止数据丢失和破坏，另一方面是为读写分离做铺垫。</p><h4 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h4><h5 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h5><p>首先在本地安装虚拟机，我个人比较推荐 <code>VMware Workstation Pro</code>，当然也可以是使用其他的。<br>虚拟机的安装就不做介绍了，无非都是下一步下一步。安装好之后在需要下载对用的系统镜像，因为本文主要是在<code>Centos</code>上做演示，所以我就下载了<code>Centos</code>的镜像，但是无法分享给大家，因为太大了，足足<code>4G</code>。</p><p>安装好之后新建两个虚拟机(怎么新建虚拟机就不做介绍了):<br><img src="/架构之路-mysql主从复制基础搭建篇/img/2.png"></p><h5 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h5><p>注意：尽量两个虚拟机上的mysql版本保持一直，避免出现不可预知的错误。<br>我安装的版本是5.7.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入</span></span><br><span class="line">cd /usr/local/src</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载rpm包</span></span><br><span class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装rpm</span></span><br><span class="line">rpm -ivh mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 mysql-server</span></span><br><span class="line">yum install -y mysql-server</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动 </span></span><br><span class="line">systemctl start mysqld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置开机自启</span></span><br><span class="line">systemctl enable mysqld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 登陆mysql</span></span><br><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure></p><p>因为5.7之后的版本都是禁止匿名登陆的，你可以通过查看密码并登陆，然后修改密码，或者直接修改<code>my.cnf</code>来禁止登陆验证。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/mysqld.log|grep 'A temporary password'</span><br></pre></td></tr></table></figure></p><p>因为系统给我的默认密码含有一些特殊符号，我没法输入，我只能使用第二种方法：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi \etc\my.cnf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在最后增加一行</span></span><br><span class="line">skip-grant-tables=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 登陆mysql，刷新权限</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改密码</span></span><br><span class="line">use mysql;</span><br><span class="line">update user set password='password' where user='root'；</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改成功后再次刷新权限</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 最后重启一下mysql服务</span></span><br></pre></td></tr></table></figure></p><h5 id="本地连接虚拟机上的mysql"><a href="#本地连接虚拟机上的mysql" class="headerlink" title="本地连接虚拟机上的mysql"></a>本地连接虚拟机上的mysql</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看IP</span></span><br><span class="line">ifconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在本地Cmd中ping这个IP</span></span><br></pre></td></tr></table></figure><h5 id="使用telnet测试mysql连接状态"><a href="#使用telnet测试mysql连接状态" class="headerlink" title="使用telnet测试mysql连接状态"></a>使用telnet测试mysql连接状态</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.22.130 3360</span><br></pre></td></tr></table></figure><h5 id="错误的情况（因我这里是好的，所以我把3306填成了3360）"><a href="#错误的情况（因我这里是好的，所以我把3306填成了3360）" class="headerlink" title="错误的情况（因我这里是好的，所以我把3306填成了3360）"></a>错误的情况（因我这里是好的，所以我把3306填成了3360）</h5><img src="/架构之路-mysql主从复制基础搭建篇/img/3.png"><h5 id="检查虚拟机是否安装了iptables"><a href="#检查虚拟机是否安装了iptables" class="headerlink" title="检查虚拟机是否安装了iptables"></a>检查虚拟机是否安装了iptables</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止防火墙</span></span><br><span class="line">systemctl mask firewalld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止开机启动</span></span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果实在不行，还要把selinux关闭</span></span><br><span class="line">vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><img src="/架构之路-mysql主从复制基础搭建篇/img/4.png"><img src="/架构之路-mysql主从复制基础搭建篇/img/5.png"><p>再次使用<code>telnet 192.168.22.130 3306</code>还是报错上边图片所示时。</p><h5 id="配置权限"><a href="#配置权限" class="headerlink" title="配置权限"></a>配置权限</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个用户</span></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO 'daichong'@'%' IDENTIFIED BY 'daichong' WITH GRANT OPTION;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 刷新权限</span></span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里注意真实线上情况权限不能这么开</span></span><br></pre></td></tr></table></figure><img src="/架构之路-mysql主从复制基础搭建篇/img/6.png"><p>出现这个说明已经成功了</p><h5 id="使用navicat连接"><a href="#使用navicat连接" class="headerlink" title="使用navicat连接"></a>使用navicat连接</h5><img src="/架构之路-mysql主从复制基础搭建篇/img/7.png"><p>到这里基础的安装已经完成了，如果遇到问题可在评论中提问，下一篇介绍主从复制如何配置。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel模型关联查询与JOIN哪个性能好</title>
      <link href="/laravel%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E4%B8%8EJOIN%E5%93%AA%E4%B8%AA%E6%80%A7%E8%83%BD%E5%A5%BD/"/>
      <url>/laravel%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E4%B8%8EJOIN%E5%93%AA%E4%B8%AA%E6%80%A7%E8%83%BD%E5%A5%BD/</url>
      
        <content type="html"><![CDATA[<p><strong>初学Laravel</strong></p><p>最近接手一个新项目，整个项目完全看不到<code>left join</code>这样的写法，我打印了模型关联查询后的<code>sql</code>后发现跟常有的查询写法完全不同。<br>原谅我一直是个码农，几乎没见过这样的写法，一直想对比一下这样的写法和常用的写法性能方面到底有什么差别。<br><a id="more"></a><br><strong>一个小栗子</strong></p><p>模型关联生成的sql<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`comment`</span> <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`post_comment`</span> <span class="keyword">where</span> <span class="string">`comment`</span>.<span class="string">`id`</span> = <span class="string">`post_comment`</span>.<span class="string">`comment_id`</span> <span class="keyword">and</span> <span class="string">`post_id`</span> = ?)</span><br></pre></td></tr></table></figure></p><p>常用查询<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">`comment`</span>.id,<span class="string">`comment`</span>.info,<span class="string">`comment`</span>.user_id <span class="keyword">from</span> <span class="string">`comment`</span> <span class="keyword">left</span> <span class="keyword">join</span> post_comment <span class="keyword">on</span> <span class="string">`comment`</span>.id = <span class="string">`post_comment`</span>.comment_id <span class="keyword">where</span> post_comment.post_id = ?</span><br></pre></td></tr></table></figure></p><p>单从<code>sql</code>上看区别还是挺大的，再做码农的期间，最常听到的就是链表查询性能不好。但是还真不能确定这两个<code>sql</code>到底哪个性能好一点，没办法只能测试一下。</p><h3 id="posts-Tables"><a href="#posts-Tables" class="headerlink" title="posts Tables"></a>posts Tables</h3><table><thead><tr><th style="text-align:left">id</th><th style="text-align:center">title</th><th style="text-align:right">time</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">模型关联查询</td><td style="text-align:right">2019-11-08</td></tr><tr><td style="text-align:left">2</td><td style="text-align:center">left join 查询</td><td style="text-align:right">2019-11-08</td></tr></tbody></table><h3 id="comment-Tables"><a href="#comment-Tables" class="headerlink" title="comment Tables"></a>comment Tables</h3><table><thead><tr><th style="text-align:left">id</th><th style="text-align:center">info</th><th style="text-align:right">time</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">模型关联查询的性能好</td><td style="text-align:right">2019-11-08</td></tr><tr><td style="text-align:left">2</td><td style="text-align:center">left join 查询的性能好</td><td style="text-align:right">2019-11-08</td></tr><tr><td style="text-align:left">3</td><td style="text-align:center">两个都挺好</td><td style="text-align:right">2019-11-08</td></tr></tbody></table><h3 id="post-comment-Tables"><a href="#post-comment-Tables" class="headerlink" title="post_comment Tables"></a>post_comment Tables</h3><table><thead><tr><th style="text-align:left">id</th><th style="text-align:center">post_id</th><th style="text-align:right">comment_id</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">1</td><td style="text-align:right">1</td></tr><tr><td style="text-align:left">2</td><td style="text-align:center">2</td><td style="text-align:right">2</td></tr><tr><td style="text-align:left">3</td><td style="text-align:center">3</td><td style="text-align:right">2</td></tr></tbody></table><p>为了避免争议，我添加了一些比较合理的数据。</p><h4 id="数据量"><a href="#数据量" class="headerlink" title="数据量"></a>数据量</h4><table><thead><tr><th style="text-align:left">posts</th><th style="text-align:center">comment</th><th style="text-align:right">post_comment</th></tr></thead><tbody><tr><td style="text-align:left">29999条</td><td style="text-align:center">29999条</td><td style="text-align:right">29999条</td></tr></tbody></table><h4 id="下面使用EXPLAIN进行分析"><a href="#下面使用EXPLAIN进行分析" class="headerlink" title="下面使用EXPLAIN进行分析"></a>下面使用EXPLAIN进行分析</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`comment`</span> <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`post_comment`</span> <span class="keyword">where</span> <span class="string">`comment`</span>.<span class="string">`id`</span> = <span class="string">`post_comment`</span>.<span class="string">`comment_id`</span> <span class="keyword">and</span> <span class="string">`post_id`</span> = <span class="number">2</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">select_type</th><th style="text-align:right">table</th><th style="text-align:right">partitions</th><th style="text-align:right">type</th></tr></thead><tbody><tr><td style="text-align:center">PRIMARY</td><td style="text-align:right">comment</td><td style="text-align:right">NULL</td><td style="text-align:right">ALL</td></tr><tr><td style="text-align:center">DEPENDENT SUBQUERY</td><td style="text-align:right">post_comment</td><td style="text-align:right">NULL</td><td style="text-align:right">ref</td></tr></tbody></table><table><thead><tr><th style="text-align:right">possible_keys</th><th style="text-align:right">key</th><th style="text-align:right">key_len</th><th style="text-align:right">ref</th></tr></thead><tbody><tr><td style="text-align:right">NULL</td><td style="text-align:right">NULL</td><td style="text-align:right">NULL</td><td style="text-align:right">NULL</td></tr><tr><td style="text-align:right">post_id,comment_id</td><td style="text-align:right">post_id</td><td style="text-align:right">5</td><td style="text-align:right">const</td></tr></tbody></table><table><thead><tr><th style="text-align:right">rows</th><th style="text-align:right">filtered</th><th style="text-align:right">Extra</th></tr></thead><tbody><tr><td style="text-align:right">29999</td><td style="text-align:right">100.00</td><td style="text-align:right">Using where</td></tr><tr><td style="text-align:right">1</td><td style="text-align:right">10.00</td><td style="text-align:right">Using where</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> <span class="string">`comment`</span>.id,<span class="string">`comment`</span>.info,<span class="string">`comment`</span>.user_id <span class="keyword">from</span> <span class="string">`comment`</span> <span class="keyword">left</span> <span class="keyword">join</span> post_comment <span class="keyword">on</span> <span class="string">`comment`</span>.id = <span class="string">`post_comment`</span>.comment_id <span class="keyword">where</span> post_comment.post_id = <span class="number">2</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">select_type</th><th style="text-align:center">table</th><th style="text-align:right">partitions</th></tr></thead><tbody><tr><td style="text-align:left">SIMPLE</td><td style="text-align:center">post_comment</td><td style="text-align:right">NULL</td></tr><tr><td style="text-align:left">SIMPLE</td><td style="text-align:center">comment</td><td style="text-align:right">NULL</td></tr></tbody></table><table><thead><tr><th style="text-align:right">type</th><th style="text-align:right">possible_keys</th><th style="text-align:right">key</th><th style="text-align:right">key_len</th></tr></thead><tbody><tr><td style="text-align:right">ref</td><td style="text-align:right">post_id,comment_id</td><td style="text-align:right">post_id</td><td style="text-align:right">5</td></tr><tr><td style="text-align:right">eq_ref</td><td style="text-align:right">PRIMARY</td><td style="text-align:right">PRIMARY</td><td style="text-align:right">4</td></tr></tbody></table><table><thead><tr><th style="text-align:right">ref</th><th style="text-align:right">rows</th><th style="text-align:right">filtered</th><th style="text-align:right">Extra</th></tr></thead><tbody><tr><td style="text-align:right">const</td><td style="text-align:right">1</td><td style="text-align:right">100.00</td><td style="text-align:right">Using where</td></tr><tr><td style="text-align:right">test.post_comment.comment_id</td><td style="text-align:right">1</td><td style="text-align:right">100.00</td><td style="text-align:right">NULL</td></tr></tbody></table><p>从上边的<code>EXPLAIN</code>结果来看，<code>left join</code>比模型关联的写法效率高太多了，之后我在<code>laravel</code>社区也发布了相关的提问，得到的结论是<code>数据量大的时候用JOIN，数据量小的时候用模型</code>。</p><p>从得的的结论来看，模型并适合大数据查询，但是对一些新增、修改、删除操作提供了很好的效果！</p>]]></content>
      
      
      
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel模型关联</title>
      <link href="/laravel%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94/"/>
      <url>/laravel%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94/</url>
      
        <content type="html"><![CDATA[<p><b>一对一</b></p><p>&emsp;什么是一对多？</p><p>&emsp;在程序角度讲：一对多基本上都是用来描述两个数据表之间的关系。</p><p>&emsp;假设现有两个数据表：（1）文章表posts （2）评论表comment。一个文章可以有多个评论，但一个评论只能属于一个文章，相对于评论来说它与文章的关系是多对一，相对与文章来说它与评论的关系是一对多，这也就是laravel里反向关联的基础。</p><p><em>文章表posts</em></p><table><th>id</th><th>title</th><th>time</th><tr><td>1</td><td>什么是一对一？</td><td>2019-11-07</td></tr><tr><td>2</td><td>什么是一对多？</td><td>2019-11-08</td></tr><tr><td>3</td><td>什么是多对多？</td><td>2019-11-06</td></tr></table><br><a id="more"></a><br><br><em>评论表comment</em><br><br><table><th>id</th><th>info</th><th>user_id</th><tr><td>1</td><td>我知道什么是一对一。</td><td>10086</td></tr><tr><td>2</td><td>我知道什么是一对多。</td><td>10085</td></tr><tr><td>3</td><td>我知道什么是多对多。</td><td>10084</td></tr><td>4</td><td>这谁不知道啊！</td><td>10084</td></table><p><em>中间表posts_comment（也可以叫做关系表）</em></p><table><th>id</th><th>post_id</th><th>comment_id</th><tr><td>1</td><td>1</td><td>1</td></tr><tr><td>2</td><td>2</td><td>2</td></tr><tr><td>3</td><td>3</td><td>3</td></tr><tr><td>4</td><td>3</td><td>4</td></tr></table><p>&emsp;从表的结构可以看出来，ID=1、2的文章只有一条评论，ID=3的文章有两条评论。</p><p>&emsp;那么这是要有个业务，已知文章的ID=3，请使用laravel的模型关联找出该文章下的所有评论。</p><p>&emsp;首先确认两个表之间的关系，一个评论在中间表只有一条数据，中间表里的comment_id肯定是唯一的，不可能出现一个评论同时属于两个文章，所以它们之间的关系是<em>一对一</em>。<a>但是，你会发现使用hasMany(多对多)关联方法获取的数据居然是一样的</a>。</p><figure class="highlight plain"><figcaption><span>模型关联</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 一对多写法</span><br><span class="line">public function comments()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;hasMany(&apos;App\Models\PostComment&apos;, &apos;comment_id&apos;, &apos;id&apos;);</span><br><span class="line">&#125;</span><br><span class="line"># 一对一写法</span><br><span class="line">public function comment()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;hasOne(&apos;App\Models\PostComment&apos;, &apos;comment_id&apos;, &apos;id&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>查询写法使用（with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public function list()</span><br><span class="line">&#123;</span><br><span class="line">    $postId = 3;</span><br><span class="line">    $data = \App\Models\Comment::with(&apos;comments&apos;)-&gt;whereHas(&quot;comments&quot;, function ($query) use ($postId) &#123;</span><br><span class="line">        return $query-&gt;where(&quot;post_id&quot;, $postId);</span><br><span class="line">    &#125;)-&gt;get();</span><br><span class="line">    dump($data-&gt;toArray());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>获取的数据结果（使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"># with(&apos;comments);</span><br><span class="line">array:2 [▼</span><br><span class="line">  0 =&gt; array:4 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 3</span><br><span class="line">    &quot;info&quot; =&gt; &quot;\t我知道什么是多对多&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">    &quot;comments&quot; =&gt; array:1 [▼</span><br><span class="line">      0 =&gt; array:3 [▼</span><br><span class="line">        &quot;id&quot; =&gt; 3</span><br><span class="line">        &quot;post_id&quot; =&gt; 3</span><br><span class="line">        &quot;comment_id&quot; =&gt; 3</span><br><span class="line">      ]</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">  1 =&gt; array:4 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 4</span><br><span class="line">    &quot;info&quot; =&gt; &quot;这谁不知道啊！&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">    &quot;comments&quot; =&gt; array:1 [▼</span><br><span class="line">      0 =&gt; array:3 [▼</span><br><span class="line">        &quot;id&quot; =&gt; 4</span><br><span class="line">        &quot;post_id&quot; =&gt; 3</span><br><span class="line">        &quot;comment_id&quot; =&gt; 4</span><br><span class="line">      ]</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"># with(&apos;comment);</span><br><span class="line">array:2 [▼</span><br><span class="line">  0 =&gt; array:4 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 3</span><br><span class="line">    &quot;info&quot; =&gt; &quot;\t我知道什么是多对多&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">    &quot;comment&quot; =&gt; array:3 [▼</span><br><span class="line">      &quot;id&quot; =&gt; 3</span><br><span class="line">      &quot;post_id&quot; =&gt; 3</span><br><span class="line">      &quot;comment_id&quot; =&gt; 3</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">  1 =&gt; array:4 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 4</span><br><span class="line">    &quot;info&quot; =&gt; &quot;这谁不知道啊！&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">    &quot;comment&quot; =&gt; array:3 [▼</span><br><span class="line">      &quot;id&quot; =&gt; 4</span><br><span class="line">      &quot;post_id&quot; =&gt; 3</span><br><span class="line">      &quot;comment_id&quot; =&gt; 4</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>执行的SQL（使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 两次sql是一样的</span><br><span class="line">array:2 [▼</span><br><span class="line">  0 =&gt; array:3 [▼</span><br><span class="line">    &quot;query&quot; =&gt; &quot;select * from `comment` where exists (select * from `post_comment` where `comment`.`id` = `post_comment`.`comment_id` and `post_id` = ?)&quot;</span><br><span class="line">    &quot;bindings&quot; =&gt; array:1 [▶]</span><br><span class="line">    &quot;time&quot; =&gt; 12.67</span><br><span class="line">  ]</span><br><span class="line">  1 =&gt; array:3 [▼</span><br><span class="line">    &quot;query&quot; =&gt; &quot;select * from `post_comment` where `post_comment`.`comment_id` in (3, 4)&quot;</span><br><span class="line">    &quot;bindings&quot; =&gt; []</span><br><span class="line">    &quot;time&quot; =&gt; 0.21</span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&emsp;我们分析一下laravel底层的处理逻辑，从上边的sql可以看出使用模型关联第一步会使用一个嵌套查询找出comment在post_comment里存在的结果集，最终的得到的结果是3、4。随后会做一个IN查询得到最终comment.id=3、4的数据最后合并成结果集返回。</p><figure class="highlight plain"><figcaption><span>查询写法使用（不使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public function list()</span><br><span class="line">&#123;</span><br><span class="line">    $postId = 3;</span><br><span class="line"></span><br><span class="line">    $data = \App\Models\Comment::whereHas(&quot;comment&quot;, function ($query) use ($postId) &#123;</span><br><span class="line">        return $query-&gt;where(&quot;post_id&quot;, $postId);</span><br><span class="line">    &#125;)-&gt;get();</span><br><span class="line">    dump($data-&gt;toArray());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>执行的SQL（不使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 两次执行sql也是一样的</span><br><span class="line">array:1 [▼</span><br><span class="line">  0 =&gt; array:3 [▼</span><br><span class="line">    &quot;query&quot; =&gt; &quot;select * from `comment` where exists (select * from `post_comment` where `comment`.`id` = `post_comment`.`comment_id` and `post_id` = ?)&quot;</span><br><span class="line">    &quot;bindings&quot; =&gt; array:1 [▶]</span><br><span class="line">    &quot;time&quot; =&gt; 2.82</span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>查询的结果（不使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 得到的结果也是一样的</span><br><span class="line">array:2 [▼</span><br><span class="line">  0 =&gt; array:3 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 3</span><br><span class="line">    &quot;info&quot; =&gt; &quot;\t我知道什么是多对多&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">  ]</span><br><span class="line">  1 =&gt; array:3 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 4</span><br><span class="line">    &quot;info&quot; =&gt; &quot;这谁不知道啊！&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&emsp;两种写法的端异想必大家都能看得出来，就不再介绍了。</p><p><b>那么问题来了，为什么要使用模型关联呢？</b></p><p>&emsp;假设某一个文章被评论了，在不使用模型关联的情况下需要这样写：</p><figure class="highlight plain"><figcaption><span>普通写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$mode = new \App\Models\Comment();</span><br><span class="line">$mode-&gt;info = &apos;测试&apos;;</span><br><span class="line">$mode-&gt;user_id = 11;</span><br><span class="line">$mode-&gt;save();</span><br><span class="line"></span><br><span class="line">\App\Models\PostComment::create([</span><br><span class="line">  &apos;post_id&apos; =&gt; 3,</span><br><span class="line">  &apos;comment_id&apos; =&gt; $mode-&gt;id</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>模型关联写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$mode = new \App\Models\Comment();</span><br><span class="line">$mode-&gt;info = &apos;测试&apos;;</span><br><span class="line">$mode-&gt;user_id = 11;</span><br><span class="line">$mode-&gt;save();</span><br><span class="line"></span><br><span class="line">$mode-&gt;comment()-&gt;create([</span><br><span class="line">    &apos;post_id&apos; =&gt; 3,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><p>&emsp;而且我的公司有规定不能使用left join写法，而且模型中不允许写有关业务的代码，这样大大限制了随心所欲开发，降低了项目的维护成本。并且在使用模型关联后，一切的代码变得简单了，可读性提高，倒是性能这块我没有真正的测试过，之后肯定会研究一下。</p>]]></content>
      
      
      
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue+element实战（入门篇 一）</title>
      <link href="/vue-element%E5%AE%9E%E6%88%98%EF%BC%88%E5%85%A5%E9%97%A8%E7%AF%87%EF%BC%89/"/>
      <url>/vue-element%E5%AE%9E%E6%88%98%EF%BC%88%E5%85%A5%E9%97%A8%E7%AF%87%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><b>我为什么会学vue？</b></p><p>&emsp;学Vue之前一直觉得它好难，首先源代码看不懂，对于我一个主要是做PHP后端来说，看见那些import还有哪些花里胡哨的语法，真的是太难看懂了。<br><img src="/vue-element实战（入门篇）/img/vue.jpg"><br>&emsp;后来在机缘巧合的进了一家后台是用vue+element搭建的公司，因为公司的前端就一个，关键还是个妹子，也不好意给她增加工作量，基本上管理后台的后端代码和前端代码都需要我来写。</p><p>&emsp;好在框架已经搭建好了，我只需要写一些数据交互和数据渲染。</p><p>&emsp;更深入的了解Vue的设计思想点击这里： <a href="https://cn.vuejs.org/" target="_blank" rel="noopener">Vue官网</a>、<a href="https://www.cnblogs.com/baiyang2292/p/11172675.html" target="_blank" rel="noopener">Vue设计思想</a>。<br><a id="more"></a></p><p><b>vue到底难不难？</b></p><p>&emsp;从我真正接触vue来说，想真正把vue摸透确实很难，但是只想学会怎么用vue搭建后台管理系统这倒不难。</p><p>&emsp;当然这需要你有点前端的基础（html\css\js），在没有前端的基础情况下，入门vue确实有点难。</p><p><b>有一定前端的基础的情况下，怎么快速的入门vue？</b></p><p>&emsp;首先你要知道vue+elementUi或者其他ui开发的核心是什么？</p><p>&emsp;简单的举个栗子：</p><figure class="highlight js"><figcaption><span>小栗子</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-table :data=<span class="string">"tableData"</span>&gt;</span><br><span class="line">      &lt;el-table-column prop=<span class="string">"date"</span> label=<span class="string">"日期"</span>&gt;&lt;<span class="regexp">/el-table-column&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-table-column prop="name" label="姓名"&gt;&lt;/</span>el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=<span class="string">"address"</span> label=<span class="string">"地址"</span>&gt;&lt;<span class="regexp">/el-table-column&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-table&gt;</span><br><span class="line">  &lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script&gt;</span></span><br><span class="line"><span class="regexp">    export default &#123;</span></span><br><span class="line"><span class="regexp">      data() &#123;</span></span><br><span class="line"><span class="regexp">        return &#123;</span></span><br><span class="line"><span class="regexp">          tableData: [&#123;</span></span><br><span class="line"><span class="regexp">            date: '2016-05-02',</span></span><br><span class="line"><span class="regexp">            name: '王小虎',</span></span><br><span class="line"><span class="regexp">            address: '上海市普陀区金沙江路 1518 弄'</span></span><br><span class="line"><span class="regexp">          &#125;, &#123;</span></span><br><span class="line"><span class="regexp">            date: '2016-05-04',</span></span><br><span class="line"><span class="regexp">            name: '王小虎',</span></span><br><span class="line"><span class="regexp">            address: '上海市普陀区金沙江路 1517 弄'</span></span><br><span class="line"><span class="regexp">          &#125;, &#123;</span></span><br><span class="line"><span class="regexp">            date: '2016-05-01',</span></span><br><span class="line"><span class="regexp">            name: '王小虎',</span></span><br><span class="line"><span class="regexp">            address: '上海市普陀区金沙江路 1519 弄'</span></span><br><span class="line"><span class="regexp">          &#125;, &#123;</span></span><br><span class="line"><span class="regexp">            date: '2016-05-03',</span></span><br><span class="line"><span class="regexp">            name: '王小虎',</span></span><br><span class="line"><span class="regexp">            address: '上海市普陀区金沙江路 1516 弄'</span></span><br><span class="line"><span class="regexp">          &#125;]</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><img src="/vue-element实战（入门篇）/img/table.png"><p>&emsp;从代码可以看出Table的数据来源是Js里tableData数组，它们是通过Vue的特性双向绑定来实现的<a>:data=”tableData”</a>，字段通过<a>:prop=”字段名”</a>。</p><p>&emsp;那么在真实数据交互的情况下就这么写：</p><figure class="highlight js"><figcaption><span>小栗子</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">      data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          tableData: []</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      created() &#123; <span class="comment">// 页面创建后执行</span></span><br><span class="line">        <span class="keyword">this</span>.getList(); <span class="comment">// 查询数据</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123; <span class="comment">// 方法集合</span></span><br><span class="line">        getList()&#123;</span><br><span class="line">          axios(&#123; <span class="comment">// 首选你要安装 axios</span></span><br><span class="line">             method:<span class="string">'get'</span>,</span><br><span class="line">             url:<span class="string">'请求地址'</span></span><br><span class="line">          &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>)</span>&#123;</span><br><span class="line">              <span class="comment">// 请求成功，把数据赋值给tableData</span></span><br><span class="line">              <span class="keyword">this</span>.tableData = resp.data</span><br><span class="line">          &#125;).catch(<span class="function"><span class="params">resp</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="comment">// 请求失败</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;就这么简单，vue+element+axios数据交互和渲染已经完成了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Navicat Premium 12.1安装与激活</title>
      <link href="/Navicat-Premium-12-1%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB/"/>
      <url>/Navicat-Premium-12-1%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<p><b>前言</b></p><p>&emsp;<a>（1）即将国庆，在我回老家之前给大家分享一波福利！</a></p><p>&emsp;（2）后端开发离不开数据库的管理，为了更加方便的管理数据，经常会使用一些数据库管理工。如<a href="https://www.phpmyadmin.net" target="_blank" rel="noopener">phpMyAdmin</a>、<a href="https://www.webyog.com/" target="_blank" rel="noopener">SQLyog</a>、<a href="https://dev.mysql.com/downloads/workbench/" target="_blank" rel="noopener">Workbench</a>、 <a href="https://www.navicat.com.cn/" target="_blank" rel="noopener">Navicat</a>等等。</p><p>&emsp;（3）但我个人觉得从UI、功能上来说最优的是<a>Navicat</a>。</p><p>&emsp;（4）具体的功能就不做介绍了，本篇就教大家怎么破解使用最新版的<a>Navicat</a>，而且是破解官方版的哦，绝对不是那种从乱七八糟的网站上下载来的。</p><p>&emsp;（5）安全可靠，好用，<a>官方收费3个月1699人民币</a>，马上能免费用到他，想想就觉得兴奋。<br><a id="more"></a></p><p><b>下载&amp;安装</b></p><p>&emsp;（1）官方最新版下载地址:<a href="https://www.navicat.com.cn/download/navicat-premium" target="_blank" rel="noopener">Navicat Premium 12.1</a>。</p><p>&emsp;（2）注册机下载地址： <a href="https://pan.baidu.com/s/1ADnw3MrVnzV4j1-MTLv1qg" target="_blank" rel="noopener">Navicat注册机</a>。</p><p><b>破解</b></p><p>&emsp;（2）<a>Navicat Premium 12.1</a>安装步骤就不介绍了，直接都next就好了。</p><p>&emsp;（3）安装注册机（把杀毒软件全部退出）。</p><p>&emsp;（4）选择你对应的版本信息和语言。</p><img src="/Navicat-Premium-12-1安装与激活/img/p.png"><p>&emsp;（5）点击Patch选择Navicat安装目录下的navicat.exe。</p><img src="/Navicat-Premium-12-1安装与激活/img/p1.png"><p>&emsp;（6）点击Generate生成注册码。</p><img src="/Navicat-Premium-12-1安装与激活/img/p2.png"><p>&emsp;（7）把注册码复制到软件中，点击激活，这里会提示激活失败，然后咱们点击手动激活。</p><img src="/Navicat-Premium-12-1安装与激活/img/p4.png"><p>&emsp;（8）把请求码复制到注册机中，如下面的位置，然后点击Generate，把返回的激活码再复制回软件中，点击激活。</p><img src="/Navicat-Premium-12-1安装与激活/img/p5.png"><p>&emsp;（9）激活成功。</p><img src="/Navicat-Premium-12-1安装与激活/img/p6.png"><p><b>最后</b></p><p>&emsp;然后就尽情的使用吧！！！！哈哈哈。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>swoole+websocket实现聊天室功能</title>
      <link href="/swoole+websocket%E5%AE%9E%E7%8E%B0%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%8A%9F%E8%83%BD/"/>
      <url>/swoole+websocket%E5%AE%9E%E7%8E%B0%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p><b>基础介绍</b></p><p>&emsp;（1）<a href="https://baike.baidu.com/item/Swoole/3707136?fr=aladdin" target="_blank" rel="noopener">Swoole</a>是一个面向生产环境的 PHP 异步网络通信引擎，使 PHP 开发人员可以编写高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket 服务。Swoole 可以广泛应用于互联网、移动通信、企业软件、云计算、网络游戏、物联网（IOT）、车联网、智能家居等领域。 使用 PHP + Swoole 作为网络通信框架，可以使企业 IT 研发团队的效率大大提升。—<em>百度百科</em></p><p>&emsp;（2）<a href="https://baike.baidu.com/item/WebSocket/1953845?fr=aladdin" target="_blank" rel="noopener">WebSocket</a>是一种在单个TCP连接上进行全双工通信的协议。WebSocket通信协议于2011年被IETF定为标准RFC 6455，并由RFC7936补充规范。WebSocket API也被W3C定为标准。<br>WebSocket使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。 —<em>百度百科</em><br><a id="more"></a></p><p>&emsp;（3）那这篇的主题就是如何使用<a>Swoole</a>+<a>WebSocket</a>实现一个简易的聊天室。</p><p>&emsp;&emsp;熟悉网络通信协议的同学肯定不会陌生。</p><p><b>功能需求及问题处理</b></p><p>&emsp;web端：<br>&emsp;&emsp;（1）每次刷新都会生成一个唯一的ID(id值从1开始).<br>&emsp;&emsp;（2）第一次进入网站时会要求用户设置昵称并会与ID进行绑定。<br>&emsp;问题点：<br>&emsp;&emsp;（1）刷新页面后用户标识（ID）会重新生成，之前生成ID被弃用。<br>&emsp;&emsp;（2）websocket生成了新的用户ID,但是跟现在的无法形成关联关系。</p><p>&emsp;server端：<br>&emsp;（1）当用户进入聊天室后，发送广播给所有人并加入聊天群组（使用redis存储）。<br>&emsp;（2）当用户退出直播间后，发送广播给所有人并清除该用户的记录。<br>&emsp;（3）用户每发送一次消息都要形成新的记录广播给所有人。<br>&emsp;（4）用户生成新的昵称后把昵称推送给他。</p><p>&emsp;web端问题处理方法：<br>&emsp;（1）浏览器刷新时提醒用户刷新即将重新获得新的身份。<br>&emsp;（2）用户连接成功后记录用户name,每次连接把这个name带上，清除之前该name的绑定关系，形成新的关系。</p><p><b>演示地址</b></p><p>&emsp;<a href="http://swoole.daichongweb.cn" target="_blank" rel="noopener">聊天室演示</a></p><p><b>代码实现</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;RedisManager.php&quot;;</span><br><span class="line"></span><br><span class="line">$server = new Swoole\WebSocket\Server(&quot;0.0.0.0&quot;, 8877);</span><br><span class="line"></span><br><span class="line">// 客户端连接</span><br><span class="line">$server-&gt;on(&apos;open&apos;, function (Swoole\WebSocket\Server $server, $request) &#123;</span><br><span class="line">    //连接成功把当前在线的用户返回</span><br><span class="line">    $user_list = RedisConnect::getRedis()-&gt;hGetAll(&apos;message:user&apos;);</span><br><span class="line">    alone($server, $request-&gt;fd, [</span><br><span class="line">        &apos;type&apos; =&gt; &apos;first&apos;,</span><br><span class="line">        &apos;data&apos; =&gt; $user_list</span><br><span class="line">    ]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 接收客户端发送的消息</span><br><span class="line">$server-&gt;on(&apos;message&apos;, function (Swoole\WebSocket\Server $server, $frame) &#123;</span><br><span class="line">    $message_data = json_decode($frame-&gt;data, true);</span><br><span class="line">    $type = $message_data[&apos;type&apos;];</span><br><span class="line">    $data = $message_data[&apos;user_name&apos;];</span><br><span class="line">    if (isset($message_data[&apos;send_message&apos;])) &#123;</span><br><span class="line">        $user_message = $message_data[&apos;send_message&apos;];</span><br><span class="line">    &#125;</span><br><span class="line">    switch ($type) &#123;</span><br><span class="line">        case &apos;save_user&apos;:</span><br><span class="line">            $new_name = &apos;大厦单子&apos; . $frame-&gt;fd . &apos;号&apos;;</span><br><span class="line">            // 修改用户昵称</span><br><span class="line">            RedisConnect::getRedis()-&gt;hset(&apos;message:user&apos;, $frame-&gt;fd, $new_name);</span><br><span class="line"></span><br><span class="line">            // 把生成的用户昵称返回给他</span><br><span class="line">            alone($server, $frame-&gt;fd, [</span><br><span class="line">                &apos;type&apos; =&gt; &apos;new_name&apos;,</span><br><span class="line">                &apos;name&apos; =&gt; $new_name,</span><br><span class="line">                &apos;id&apos; =&gt; $frame-&gt;fd</span><br><span class="line">            ]);</span><br><span class="line"></span><br><span class="line">            // 广播消息给其他用户</span><br><span class="line">            groupSending($server, [</span><br><span class="line">                &apos;type&apos; =&gt; &apos;open&apos;,</span><br><span class="line">                &apos;name&apos; =&gt; $new_name,</span><br><span class="line">                &apos;id&apos; =&gt; $frame-&gt;fd</span><br><span class="line">            ]);</span><br><span class="line">            break;</span><br><span class="line">        case &apos;send_message&apos;:</span><br><span class="line">            $msg = [</span><br><span class="line">                &apos;id&apos; =&gt; $frame-&gt;fd,</span><br><span class="line">                &apos;user_name&apos; =&gt; $data,</span><br><span class="line">                &apos;message&apos; =&gt; $user_message,</span><br><span class="line">                &apos;type&apos; =&gt; &apos;message&apos;</span><br><span class="line">            ];</span><br><span class="line">            // 接受用户发送的消息</span><br><span class="line">            RedisConnect::getRedis()-&gt;lpush(&apos;message:user:say&apos;, $msg);</span><br><span class="line">            groupSending($server, $msg);</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 退出聊天室</span><br><span class="line">$server-&gt;on(&apos;close&apos;, function ($ser, $fd) &#123;</span><br><span class="line">    $user = RedisConnect::getRedis()-&gt;hget(&apos;message:user&apos;, $fd);</span><br><span class="line">    RedisConnect::getRedis()-&gt;hdel(&apos;message:user&apos;, $fd);</span><br><span class="line">    $msg = [</span><br><span class="line">        &apos;id&apos; =&gt; $fd,</span><br><span class="line">        &apos;user_name&apos; =&gt; $user,</span><br><span class="line">        &apos;message&apos; =&gt; &apos;退出聊天室&apos;,</span><br><span class="line">        &apos;type&apos; =&gt; &apos;close&apos;</span><br><span class="line">    ];</span><br><span class="line">    groupSending($ser, $msg, $fd);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 开启服务</span><br><span class="line">$server-&gt;start();</span><br><span class="line"></span><br><span class="line">// 群发消息</span><br><span class="line">function groupSending($server, $msg, $self = null)</span><br><span class="line">&#123;</span><br><span class="line">    foreach ($server-&gt;connections as $conn) &#123;</span><br><span class="line">        if ($conn == $self) break; //不再推送给当前退出的用户</span><br><span class="line">        $server-&gt;push($conn, json_encode($msg));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 单独发消息</span><br><span class="line">function alone($server, $fd, $msg)</span><br><span class="line">&#123;</span><br><span class="line">    $server-&gt;push($fd, json_encode($msg));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;聊天室&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">       *&#123;margin:0;padding:0&#125;.box&#123;width:602px;height:500px;margin:20px auto&#125;.body&#123;width:500px;height:500px;border:1px solid #333;padding:20px;box-sizing:border-box;float:right&#125;.title&#123;text-align:center;margin-top:10px&#125;.msg&#123;margin-top:20px;width:100%;text-align:left&#125;.message_box&#123;width:100%;height:90%;margin-top:10px;font-size:12px;overflow:hidden;overflow-y:auto&#125;.name&#123;font-weight:bold&#125;.right&#123;text-align:right&#125;.prompt&#123;width:600px;margin:0 auto&#125;.live&#123;width:100px;height:500px;float:left;border:1px solid #333;font-size:12px;text-align:center&#125;.live-box&#123;height:100%;overflow:hidden;overflow-y:auto&#125;.live-box p&#123;margin-top:10px&#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;body&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;title&quot;&gt;+++++++++++聊天室++++++++++++&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;message_box&quot; id=&quot;test&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;live&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;live-title&quot;&gt;在线人数&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;live-box&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;prompt&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; name=&quot;say&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;button&quot; value=&quot;发送&quot; id=&quot;send&quot;&gt;</span><br><span class="line">        &lt;!-- &lt;input type=&quot;button&quot; value=&quot;增加消息&quot; id=&quot;add&quot;&gt; --&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script src=&quot;jquery.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    window.onbeforeunload = function (event) &#123;</span><br><span class="line">        window.localStorage.clear();</span><br><span class="line">    &#125;;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        window.user_name = &apos;&apos;;</span><br><span class="line">        // 获取在线用户</span><br><span class="line">        if (!(&quot;WebSocket&quot; in window)) &#123;</span><br><span class="line">            alert(&quot;您的浏览器不支持 WebSocket!&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        // 连接</span><br><span class="line">        let ws = new WebSocket(&quot;ws://49.235.172.110:8877&quot;);</span><br><span class="line">        //连接成功</span><br><span class="line">        ws.onopen = function (event) &#123;</span><br><span class="line">            // 修改昵称</span><br><span class="line">            let user_info = &#123;</span><br><span class="line">                &apos;type&apos;: &apos;save_user&apos;,</span><br><span class="line">                &apos;user_name&apos;: &apos;&apos;,</span><br><span class="line">            &#125;;</span><br><span class="line">            ws.send(JSON.stringify(user_info));</span><br><span class="line">            console.log(&apos;连接成功&apos;, &apos;修改昵称成功&apos;);</span><br><span class="line">        &#125;;</span><br><span class="line">        ws.onmessage = function (evt) &#123;</span><br><span class="line">            let received_msg = JSON.parse(evt.data);</span><br><span class="line">            let type = received_msg[&apos;type&apos;];</span><br><span class="line">            switch (type) &#123;</span><br><span class="line">                case &apos;message&apos;:</span><br><span class="line">                    add_msg(received_msg);</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;close&apos;:</span><br><span class="line">                    $(&quot;.live-box&quot;).find(&apos;p[user=&apos; + received_msg[&apos;id&apos;] + &apos;]&apos;).remove();</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;connect&apos;:</span><br><span class="line">                    console.log(received_msg);</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;new_name&apos;:</span><br><span class="line">                    user_name = received_msg[&apos;name&apos;];</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;open&apos;:</span><br><span class="line">                    $(&apos;.live-box&apos;).append(&apos;&lt;p user=&quot;&apos; + received_msg[&apos;id&apos;] + &apos;&quot;&gt;&apos; + received_msg[&apos;name&apos;] + &apos;&lt;/p&gt;&apos;);</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;first&apos;:</span><br><span class="line">                    let data = received_msg[&apos;data&apos;];</span><br><span class="line">                    let str = &apos;&apos;;</span><br><span class="line">                    $.each(data, function (k, v) &#123;</span><br><span class="line">                        if (isNaN(v)) &#123;</span><br><span class="line">                            str += &apos;&lt;p user=&quot;&apos; + k + &apos;&quot;&gt;&apos; + v + &apos;&lt;/p&gt;&apos;;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    $(&apos;.live-box&apos;).append(str);</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // 发送消息</span><br><span class="line">        $(&quot;#send&quot;).click(function () &#123;</span><br><span class="line">            send_msg();</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        $(&quot;input[name=say]&quot;).bind(&quot;keydown&quot;, function (e) &#123;</span><br><span class="line">            var theEvent = e || window.event;</span><br><span class="line">            var code = theEvent.keyCode || theEvent.which || theEvent.charCode;</span><br><span class="line">            if (code == 13) &#123;</span><br><span class="line">                send_msg();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 发送消息</span><br><span class="line">        function send_msg() &#123;</span><br><span class="line">            var message = $(&apos;input[name=say]&apos;).val();</span><br><span class="line">            if (message !== &apos; &apos;) &#123;</span><br><span class="line">                var arr = &#123;</span><br><span class="line">                    &apos;type&apos;: &apos;send_message&apos;,</span><br><span class="line">                    &apos;user_name&apos;: user_name,</span><br><span class="line">                    &apos;send_message&apos;: message</span><br><span class="line">                &#125;;</span><br><span class="line">                ws.send(JSON.stringify(arr));</span><br><span class="line">            &#125;</span><br><span class="line">            $(&apos;input[name=say]&apos;).val(&apos; &apos;);</span><br><span class="line">            var ele = document.getElementById(&quot;test&quot;);</span><br><span class="line">            if (ele.scrollHeight &gt; ele.clientHeight) &#123;</span><br><span class="line">                ele.scrollTop = ele.scrollHeight + 100;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 增加消息</span><br><span class="line">        function add_msg(data) &#123;</span><br><span class="line">            let str = &apos;&lt;div class=&quot;msg&quot;&gt;&apos;;</span><br><span class="line">            str += &apos;&lt;span class=&quot;name&quot;&gt;&apos; + data[&apos;user_name&apos;] + &apos;&lt;/span&gt;:&apos;;</span><br><span class="line">            str += &apos;&lt;span class=&quot;text&quot;&gt;&apos; + data[&apos;message&apos;] + &apos;&lt;/span&gt;&lt;/div&gt;&apos;;</span><br><span class="line">            $(&apos;.message_box&apos;).append(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><b>总结</b></p><p>&emsp;这篇文章只是简单的介绍前后端如何实现通信，很多的细节问题没有进行处理。<br>&emsp;UI比较low，这里大家只看代码就好了…<br>&emsp;更多关于Swoole的功能还待探索…敬请期待…</p>]]></content>
      
      
      
        <tags>
            
            <tag> php扩展类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB性能测试-并发测试</title>
      <link href="/WEB%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95-%E5%B9%B6%E5%8F%91%E6%B5%8B%E8%AF%95/"/>
      <url>/WEB%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95-%E5%B9%B6%E5%8F%91%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p><b>前篇回忆：</b></p><p>&emsp;前两篇介绍了<a>redis</a>队列如何处理订单和<a>JMeter</a>的环境配置及安装方法，这篇根据程序开发的逻辑和习惯来解决几个问题：</p><p>&emsp;&emsp;（1）JMeter并发测试的基本使用。<br>&emsp;&emsp;（2）<a>redis</a>和<a>mysql</a>相比的性能差距如何？<br>&emsp;&emsp;（3）大量的并发和请求下<a>redis</a>、<a>mysql</a>、<a>nginx</a>各自会出现的问题？<br>&emsp;&emsp;（4）遇到并发带来各种各样的问题如何解决？<br><a id="more"></a></p><p><b>问题一：<sup>JMeter并发测试的基本使用<sup></sup></sup></b></p><p>&emsp;（1）设置系统语言：Options-&gt;Choose Lanuage 里选择适合你的语言。<br>&emsp;（2）添加线程组：<br><img src="/WEB性能测试-并发测试/img/plan.png"><br>&emsp;（3）设置线程属性：<br>&emsp;&emsp;线程数：也就是并发数。<br>&emsp;&emsp;Ramp-Up时间（秒）：并发时间，0为同时并发。<br>&emsp;&emsp;循环次数：重复次数。<br><img src="/WEB性能测试-并发测试/img/plan1.png"><br>&emsp;（4）添加HTTP请求：<br>&emsp;&emsp;协议：http或https。<br>&emsp;&emsp;服务器名称或IP：请求地址。<br>&emsp;&emsp;路径：要请求的路由或文件路径。<br>&emsp;&emsp;参数：添加请求参数。<br><img src="/WEB性能测试-并发测试/img/plan2.png"><br>&emsp;（5）添加察看结果树：可查看发送的数据，返回的结果等。<br><img src="/WEB性能测试-并发测试/img/plan3.png"><br>&emsp;（6）添加汇总报告：可查看错误率，吞吐量等。<br><img src="/WEB性能测试-并发测试/img/plan4.png"></p><p><b>问题二：<sup>大量的并发和请求下<a>redis</a>、<a>mysql</a>、<a>nginx</a>各自会出现的问题？<sup></sup></sup></b></p><p>&emsp;在同时并发2000的情况下（因为redis队列为异步，所以这里不考虑redis出列的性能问题）：<br>&emsp;<a>mysql</a>：错误率87.9%，成功条数241。<br><img src="/WEB性能测试-并发测试/img/plan5.png"><br>&emsp;<a>redis</a>：错误率0.35%，成功条数1993。<br><img src="/WEB性能测试-并发测试/img/plan5.png"><br>&emsp;总结：从以上结果可以看出在高并发场景下msyql扛不住压力错误率高。<br>&emsp;结论：redis在处理并发性能优于mysql。</p><p><b>问题三：大量的并发和请求下<a>redis</a>、<a>mysql</a>、<a>nginx</a>各自会出现的问题？</b></p><p>&emsp;3000并发循环请求3次相当于9000的次请求的情况下：<br>&emsp;&emsp;（1）nginx报错：<a>Too many open files</a>（打开的文件数超过限制nginx默认为1024）。<br>&emsp;&emsp;（2）redis报错：<a>RDB: 2 MB of memory used by copy-on-write</a>。<br>&emsp;&emsp;（3）mysql直接写入失败。</p><p><b>问题四：<sup>遇到并发带来各种各样的问题如何解决？<sup></sup></sup></b></p><p>&emsp;（1）<a>nginx错误分析：最大打开文件数超过限制</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看系统打开文件值 Max open files</span><br><span class="line">cat /proc/`ps -ef | grep nginx|grep -v grep|head -1|awk &apos;&#123;print $2&#125;&apos;`/limits</span><br><span class="line"># 修改</span><br><span class="line">vi /etc/systemd/ststem.conf</span><br><span class="line"># 修改两个值</span><br><span class="line">DefaultLimitNOFILE = 102400</span><br><span class="line">DefaultLimitNPROC = 102400</span><br><span class="line"># 随后重启系统</span><br></pre></td></tr></table></figure><br>&emsp;（2）<a>redis错误分析：保存频繁导致内存不够了。</a>（暂未找到最合适的方案）<br>&emsp;点击查看更详细的错误分析:<a href="https://yq.aliyun.com/articles/629296" target="_blank" rel="noopener">Redis-redis异常解决以及日常命令</a></p><p>&emsp;（3）<a>mysql</a>暂没找到方案。</p><p><b>总结：</b></p><p>&emsp;相同的配置&amp;高并发场景下<a>redis</a>比<a>mysql</a>要可靠很多，伴随着并发越来越高服务器、程序、数据库各方面的问题扑面而来，不要慌，这才是你真正需要学习的东西！生于忧患死于安乐，只有不断的处理问题，才能真正的驾驭程序！祝你早日成功！！！</p><p>&emsp;本文最高测试并发在3000循环次数为3次，服务器环境为lnmrp,系统配置为2核4G6M,因为redis的问题没有解决不能做更高的并发测试。并且还有一个redis的问题没有解决，待我研究几日说。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB性能测试-JMeter安装</title>
      <link href="/WEB%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95-JMeter%E5%AE%89%E8%A3%85/"/>
      <url>/WEB%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95-JMeter%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p><b>一、了解JMeter工具</b></p><p>&emsp;<a href="https://baike.baidu.com/item/Jmeter/3104456?fr=aladdin" target="_blank" rel="noopener">Apache JMeter</a>是 <a href="https://baike.baidu.com/item/apache/6265" target="_blank" rel="noopener">Apache</a>组织的开放源代码项目，是一个100%纯Java桌面应用，用于压力测试和性能测量。它最初被设计用于Web应用测试但后来扩展到其它测试领域。Apache JMeter可以用于对静态的和动态的资源（文件，Servlet，Perl脚本，Java对象，数据库和查询，FTP服务器或是其它资源）的性能进行测试。JMeter可以用于在服务器，网络或对象模拟繁重的负载来测试它们提供服务的受压能力或者分析不同压力条件下的总体性能情况。你可以使用JMeter提供的图形化界面，分析性能指标或者在高负载情况下测试你的服务器/脚本/对象。<br><a id="more"></a><br><b>二、JMeter的作用</b></p><p>&emsp;（1）能够对<a href="https://baike.baidu.com/item/http/243074?fr=aladdin" target="_blank" rel="noopener">HTTP</a>和<a href="https://baike.baidu.com/item/FTP%E5%8D%8F%E8%AE%AE/7651119" target="_blank" rel="noopener">FTP</a>服务器进行压力和性能测试，也可以对任何的数据库进行同样的测试（通过<a href="https://baike.baidu.com/item/JDBC" target="_blank" rel="noopener">JDBC</a>）。</p><p>&emsp;（2）完全多线程 框架允许通过多个线程并发取样和 通过单独的线程组对不同的功能同时取样。</p><p>&emsp;（3）在设计阶段，JMeter能够充当HTTP PROXY（代理）来记录IE/NETSCAPE的HTTP请求，也可以记录apache等WebServer的log文件来重现HTTP流量。当这些HTTP客户端请求被记录以后，测试运行时可以方便的设置重复次数和并发度（线程数）来产生巨大的流量。JMeter还提供可视化组件以及报表工具把量服务器在不同压力下的性能展现出来。</p><p><b>三、安装</b></p><p>&emsp;（1）JMeter是完全基于JAVA开发，首先要安装 <a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">JAVA JDK</a>。</p><p>&emsp;（2）安装<a href="http://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener">JMeter客户端</a>。</p><p><b>四、配置JAVA环境变量</b></p><p>&emsp;（1）右键 “我的电脑\属性”<sup>(第一步)</sup> 或 “控制面板\所有控制面板项\系统”<sup>(第一步)</sup> 找到 “高级系统设置”<sup>(第二步)</sup> 点击 “环境变量”<sup>(第三步)</sup>。</p><p>&emsp;（2）新建环境变量JAVA_HOME，值为JAVA安装的根目录。</p><img src="/WEB性能测试-JMeter安装/img/path.png"><p>&emsp;（3）新建环境变量CLASSPATH，值为JAVA安装目录下的lib/tools.jar和lib/dt.jar。</p><img src="/WEB性能测试-JMeter安装/img/path1.png"><p>&emsp;（4）修改系统变量的PATH值，增加为JAVA安装目录下的bin目录。</p><img src="/WEB性能测试-JMeter安装/img/path2.png"><p><b>五、配置JMeter环境变量</b></p><p>&emsp;（1）新建环境变量JMETER_HOME，值为JMeter的根目录。</p><img src="/WEB性能测试-JMeter安装/img/path3.png"><p>&emsp;（2）修改CLASSPATH，增加JMeter/lib/ApacheJMeter_core.jar和logkit-2.0.jar。</p><img src="/WEB性能测试-JMeter安装/img/path4.png"><p>&emsp;（3）找到JMeter/bin/JMeter.bat双击打开，如出现错误，检查是否有JMeter/lib/ApacheJMeter_core.jar这个文件，没有这个文件就是安装错误了，重新换个包安装。</p><p><b>六、打开成功演示</b></p><p>&emsp;随后会自动打开JMeter客户端。</p><img src="/WEB性能测试-JMeter安装/img/path5.png"><p><b>七、总结</b></p><p>&emsp;总体的安装还是比较简单的，就是步骤繁多，每一个步骤都不能漏，否则就会无法使用。</p><p>&emsp;下一篇将会介绍JMeter的基本使用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>消息队列（redis）-订单处理</title>
      <link href="/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%88redis%EF%BC%89-%E8%AE%A2%E5%8D%95%E5%A4%84%E7%90%86/"/>
      <url>/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%88redis%EF%BC%89-%E8%AE%A2%E5%8D%95%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><b>一、简单的介绍</b></p><p>&emsp;<a href="https://baike.baidu.com/item/Redis/6549233?fr=aladdin" target="_blank" rel="noopener">Redis</a>是一个开源的使用<a href="https://baike.baidu.com/item/c%E8%AF%AD%E8%A8%80/105958?fr=aladdin" target="_blank" rel="noopener">ANSI C语言</a>编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。<br>&emsp;<a href="https://www.php.net/manual/zh/book.mysqli.php" target="_blank" rel="noopener">MySQLi</a>是一个开源使用的 <a href="https://baike.baidu.com/item/mySQL/471251?fr=aladdin" target="_blank" rel="noopener">MySQL</a>连接扩展，用于对数据库的操作和管理。<br>&emsp;<a href="http://pecl.php.net/package/redis" target="_blank" rel="noopener">php-redis</a>是一个开源的使用C语言编写的php扩展，用于php连接、管理redis。<br><a id="more"></a><br><b>二、业务介绍</b></p><p>&emsp;某商城搞促销活动，会有大量的订单涌入数据库，每个订单15分钟未支付即为过期订单并且不能继续支付。</p><p><b>二、需求分析</b></p><p>&emsp;很显然此业务需求在不使用redis队列的情况下，大量的订单并发会造成阻塞，甚至有可能超时（php默认的超时时间为30s）。</p><p>&emsp;那么就会有以下步骤：<br>&emsp;&emsp;（1）用户下单后把数据直接写入消息队列（list）而不是数据库，写入队列成功即返回用户成功消息。<br>&emsp;&emsp;（2）创建订单队列：启动脚本来处理订单队列，逐一写入数据库，并设置一个key为订单号的hash过期时间为15分钟。<br>&emsp;&emsp;（3）用户支付时首先拿这个订单号去redis里查是存在，如存在订单状态为正常状态，否则为过期状态。<br>&emsp;&emsp;（4）订单支付成功队列：支付成功后，把订单数据写入另一个队列中，并启动脚本处理订单状态都为‘支付成功’的队列（如发送消息，修改订单状态等操作）。</p><p>&emsp;<a>注意：</a>这期间可能会出现数据量过大，订单创建的队列尚未执行完毕，订单支付成功后查找该订单却未找到(lpop)，那么就需要把这个未找到的订单重新添加到队列的最后（rpush）。</p><p><b>三、代码实现</b><br>&emsp;<a>（1）创建订单：create_order.php</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;./RedisManager.php&quot;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 模拟下单</span><br><span class="line"> */</span><br><span class="line">$post = $_POST;</span><br><span class="line">if (!empty($post)) &#123;</span><br><span class="line">    // 声明状态</span><br><span class="line">    $status = 0;</span><br><span class="line">    $msg = &apos;error&apos;;</span><br><span class="line"></span><br><span class="line">    $order = [</span><br><span class="line">        &apos;order_id&apos; =&gt; &apos;HD&apos; . time(),</span><br><span class="line">        &apos;name&apos; =&gt; $post[&apos;name&apos;] . &apos;_&apos; . $post[&apos;id&apos;],</span><br><span class="line">        &apos;price&apos; =&gt; $post[&apos;price&apos;],</span><br><span class="line">        &apos;date&apos; =&gt; date(&apos;Y-m-d H:i:s&apos;)</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    // 用户下单但未支付加入队列等待支付</span><br><span class="line">    return createOrder($order);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 创建订单 createOrder</span><br><span class="line"> *</span><br><span class="line"> * @return void</span><br><span class="line"> */</span><br><span class="line">function createOrder($order)</span><br><span class="line">&#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        $orderList = &apos;order:temp:list&apos;; // 临时订单列表</span><br><span class="line">        // 把订单写入队列 守护进程启动一个 watch_order.php 来处理订单消息</span><br><span class="line">        $result = RedisConnect::getRedis()-&gt;lpush($orderList, json_encode($order));</span><br><span class="line"></span><br><span class="line">        // 记录日志</span><br><span class="line">        if (!$result) &#123;</span><br><span class="line">            createLog(&apos;订单写入队列失败&apos;, $order);</span><br><span class="line">            returnMsg(&apos;订单写入队列失败&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        returnMsg(&apos;下单成功&apos;, $order);</span><br><span class="line">    &#125; catch (Exception $e) &#123;</span><br><span class="line">        createLog($e-&gt;getMessage(), $order);</span><br><span class="line">        returnMsg($e-&gt;getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 写入日志 createLog</span><br><span class="line"> *</span><br><span class="line"> * @param string $msg</span><br><span class="line"> * @param array $data</span><br><span class="line"> * @return void</span><br><span class="line"> */</span><br><span class="line">function createLog(string $msg, array $data = [])</span><br><span class="line">&#123;</span><br><span class="line">    $orderMsg = &apos;order:msg&apos;; // 订单消息</span><br><span class="line">    $data[&apos;errorMsg&apos;] = $msg;</span><br><span class="line">    $data[&apos;errorTime&apos;] = date(&apos;Y-m-d H:i:s&apos;);</span><br><span class="line"></span><br><span class="line">    RedisConnect::getRedis()-&gt;select(1);</span><br><span class="line">    RedisConnect::getRedis()-&gt;lPush($orderMsg, json_encode($data));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 输出消息 returnMsg</span><br><span class="line"> *</span><br><span class="line"> * @param string $msg</span><br><span class="line"> * @param array $data</span><br><span class="line"> * @return void</span><br><span class="line"> */</span><br><span class="line">function returnMsg(string $msg, array $data = [])</span><br><span class="line">&#123;</span><br><span class="line">    echo json_encode([</span><br><span class="line">        &apos;status&apos; =&gt; 200,</span><br><span class="line">        &apos;message&apos; =&gt; $msg,</span><br><span class="line">        &apos;data&apos; =&gt; $data</span><br><span class="line">    ]);</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;<a>（2）订单入库insert_db.php（以守护进程启动）</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;default_socket_timeout&apos;, -1);</span><br><span class="line">include &apos;./RedisManager.php&apos;;</span><br><span class="line">include &apos;./MysqlManager.php&apos;;</span><br><span class="line"></span><br><span class="line">$orderExpire = &apos;order:temp:list&apos;;</span><br><span class="line">while (true) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">        $orderList = &apos;order:temp:list&apos;; // 临时订单列表</span><br><span class="line">if (RedisConnect::getRedis()-&gt;lSize($orderList) &lt; 1) &#123;</span><br><span class="line">var_dump(&apos;订单已处理完毕&apos;) . &apos;\n&apos;;</span><br><span class="line">sleep(1);</span><br><span class="line">&#125;</span><br><span class="line">// 处理消息</span><br><span class="line">$order = RedisConnect::getRedis()-&gt;lPop($orderList);</span><br><span class="line"></span><br><span class="line">if ($order) &#123;</span><br><span class="line">$order = json_decode($order, true);</span><br><span class="line">$order_id = $order[&apos;order_id&apos;];</span><br><span class="line">$name = $order[&apos;name&apos;];</span><br><span class="line">$price = $order[&apos;price&apos;];</span><br><span class="line">$sql = &quot;INSERT INTO `order`(`order_id`,`name`,`price`) VALUES(&apos;&#123;$order_id&#125;&apos;,&apos;&#123;$name&#125;&apos;,&#123;$price&#125;)&quot;;</span><br><span class="line">$result = MysqlConnect::getMysql()-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">//给每一个订单设置一个过期时间</span><br><span class="line">$expireResult = RedisConnect::getRedis()-&gt;hMset($orderExpire . &apos;:&apos; . $order[&apos;order_id&apos;], $order);</span><br><span class="line">RedisConnect::getRedis()-&gt;expire($orderExpire . &apos;:&apos; . $order[&apos;order_id&apos;], 900);</span><br><span class="line">var_dump($result) . &apos;\n&apos;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">sleep(1);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception $e) &#123;</span><br><span class="line">echo $e-&gt;getMessage();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&emsp;<a>（3）监听过期的订单watch_order.php（以守护进程启动）</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;default_socket_timeout&apos;, -1);</span><br><span class="line"></span><br><span class="line">include &apos;./RedisManager.php&apos;;</span><br><span class="line">include &apos;./MysqlManager.php&apos;;</span><br><span class="line"></span><br><span class="line">RedisConnect::getRedis()-&gt;psubscribe(array(&apos;__keyevent@0__:expired&apos;), &apos;keyCallback&apos;);</span><br><span class="line"></span><br><span class="line">function keyCallback($redis, $pattern, $channel, $message)</span><br><span class="line">&#123;</span><br><span class="line">    // 把过期的订单写入队列进行处理（这里可以处理为不同的订单写入不同的队列）</span><br><span class="line">    $msgType = [</span><br><span class="line">        &apos;HD&apos; =&gt; &apos;home:order&apos;, // 住房订单</span><br><span class="line">        &apos;DD&apos; =&gt; &apos;ding:order&apos; // 餐饮订单</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    $keyArr = explode(&apos;:&apos;, $message);</span><br><span class="line">    $key = array_pop($keyArr);</span><br><span class="line">    $id = substr($key, 0, 2);</span><br><span class="line">    switch($id)&#123;</span><br><span class="line">        case &apos;HD&apos;:</span><br><span class="line">            $sql = &quot;UPDATE `order` SET `status` = 1 WHERE `order_id` = &apos;&#123;$key&#125;&apos;&quot;;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">    $result = MysqlConnect::getMysql()-&gt;query($sql);</span><br><span class="line">    var_dump($result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&emsp;<a>（4）支付成功后的订单处理success_order.php（以守护进程启动）</a><br>&emsp;&emsp;代码上边代码一样不做展示。</p><p>&emsp;<a>（5）另外可增加日志队列处理来发送错误邮件给管理员send_error_mail.php（以守护进程启动）</a><br>&emsp;&emsp;——————————–</p><p><b>四、总结</b></p><p>&emsp;本文只是做业务分析，未在真实的业务场景中进行实现，如有错误还请多多指正。<br>&emsp;下一篇可能会写利用<a href>Jmeter</a>来分析该业务代码的效率性能等问题。</p>]]></content>
      
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决nginx循环重定向问题</title>
      <link href="/%E8%A7%A3%E5%86%B3nginx%E5%BE%AA%E7%8E%AF%E9%87%8D%E5%AE%9A%E5%90%91%E9%97%AE%E9%A2%98/"/>
      <url>/%E8%A7%A3%E5%86%B3nginx%E5%BE%AA%E7%8E%AF%E9%87%8D%E5%AE%9A%E5%90%91%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><b>一、什么是重定向、循环重定向</b></p><p>&emsp;（1）重定向是指浏览器先访问了服务器A，然后服务器A带着请求的参数（header、状态码3xx）返回到地址为B的服务器上。<br>&emsp;（2）循环重定向是指服务器A重定向到了服务器B，服务器B由于某种原因又重定向到了A，这样就构成了重定向循环。</p><p><b>二、3xx重定向状态码</b></p><p>&emsp;（1）301(Move Permanently)：永久性重定向，请求的资源被分配了新的URI，以后都使用这个（get）。<br>&emsp;（2）302(Found)：临时性重定向，请求的资源被分配了新的URI，本次使用这个（get，允许缓存）。<br>&emsp;（3）303(See Other)：请求资源存在另一个URI，应使用get方法获取请求资源。<br>&emsp;（4）307(Temporary Redirect)：类似于302，只是302的POST方法会变为GET，而307的不会。<br><a id="more"></a><br><b>三、怎么产生的？</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.daichongweb.cn;</span><br><span class="line"></span><br><span class="line">    root   /site/hexo/public;</span><br><span class="line">    index  index.html;</span><br><span class="line"></span><br><span class="line">    # 这段是产生循环重定向的原因</span><br><span class="line">    # 当浏览器访问 www.daichongweb.cn 时发现不是https就会进行重定向，</span><br><span class="line">    # 但重定向到https之后又没有判断是否是https，也就是没有禁止跳转，最终造成了循环</span><br><span class="line">    return  301 https://$host$request_uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><b>四、怎么解决？</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.daichongweb.cn;</span><br><span class="line"></span><br><span class="line">    root   /site/hexo/public;</span><br><span class="line">    index  index.html;</span><br><span class="line"></span><br><span class="line">    # 通过上面的解释逻辑就变得相对简单了，只需要增加一个判断就可以解决</span><br><span class="line">    if ($scheme = http) &#123;</span><br><span class="line">        return 301 https://$host$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><b>四、总结</b></p><p>&emsp;在项目开发中经常会用到重定向，认识比较常见的状态码对网络请求的判断又很大帮助。</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7.6搭建lnmp环境</title>
      <link href="/Centos7.6%E6%90%AD%E5%BB%BAlnmp%E7%8E%AF%E5%A2%83/"/>
      <url>/Centos7.6%E6%90%AD%E5%BB%BAlnmp%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p><b>一、前言</b></p><p>&emsp;搭建程序运行环境是程序员必不可少的技能！<br>&emsp;今天买了个新的云服务器，需要搭建环境，借此机会自己也熟悉了一番搭建的流程，做个日记供以后参考。<br>&emsp;本篇大部分命令仅适合<font color="#ff5722">Centos7.x</font>的系统使用。<br>&emsp;<font color="#ff5722">lnmp</font>是指<font color="#ff5722">Liunx、Nginx、Mysql和Php</font>。</p><p>&emsp;目录：<br>&emsp;（1）安装<font color="#ff5722">Nginx1.4</font>。<br>&emsp;（2）安装<font color="#ff5722">php7.2</font>。<br>&emsp;（3）安装<font color="#ff5722">Mariadb10.2</font>。<br>&emsp;（4）总结。<br><a id="more"></a></p><p><b>二、安装Nginx</b></p><p>&emsp;（1）防火墙设置，允许http、https通信、开启80、443、8080等端口（已开启的忽略此步骤）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 允许http通信</span><br><span class="line">firewall-cmd --zone=public --add-service=http --permanent</span><br><span class="line">// 允许https通信</span><br><span class="line">firewall-cmd --zone=public --add-service=https --permanent</span><br><span class="line">// 打开80端口</span><br><span class="line">firewall-cmd --zone-public –add-port=80/tcp --permanent </span><br><span class="line">// 打开443端口</span><br><span class="line">firewall-cmd --zone-public –add-port=443/tcp --permanent </span><br><span class="line">// 打开8080端口</span><br><span class="line">firewall-cmd --zone-public –add-port=8080/tcp --permanent </span><br><span class="line">// 重新加载配置</span><br><span class="line">firewall-cmd --reload </span><br></pre></td></tr></table></figure><br>&emsp;（2）下载依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum intall pcre pcre-devel yum install pcre pcre-devel yum install zlib zlib-devel yum install openssl; openssl-devel yum install openssl;openssl-devel yum install openssl openssl-devel</span><br></pre></td></tr></table></figure><br>&emsp;（3）配置官方yum源&amp;安装Nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install nginx</span><br><span class="line"></span><br><span class="line"># 默认主配置文件：/etc/nginx/conf.d</span><br><span class="line"></span><br><span class="line"># 启动&amp;停止</span><br><span class="line">systemctl start/stop nginx.service</span><br><span class="line"># 查看服务是否启动</span><br><span class="line">ps aux|grep nginx</span><br><span class="line"># 设置服务开机自启</span><br><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure></p><p><font color="#ff5722">注意：</font>安装成功后无法访问，请检查防火墙设置，或在服务商后台配置安全组策略等。</p><p><b>二、安装php</b></p><p>&emsp;（1）配置yum源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br></pre></td></tr></table></figure><br>&emsp;（2）安装php7.2及常用的扩展<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install php72w php72w-cli php72w-common php72w-devel php72w-embedded php72w-fpm php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml</span><br></pre></td></tr></table></figure><br>&emsp;（3）启动php-fpm<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop/start php-fpm</span><br><span class="line"># 设置开机启动</span><br><span class="line">systemctl enable php-fpm</span><br></pre></td></tr></table></figure><br>&emsp;（4）配置nginx支持php<br><figure class="highlight plain"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/default.conf</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    root   /usr/share/nginx/html; //这是里应用目录和下面的root对应，可自定义</span><br><span class="line">    index  index.html index.htm index.php;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           /usr/share/nginx/html;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><b>三、安装mariadb10.2</b></p><p>&emsp;（1）配置yum源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 进入</span><br><span class="line">cd /usr/local/src</span><br><span class="line"># 下载rpm包</span><br><span class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"># 安装rpm</span><br><span class="line">rpm -ivh mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"># 安装 mysql-server</span><br><span class="line">yum install -y mysql-server</span><br><span class="line"># 启动 </span><br><span class="line">systemctl start mysqld</span><br><span class="line"># 设置开机自启</span><br><span class="line">systemctl enable mysqld</span><br></pre></td></tr></table></figure></p><p>&emsp;（2）登入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 由于MySQL从5.7开始不允许首次安装后，使用空密码进行登录，系统会随机生成一个密码以供管理员首次登录使用，这个密码记录在/var/log/mysqld.log文件中，使用下面的命令可以查看此密码：</span><br><span class="line">cat /var/log/mysqld.log|grep &apos;A temporary password&apos;</span><br><span class="line"># 登录</span><br><span class="line">mysql -u root -p</span><br><span class="line"># 如报错 You must reset your password using ALTER USER statement before executing this statement</span><br><span class="line">修改密码</span><br><span class="line">use mysql;</span><br><span class="line">SET PASSWORD = PASSWORD(&apos;daichongweb&apos;); </span><br><span class="line">或 </span><br><span class="line">ALTER USER USER() IDENTIFIED BY &apos;daichongweb&apos;;</span><br><span class="line"></span><br><span class="line"># 如报错Your password does not satisfy the current policy requirements</span><br><span class="line">set global validate_password_policy=0; //修改密码验证为长度验证</span><br></pre></td></tr></table></figure></p><p><b>四、总结</b></p><p>&emsp;总体来说使用yum安装比源码编译安装简单多了。<br>&emsp;再多的理论不如真正的实践。<br>&emsp;从出现问题，到分析问题，再到解决问题，你会从中学习到很多的知识，这也是我就算花钱也要买云服务器的原因。</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php性能优化-循环优化</title>
      <link href="/php%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96-%E5%BE%AA%E7%8E%AF%E4%BC%98%E5%8C%96/"/>
      <url>/php%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96-%E5%BE%AA%E7%8E%AF%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p><b>一、前言</b></p><p>&emsp;对于任何计算机程序，程序的运行性能决定了一个程序的好坏，夸张一点说程序性能的好坏直接影响了一个互联网公司的生存与发展的问题。所以对于程序员，优化性能的技能是必不可少的，就因为不会优化性能，可能就会比其他人差好几个等级。</p><p>&emsp;在PHP界，大部分互联网公司的工作内容就是最常见的CURD。你会发现自己和一些应届毕业生相比完全没有竞争优势，甚至一些公司的岗位要求也只是会CURD就行了。就像我最近找工作，不止一次的遇到面试官问：“我你觉得你的优势是什么？”，我每次都是哑口无言。<br><a id="more"></a><br>&emsp;大家都懂为了避免这样的出现，学了很多种语言。造成现在PHP岗位的要求从只会PHP语言到<font color="#ff5722">PHP+MYSQL+LIUNX+HTNL+CSS+JS</font>,甚至我对面试官说：“我的优势是比其他人会的语言多！”的时候，他会回你一句：“这不是大家都会的吗？”。</p><p>&emsp;更恐怖的是，现在的PH招聘要求上都TM开始写要求熟悉<font color="#ff5722">JAVA、Python、Go、Golang</font>，你TM能再过分点吗？</p><p><b>二、言归正传</b></p><p>&emsp;在PHP中最常见的就是foreach，处理数据交际的时候一般第一时间想到的都是嵌套。</p><p>&emsp;在这我只能说尽量少用或者不使用这样的写法。</p><p>&emsp;下面介绍3种可以代替循环嵌套写法例子，并分析执行的效率和性能问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">ini_set(&apos;memory_limit&apos;,&apos;3072M&apos;);</span><br><span class="line"></span><br><span class="line">$arr = [];</span><br><span class="line">$arr1 = [];</span><br><span class="line"></span><br><span class="line">for($i=1;$i&lt;=1000000;$i++)&#123;</span><br><span class="line">$arr[$i] = [</span><br><span class="line">&apos;id&apos; =&gt; ($i+1)*2,</span><br><span class="line">&apos;name&apos; =&gt; &apos;戴崇_&apos;.$i</span><br><span class="line">];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for($j=1;$j&lt;=1000000;$j++)&#123;</span><br><span class="line">$arr1[$j] = [</span><br><span class="line">&apos;uid&apos; =&gt;($j+1)*2,</span><br><span class="line">&apos;age&apos; =&gt; $j</span><br><span class="line">];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$t1 = microtime(true);</span><br><span class="line"></span><br><span class="line">$mode = mode1($arr,$arr1);</span><br><span class="line"></span><br><span class="line">echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">$t2 = microtime(true);</span><br><span class="line">echo $mode . &apos;耗时: &apos;.round($t2-$t1,3).&apos; 秒&lt;br /&gt;&apos;;</span><br><span class="line">echo &apos;内存消耗: &apos; . memory_get_usage() / 1024 / 1024 . &apos; MB&lt;br /&gt;&apos;;</span><br><span class="line"></span><br><span class="line">// 循环嵌套</span><br><span class="line">function mode($arr,$arr1)&#123;</span><br><span class="line"></span><br><span class="line">foreach ($arr as $k =&gt; $v) &#123;</span><br><span class="line">foreach ($arr1 as $key =&gt; $value) &#123;</span><br><span class="line">if($v[&apos;id&apos;] == $value[&apos;uid&apos;])&#123;</span><br><span class="line">$arr[$k][&apos;age&apos;] = $value[&apos;age&apos;];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return &apos;方法一-&gt;循环嵌套法-&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 循环拆分</span><br><span class="line">function mode1($arr,$arr1)&#123;</span><br><span class="line">$arr1 = array_index($arr1,&apos;uid&apos;);</span><br><span class="line"></span><br><span class="line">foreach ($arr as &amp;$value) &#123;</span><br><span class="line">if(isset($arr1[$value[&apos;id&apos;]]))&#123;</span><br><span class="line">$value[&apos;age&apos;] = $arr1[$value[&apos;id&apos;]][&apos;age&apos;];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return &apos;方法二-&gt;循环拆分-&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// array_walk 闭包</span><br><span class="line">function mode2($arr,$arr1)&#123;</span><br><span class="line"></span><br><span class="line">$arr1 = array_index($arr1,&apos;uid&apos;);</span><br><span class="line"></span><br><span class="line">array_walk($arr, function(&amp;$value,$key) use ($arr1) &#123;</span><br><span class="line">if(isset($arr1[$value[&apos;id&apos;]]))&#123;</span><br><span class="line">$value[&apos;age&apos;] = $arr1[$value[&apos;id&apos;]][&apos;age&apos;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">return &apos;方法二-&gt;array_walk 闭包-&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// array_map</span><br><span class="line"></span><br><span class="line">function mode3($arr,$arr1)&#123;</span><br><span class="line"></span><br><span class="line">$arr1 = array_index($arr1,&apos;uid&apos;);</span><br><span class="line"></span><br><span class="line">$arr = array_map(function(&amp;$value) use ($arr1) &#123;</span><br><span class="line">if(isset($arr1[$value[&apos;id&apos;]]))&#123;</span><br><span class="line">$value[&apos;age&apos;] = $arr1[$value[&apos;id&apos;]][&apos;age&apos;];</span><br><span class="line">&#125;</span><br><span class="line">return $value;</span><br><span class="line">&#125;, $arr);</span><br><span class="line"></span><br><span class="line">return &apos;方法三-&gt;array_map-&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 把多维数组中的某个键值设置为键名</span><br><span class="line">function array_index(array $array, $name)</span><br><span class="line">&#123;</span><br><span class="line">    $indexedArray = array();</span><br><span class="line">    if (empty($array)) &#123;</span><br><span class="line">        return $indexedArray;</span><br><span class="line">    &#125;</span><br><span class="line">    foreach ($array as $item) &#123;</span><br><span class="line">        if (isset($item[$name])) &#123;</span><br><span class="line">            $indexedArray[$item[$name]] = $item;</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $indexedArray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;经过试验的到结果：</p><p>&emsp;&emsp;(1)方法一：10000*10000（万级） 执行时间 <font color="#ff5722">3.377 秒</font></p><p>&emsp;&emsp;(2)方法二：1000000*1000000（百万级） 执行时间： <font color="#ff5722">0.741 秒 0.642 秒 0.673 秒 0.609 秒 0.618 秒</font></p><p>&emsp;&emsp;(3)方法三：1000000*1000000（百万级） 执行时间： <font color="#ff5722">0.745 秒 0.75 秒 0.664 秒 0.672 秒 0.684 秒</font></p><p>&emsp;&emsp;(4)方法四：1000000*1000000（百万级） 执行时间： <font color="#ff5722">0.781 秒 0.803 秒 0.661 秒 0.661 秒 0.658 秒</font></p><p><b>三、总结</b></p><p>&emsp;在开发中一定要考虑数据量大的情况下会出现的问题，尽量使用上面的方法代替循环嵌套。另外还要注意代码风格和规范等问题。</p><p>&emsp;希望大家在看了之后能有所收获。</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php处理视频</title>
      <link href="/php%E5%A4%84%E7%90%86%E8%A7%86%E9%A2%91/"/>
      <url>/php%E5%A4%84%E7%90%86%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<p><b>一、首先介绍一下这个功能的使用场景</b></p><p>&emsp;如<a href="https://www.youku.com/" target="_blank" rel="noopener">优酷</a>视频网站，某些视频的封面图就使用的这样的功能。</p><p>&emsp;大概有4种：</p><p>&emsp;&emsp;(1)自有封面图（这类可能是自己手动上传的封面图，如一些宣传图）。<br>&emsp;&emsp;(2)截取视频第一帧（可以理解为0.001秒）时的视频内容作为封面图。<br>&emsp;&emsp;(3)截取视频某一时刻的内容作为封面图，如截取视频的第1分钟。<br>&emsp;&emsp;(4)截取视频某一段的内容（gif）作为封面图，如截取视频的第1分20秒到1分30秒。</p><font color="#ff5722">PS:</font>只是单纯的拿来做例子，并不是指优酷就是使用这样的技术。<br><a id="more"></a><br><b>二、将会使用到的技术</b><br><br>&emsp;(1)<a href="http://ffmpeg.org/" target="_blank" rel="noopener">FFmpeg</a>：FFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。采用LGPL或GPL许可证。它提供了录制、转换以及流化音视频的完整解决方案。它包含了非常先进的音频/视频编解码库libavcodec，为了保证高可移植性和编解码质量，libavcodec里很多code都是从头开发的。<em>—百度百科</em>&emsp; <font color="#ff5722">注意:‘需要安装’，不同的系统安装、使用的方法不同。</font><p>&emsp;(2)<a href="https://www.php.net/" target="_blank" rel="noopener">PHP</a>的<a href="https://www.php.net/manual/zh/book.exec.php" target="_blank" rel="noopener">Exec</a>或<a href="https://www.php.net/manual/zh/function.system.php" target="_blank" rel="noopener">System</a>等函数（当然任何能执行外部程序的语言都能实现）。</p><p><b>三、Demo</b></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 安装路径</span><br><span class="line">$ffmpeg = &quot;C:\\Users\user\\Desktop\\ffmpeg\\bin\\ffmpeg.exe&quot;;</span><br><span class="line">// 待处理视频的地址</span><br><span class="line">$video_route = &quot;D:\\phpstudy_pro\\WWW\a.mp4&quot;;</span><br><span class="line">//存储地址</span><br><span class="line">$store_path = &quot;./2.jpg&quot;;</span><br><span class="line"></span><br><span class="line">// 把视频的前30帧截取为gif</span><br><span class="line">system($ffmpeg . &quot; -i &quot;.$video_route.&quot; -vframes 30 -y -f gif 1.gif&quot;); </span><br><span class="line">// 把视频的第一帧截取为图片 -r 1 表示为图宽度、高度自适应</span><br><span class="line">system($ffmpeg . &quot; -i &quot;.$video_route.&quot; -y -f image2 -t 0.001 -r 1 1.png&quot;); </span><br><span class="line">// 把视频的第8.01秒处截取为图片</span><br><span class="line">system($ffmpeg . &quot; -i &quot;.$video_route.&quot; -y -f image2 -ss 08.010 -t 0.001 -s 1920x1080 &quot; .$store_path. &quot;); </span><br></pre></td></tr></table></figure><p><b>三、更多</b></p><p>&emsp;<a href="https://www.php.net/" target="_blank" rel="noopener">PHP</a>+<a href="http://ffmpeg.org/" target="_blank" rel="noopener">FFmpeg</a>仅能实现这样功能吗？当然不是！还有更多的功能等待探索…<br>&emsp;如:<br>&emsp;&emsp;(1)视频转码。<br>&emsp;&emsp;(2)视频加密。<br>&emsp;&emsp;(3)视频剪切。<br>&emsp;&emsp;(4)视频合成。<br>&emsp;&emsp;(5)多张图片合成一个视频。<br>&emsp;&emsp;(6)字幕。<br>&emsp;&emsp;(7)音频处理。<br>&emsp;&emsp;等等等….</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php-Sphinx搜索引擎</title>
      <link href="/php-Sphinx%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
      <url>/php-Sphinx%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/</url>
      
        <content type="html"><![CDATA[<p><b>一、Sphinx是什么？</b></p><p>&emsp;是一个基于SQL的全文检索引擎，可以结合MySQL,PostgreSQL做全文搜索，它可以提供比数据库本身更专业的搜索功能，使得应用程序更容易实现专业化的全文检索。Sphinx特别为一些脚本语言设计搜索API接口，如Java，PHP，Python，Perl，Ruby等，同时为MySQL也设计了一个存储引擎插件。 <em>—百度百科</em>    </p><p>&emsp;Sphinx 单一索引最大可包含1亿条记录，在1千万条记录情况下的查询速度为0.x秒（毫秒级）。Sphinx创建索引的速度为：创建100万条记录的索引只需 3～4分钟，创建1000万条记录的索引可以在50分钟内完成，而只包含最新10万条记录的增量索引，重建一次只需几十秒。<em>—百度百科</em><br><a id="more"></a></p><p><b>二、Sphinx的特性是什么？</b></p><p>&emsp;高速索引 （在新款CPU上，近10 MB/秒）; 高速搜索 (2-4G的文本量中平均查询速度不到0.1秒); 高可用性 （单CPU上最大可支持100 GB的文本，100M文档）; 提供良好的相关性排名 支持分布式搜索； 提供文档摘要生成； 提供从MySQL内部的插件式存储引擎上搜索 支持布尔，短语， 和近义词查询； 支持每个文档多个全文检索域（默认最大32个）; 支持每个文档多属性； 支持断词； 支持单字节编码与UTF-8编码；</p><p><b>三、Sphinx安装与配置</b> <em>–windows环境</em></p><p>&emsp;1.万物不离其宗，第一步肯定是安装啦！<a href="http://sphinxsearch.com/downloads/current/" target="_blank" rel="noopener">下载地址</a> <em>—具体的安装步骤就不一一介绍了</em></p><p>&emsp;2.解压之后会看到 <font color="#ff5722">api、bin、doc、etc、misc、src </font>六个文件。 <em>–windows环境可能和其他环境不同</em></p><p>&emsp;3.在同级目录下新建<font color="#ff5722">data、log</font>两个文件。 <em>–data:数据文件、log:检索的日志文件</em></p><p>&emsp;4.复制<font color="#ff5722">etc</font>目录下的<font color="#ff5722">sphinx-min.conf.dist</font>到<font color="#ff5722">bin</font>目录修改文件名为<font color="#ff5722">sphinx.conf</font>。修改配置为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">source school # school 名字是随意起的</span><br><span class="line">&#123;</span><br><span class="line">type= mysql</span><br><span class="line"></span><br><span class="line">sql_host= localhost</span><br><span class="line">sql_user= root</span><br><span class="line">sql_pass= root</span><br><span class="line">sql_db= test</span><br><span class="line">sql_port= 3306</span><br><span class="line"># 设置数据库字符集</span><br><span class="line">sql_query_pre   = SET NAMES utf8 </span><br><span class="line"># 配置数据源--也就是数据表的数据</span><br><span class="line">sql_query=  SELECT id, school, address FROM school </span><br><span class="line"># 配置返回字段--必须是数据表中存在的字段，不能设置返回主键，否则会报错</span><br><span class="line"># 这里的字段还要和下面index里配置的 rt_field相对应</span><br><span class="line">sql_field_string        = school </span><br><span class="line">    sql_field_string        = address </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">index school</span><br><span class="line">&#123;</span><br><span class="line">source            = school # 数据源--也就是上边的名字</span><br><span class="line">    path              = E:\sphinx\data\school # 数据存放的地址--配置为刚新建的data下</span><br><span class="line">    mlock             = 0 # 缓存内存锁定</span><br><span class="line">    morphology        = none # 数据处理方法</span><br><span class="line">    min_word_len      = 1 # 最小索引字长</span><br><span class="line">    html_strip        = 0 # 是否去除html标签</span><br><span class="line">    ngram_len         = 1 # 支持中文</span><br><span class="line">    ngram_chars       = U+3000..U+2FA1F # 支持中文</span><br><span class="line"></span><br><span class="line">    # 字段配置</span><br><span class="line">    rt_attr_uint    = id </span><br><span class="line">    rt_field        = school</span><br><span class="line">    rt_field        = address</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">indexer</span><br><span class="line">&#123;</span><br><span class="line">mem_limit= 128M</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 下面都是默认的 修改一下log地址就好了</span><br><span class="line">searchd</span><br><span class="line">&#123;</span><br><span class="line">listen= 9312</span><br><span class="line">listen= 9306:mysql41</span><br><span class="line">log= E:\sphinx\log\searchd.log</span><br><span class="line">query_log= E:\sphinx\log\query.log</span><br><span class="line">read_timeout= 5</span><br><span class="line">max_children= 30</span><br><span class="line">pid_file= E:\sphinx\log\searchd.pid</span><br><span class="line">seamless_rotate= 1</span><br><span class="line">preopen_indexes= 1</span><br><span class="line">unlink_old= 1</span><br><span class="line">workers= threads # for RT to work</span><br><span class="line">binlog_path= E:\sphinx\data</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><b>四、Sphinx在项目中如何使用呢？</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">require &quot;E:\sphinx\api\sphinxapi.php&quot;;</span><br><span class="line"></span><br><span class="line">$page = isset($_GET[&apos;p&apos;]) ? intval($_GET[&apos;p&apos;]) : 1;</span><br><span class="line">if ($page &lt;= 0) &#123;</span><br><span class="line">    $page = 1;</span><br><span class="line">&#125;</span><br><span class="line">$pagesize = 20;</span><br><span class="line"></span><br><span class="line">$sphinxClass = new \SphinxClient();</span><br><span class="line">$sphinxClass-&gt;setServer(&quot;localhost&quot;, 9312);</span><br><span class="line">$sphinxClass-&gt;setMaxQueryTime(3);</span><br><span class="line">$sphinxClass-&gt;SetArrayResult(true);</span><br><span class="line">$sphinxClass-&gt;SetLimits(($page - 1) * $pagesize, $pagesize, 3000); // 搜索分页</span><br><span class="line">// @school 表示只匹配数据表中school的字段 ,第二个参数表示使用的索引方法 对应sphinx中的index school</span><br><span class="line">$result = $sphinxClass-&gt;query(&apos;@school 戴崇&apos;, &apos;school&apos;);</span><br><span class="line">echo &apos;&lt;pre&gt;&apos;;</span><br><span class="line">print_r($result);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>从上面代码可以看出，在项目中使用sphinx是非常简单的只需要引入这个类就ok了。</p><p><b>五、测试</b></p><p>&emsp;数据量200014条数据。</p><p>&emsp;使用mysql模糊查询平均耗时 <font color="#ff5722">0.130s</font></p><p>&emsp;使用sphinx搜索引擎平均耗时 <font color="#ff5722">0.030s</font></p><p>&emsp;由此可见差距是很大的，如何数据量更大的情况下差距会更大。</p><p><b>六、Sphinx的优点及缺点</b></p><p>&emsp;优点:<br>&emsp;&emsp;(1)Sphinx索引文件每次更新都会把数据全部存储在本地，也就是说当用户使用搜索的时候并不会直接请求数据库，降低了数据库的压力。<br>&emsp;&emsp;(2)在几十万级数据查询时，Sphinx索引速度要比数据库索引速度快上好几倍，速度快。</p><p>&emsp;缺点:<br>&emsp;&emsp;(1)数据的索引文件会存储在本地，数据量大的时候对内存也有一定影响。<br>&emsp;&emsp;(2)数据库的数据变化，是无法同步到Sphinx索引文件里的，也就是说每次数据库更新都要手动更新索引文件。<br>&emsp;&emsp;(3)在没有使用中文分词的技术上，Sphinx搜索的结果是不准确的，例如：数据库中有‘戴崇1，戴崇2，戴崇3，戴崇’，使用like查询‘戴崇’会有四个结果，但使用Sphinx查询只会出现一个。</p><p><b>总结</b></p><p>&emsp;Sphinx从官网上可以看出已经将近一年没有更新过了，甚至还有一些bug没有修复，但整体来说Sphinx在使用方面还是非常简单可靠的。</p><p>&emsp;<font color="#ff5722">PS:下一篇将会介绍Sphinx中文分词如何使用！</font></p>]]></content>
      
      
      
        <tags>
            
            <tag> php扩展类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql视图的使用方法</title>
      <link href="/mysql%E8%A7%86%E5%9B%BE%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/mysql%E8%A7%86%E5%9B%BE%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>&emsp;上篇简单的介绍了视图的概念，那么这篇将告诉大家如何创建、修改、删除视图，也就是视图的基本操作了！</p><p><b>一、在单表上创建视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建表 user</span><br><span class="line">create table user (id int,name varchar(10),age tinyint(3));</span><br><span class="line"># 插入数据</span><br><span class="line">insert into user values(1,&apos;张三&apos;,20),(2,&apos;李四&apos;,20);</span><br><span class="line"># 创建视图-并计算他们两年之后多少岁</span><br><span class="line">create view view_user as select id,name,age+2 as age from user; </span><br><span class="line"># 第二种写法</span><br><span class="line">create view view_user_1(user_id,user_name,user_age) as select id,name,age from user;</span><br></pre></td></tr></table></figure><br><a id="more"></a><br>得到结果:<table><th>id</th><th>name</th><th>age</th><tr><td>1</td><td>张三</td><td>22</td></tr><tr><td>2</td><td>李四</td><td>22</td></tr><tr><td>3</td><td>王二</td><td>22</td></tr></table></p><table><th>user_id</th><th>user_name</th><th>user_age</th><tr><td>1</td><td>张三</td><td>22</td></tr><tr><td>2</td><td>李四</td><td>22</td></tr><tr><td>3</td><td>王二</td><td>22</td></tr></table><br>从这两种写法可以看出，在视图上是可以使用计算的，虽然两个视图中字段名不同，但数据确实相同的。因此在使用视图的时候，用户根本接触不到实际表中的结构和数据，从而保证了数据库的安全。<br><br><b>二、在多表上创建视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建表 user、school</span><br><span class="line">create table user (id int, name varchar(10), age tinyint(3), school_id int);</span><br><span class="line">create table school (id int, name varchar(10));</span><br><span class="line"># 插入数据 </span><br><span class="line">insert into user values(1,&apos;张三&apos;,20,1),(2,&apos;李四&apos;,20,2);</span><br><span class="line">insert into school values(1,&apos;清华&apos;),(2,&apos;北大&apos;);</span><br><span class="line"># 创建视图</span><br><span class="line">create view view_user_school(user_id,user_name,user_school) as select user.id,user.name school.name from user,school where user.school_id = school.id;</span><br></pre></td></tr></table></figure><br>通过视图看到的结果：<table><th>user_id</th><th>user_name</th><th>user_school</th><tr><td>1</td><td>张三</td><td>清华</td></tr><tr><td>2</td><td>李四</td><td>北大</td></tr></table><p><b>三、查看视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 视图名;</span><br></pre></td></tr></table></figure><br>通过这个命令可以看出视图的字段定义、字段的数据类型、是否为空、是否为主键/外键、默认值和额外信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select table status like &apos;视图名&apos;;</span><br></pre></td></tr></table></figure><br>通过这个命令可看出存储引擎、创建时间、Comment。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create view &apos;视图名&apos;;</span><br></pre></td></tr></table></figure><br>通过这个命令可以看出视图的名称、创建视图的语句等信息。</p><p><b>四、修改视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create or replace view view_user as select id,user,name,age from user;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert view view_user as select id,user,name,age from user;</span><br></pre></td></tr></table></figure><p><b>五、更新视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update view_user set age=100 where id=1;</span><br><span class="line">delete from view_user where id=1;</span><br></pre></td></tr></table></figure><br>当视图更新的时候相对应的基础表也会被更新，但如果是多表创建、使用了计算或者是聚合函数都是无法修改/删除成功的，并且会报错。</p><p><b>六、删除视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop view if exists view_user;</span><br></pre></td></tr></table></figure></p><p><b>总结：</b></p><p>&emsp;1.两者的区别</p><p>&emsp;&emsp;(1) 视图是已经编译好的sql语句，是基于sql语句的结果集形成的可视化表，而表不是。<br>&emsp;&emsp;(2) 视图没有实际的物理记录，而表有。<br>&emsp;&emsp;(3) 表是内容，视图是窗口。<br>&emsp;&emsp;(4) 表占用物理空间而视图不占用。<br>&emsp;&emsp;(5) 视图是查看数据表的一种方法，从安全角度上来说视图可以防止用户接触到数据表，使用户不知道表结构。<br>&emsp;&emsp;(6) 表属于全局模式中的表，是实表，视图是局部模式的表，是虚表。<br>&emsp;&emsp;(7) 视图的简历和删除只会影响到视图的本身，不影响对应表的基本数据。 </p><p>&emsp;2.两者的关系</p><p>&emsp;&emsp;(1) 视图是建立在基本表纸上的表，它的结构都来源于基本表。无基本表视图将无法建立，视图是基本表的抽象和在逻辑意义上建立的新关系。</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql视图介绍</title>
      <link href="/mysql%E8%A7%86%E5%9B%BE%E4%BB%8B%E7%BB%8D/"/>
      <url>/mysql%E8%A7%86%E5%9B%BE%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p><b>一、视图的含义</b></p><p>&emsp;1.视图是从一个或多个表中导出的，视图的行为与表非常的相似，但视图是一个虚拟的表。在视图中可以使用<font color="#7070D8">Select</font>语句进行查询，也可以使用<font color="#7070D8">Insert</font>、<font color="#7070D8">Update</font>、<font color="#7070D8">Delete</font>，视图还可以从已经存在的视图的基础上定义（也就是视图上再做视图）。<br><a id="more"></a><br>&emsp;2.视图定义好之后会存在数据库中，从视图看到的数据并不是视图真正存储在数据库中的数据，通过视图看到的数据只是存放在基本表中的数据。</p><p>&emsp;<font color="#7070D8">3.对视图的操作和对表的操作是一样的，可以进行CURD。当修改通过视图看到的数据时，相对于的基本表的数据也会发生变化;同时，若基本表的数据发生变化，视图看到的数据也会发生变化。</font></p><p><b>二、如何理解视图与基本表的关系呢？</b></p><p>&emsp;有一张用户表：<table><th>ID</th><th>姓名</th><th>年龄</th><th>学校</th><tr><td>1</td><td>张三</td><td>20</td><td>清华</td></tr><tr><td>2</td><td>李四</td><td>20</td><td>北大</td></tr><tr><td>3</td><td>王二</td><td>20</td><td>北大</td></tr></table></p><p>&emsp;创建一个基于用户表的视图，视图里的字段只有姓名和年龄，那么他们的关系就像在这个用户表上盖了一个木板，木板上留了个窗口，从这个窗口看进去只能看见姓名和年龄，这便是视图的作用和他们的关系。</p><p><b>三、视图的作用</b></p><p>&emsp;与直接从数据表中读取数据相比，视图具有以下优点：</p><p>&emsp;&emsp;(1)、简单化</p><p>&emsp;&emsp;&emsp;&emsp;：从视图看到的数据你可以自定义，也就是说看到的都是需要的数据。那些被经常使用查询的表可以创建一张视图，从而使使以后的操作不需要都假设全部的条件。</p><p>&emsp;&emsp;(2)、安全性</p><p>&emsp;&emsp;&emsp;&emsp;：假如数据表的某些字段是隐私的，不想被其他人看到。这时你就可以创建一张视图把隐私的字段过滤掉。</p><p>&emsp;&emsp;(3)、逻辑数据独立性</p><p>&emsp;&emsp;&emsp;&emsp;：视图可帮助用户屏蔽真实的表结构变化带来的影响。</p><p>PS:下篇讲介绍视图如何创建、使用等。</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>charles过滤数据包</title>
      <link href="/charles%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE%E5%8C%85/"/>
      <url>/charles%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p>1.1 设置过滤：找到【Proxy】-【Recording Setting】<br><img src="/charles过滤数据包/img/record.png"><br><a id="more"></a><br>点击Add添加过滤规则：</p><p>（1）Protocol 选择过滤的协议</p><p>（2）Host 填写IP或网址</p><p>（3）Port 填写端口 *为全部端口</p><img src="/charles过滤数据包/img/record1.png">]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>charles抓ios手机数据包</title>
      <link href="/charles%E6%8A%93ios%E6%89%8B%E6%9C%BA%E6%95%B0%E6%8D%AE%E5%8C%85/"/>
      <url>/charles%E6%8A%93ios%E6%89%8B%E6%9C%BA%E6%95%B0%E6%8D%AE%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p>Charles其实是一款代理服务器，通过过将自己设置成系统（电脑或者浏览器）的网络访问代理服务器，然后截取请求和请求结果达到分析抓包的目的。该软件是用Java写的，能够在Windows，Mac，Linux上使用.<br><a id="more"></a><br>Charles的主要功能：</p><p>（1）截取Http 和 Https 网络封包。</p><p>（2）支持重发网络请求，方便后端调试。</p><p>（3）支持修改网络请求参数。</p><p>（4）支持网络请求的截获并动态修改。</p><p>（5）支持模拟慢速网络。</p><p>1.1 下载安装Charles： <a href="https://www.charlesproxy.com/download/" target="_blank" rel="noopener">点击下载</a></p><p>1.2 设置代理模式：设置端口为8888，勾选上Enable transparency HTTP  proxying<br><img src="/charles抓ios手机数据包/img/charles1.png"><br><img src="/charles抓ios手机数据包/img/charles2.png"></p><p>1.3 设置本机为代理：勾选为Mac local 本地代理<br><img src="/charles抓ios手机数据包/img/charles3.png"></p><p>1.4 设置过滤协议：设置抓取协议类型 <em>.</em> 为全部host的所以协议端口<br><img src="/charles抓ios手机数据包/img/charles4.png"></p><p>到此为止其实已经可以抓取到手机的数据包了，只是无法抓取https协议的数据包。</p><p>2.1 安装证书：抓https数据包，点击之后会弹出电脑证书的列表<br><img src="/charles抓ios手机数据包/img/charles5.png"></p><p>2.2 设置信任：找到刚下载的Charles证书，双击打开，设置始终信任<br><img src="/charles抓ios手机数据包/img/charles6.png"></p><p>3.3 获取证书下载地址<br><img src="/charles抓ios手机数据包/img/charles7.png"><br><img src="/charles抓ios手机数据包/img/charles8.png"></p><p>3.4 下载证书：用苹果浏览器访问chls.pro/ssl下载证书<br><img src="/charles抓ios手机数据包/img/charles9.png"></p><p>3.5 安装证书：在【设置】-【通用】-【描述文件】中找到刚刚下载的证书，双击并安装<br><img src="/charles抓ios手机数据包/img/charles10.png"><br><img src="/charles抓ios手机数据包/img/charles11.png"></p><p>3.6 设置信任：在【设置】-【通用】-【关于本机】-【证书信任设置】中找到安装的证书，点击设置为信任<br><img src="/charles抓ios手机数据包/img/charles12.png"></p><p>之后就和电脑连接同一个wifi,配置代理为电脑端的本机ip，端口为设置的8888，连接之后电脑端会弹出一个提示框，点击Allow就ok了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git覆盖本地未提交的代码</title>
      <link href="/git%E8%A6%86%E7%9B%96%E6%9C%AC%E5%9C%B0%E6%9C%AA%E6%8F%90%E4%BA%A4%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
      <url>/git%E8%A6%86%E7%9B%96%E6%9C%AC%E5%9C%B0%E6%9C%AA%E6%8F%90%E4%BA%A4%E7%9A%84%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>&emsp;在多人协作开发中，使用git或svn管理代码最常见的问题就是代码冲突！</p><p>&emsp;作为高效开发团队中的一员应当具有处理这些问题的能力。</p><p>&emsp;假设现有一个项目，有多个开发成员，成员A和成员B共同管理同一个分支的代码。成员A在本地修改了代码并提交到daichongweb分支，成员B也修改了代码，当成员B需要用到成员A提交代码中的部分功能，需要拉取daichongweb分支的代码，这时会出现一个错误。<br><a id="more"></a><br><img src="/git覆盖本地未提交的代码/img/1.png"><br>&emsp;可以看出git不允许拉取代码，因为成员A也同样修改了代码。那么能提交吗？答案是不能！提交会出现代码冲突的错误！</p><p>&emsp;这时应该想到的是如何把本地代码保存起来，当然git提供了命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><br><img src="/git覆盖本地未提交的代码/img/2.png"><br>&emsp;使用 <font color="#ff5722">git stash</font> 可将已修改的代码保存起来，然后在使用<font color="#ff5722">git pull</font> 拉取代码就不会出现错误。</p><p>&emsp;然后执行<font color="#ff5722">git stash list</font>查看暂存代码，再使用<font color="#ff5722">git stash pop stash@{0}</font>把代码pop出来，这时会提示冲突，把冲突解决就好了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash list </span><br><span class="line">git stash pop stash@&#123;0&#125;</span><br></pre></td></tr></table></figure><br><img src="/git覆盖本地未提交的代码/img/3.png"></p><blockquote><p>总结</p></blockquote><p>代码冲突要在本地处理，不要直接提交。<br>解决同一分支冲突的步骤：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull</span><br><span class="line">git stash list </span><br><span class="line">git stash pop stash@&#123;0&#125;</span><br><span class="line">解决冲突</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】phpgd库处理图片生成海报图</title>
      <link href="/phpgd%E5%BA%93%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E5%9B%BE/"/>
      <url>/phpgd%E5%BA%93%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一.引言</p></blockquote><p>&emsp;好久没写博客了，不知道该写些什么。<br>&emsp;正发愁呢，突然发现了一个好玩的东西。<br>&emsp;是什么呢？是php的一个扩展GD库。</p><p>&emsp;为什么说他好玩？因为GD库就像一个图片处理器，它可以组合图片、剪辑图片等等….</p><p>&emsp;后来经过整理和实践发现，这个东西比较适合做产品推广图来用，更加适合在公众号或小程序里跟二维码结合起来使用。<br><a id="more"></a><br><blockquote><p>二.简单介绍</p></blockquote><br>&emsp;1).如何下载类库&amp;&amp;测试demo，大家可以从<font color="#ff5722">github</font>上拉取，地址：<a href="https://github.com/DaiChongyu/phpgd-CreatePoster" target="_blank" rel="noopener">类库&&demo</a><br>&emsp;2).如何使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">use \CreatePoster\CreateHelper;</span><br><span class="line">require &apos;./gd.php&apos;;</span><br><span class="line">CreateHelper::start();</span><br></pre></td></tr></table></figure><br>&emsp;3).注意事项：<br>&emsp;&emsp;1.写入字体要引入字体文件，文件路径一般为绝对路径。<br>&emsp;&emsp;2.下载地址可以在load函数中配置。<br>&emsp;&emsp;3.主图最好是png格式，这样清晰度会很高。<br>&emsp;&emsp;4.使用CreateImage创建画板时，如果传入的图片较小，如需放大请使用第4和第5个参数。</p><p><div style="display: flex;justify-content: space-around;"><br>    <div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/error.png" width="300"></div><div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/success1.png" width="300"></div><br></div><br>&emsp;&emsp;5.使用CreateImage创建画板时，注意imagecolortransparent使用，他会把画板变为透明。</p><p><div style="display: flex;justify-content: space-around;"><br>    <div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/error1.png" width="300"></div><div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/success.png" width="300"></div><br></div></p><p><font color="#ff5722">PS:其他的用途就看大家的创意、想法了。<b>我们不做代码搬运工，我们要做代码艺术家。</b>后续此类会经常的更新和优化….</font><br><blockquote><p>四.代码浏览</p></blockquote><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace CreatePoster;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  生成海报图</span><br><span class="line"> *  @author daichongweb</span><br><span class="line"> *  @url daichongweb.cn,daichongweb.com</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">class CreateHelper</span><br><span class="line">&#123;</span><br><span class="line">    public static function start()</span><br><span class="line">    &#123;</span><br><span class="line">        echo (&apos;&lt;h2&gt;欢迎使用：)&lt;/h2&gt;&apos;);</span><br><span class="line">        echo &apos;&lt;hr /&gt;&apos;;</span><br><span class="line">        echo &apos;海报图制作步骤:&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;1.创建画板(普通画板用CreatePalette;图像画板用CreateImage)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;2.合并图片(ImagesMerge)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;3.插入文字(CreateChars)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;4.插入划线(CreateLine)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;5.下载或查看&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo (&apos;&lt;h2&gt;注意事项:&lt;/h2&gt;&apos;);</span><br><span class="line">        echo &apos;&lt;hr /&gt;&apos;;</span><br><span class="line">        echo &quot;&lt;font color=&apos;red&apos;&gt;注意事项：主图尽量改为png格式，这样的话图片会很清晰，在浏览器中直接查看效果不是很好，下载下来就会很清晰的。&lt;/font&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreatePalette 新建一个画板]</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $x_size     画板的宽度</span><br><span class="line">     * @param    int        $y_size     画板的高度</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function CreatePalette($config)</span><br><span class="line">    &#123;</span><br><span class="line">        $Palette = imagecreate($config[&apos;x_size&apos;], $config[&apos;y_size&apos;]);</span><br><span class="line">        imagecolorallocate($Palette, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        return $Palette;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [OrthogonBr 画一个矩形边框]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $x1         x坐标</span><br><span class="line">     * @param    int        $y1         y坐标</span><br><span class="line">     *</span><br><span class="line">     * @param    int       $red         红色</span><br><span class="line">     * @param    int       $green       绿色</span><br><span class="line">     * @param    int       $blue        蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function OrthogonBr($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imagerectangle($mainBg, $config[&apos;x1&apos;], $config[&apos;y1&apos;], $config[&apos;x2&apos;], $config[&apos;y2&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [OrthogonBg 画一个矩形实体]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $x1         x坐标</span><br><span class="line">     * @param    int        $y1         y坐标</span><br><span class="line">     *</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function OrthogonBg($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imagefilledrectangle($mainBg, $config[&apos;x1&apos;], $config[&apos;y1&apos;], $config[&apos;x2&apos;], $config[&apos;y2&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CircleBr 画一个椭圆边框]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $left       距离左边的距离</span><br><span class="line">     * @param    int        $top        距离上边的距离</span><br><span class="line">     * @param    int        $width      宽度</span><br><span class="line">     * @param    int        $height     高度</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function CircleBr($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imageellipse($mainBg, $config[&apos;left&apos;], $config[&apos;top&apos;], $config[&apos;width&apos;], $config[&apos;height&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CircleBg 画一个实体椭圆]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $left       距离左边的距离</span><br><span class="line">     * @param    int        $top        距离上边的距离</span><br><span class="line">     * @param    int        $width      宽度</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function CircleBg($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imagefilledellipse($mainBg, $config[&apos;left&apos;], $config[&apos;top&apos;], $config[&apos;width&apos;], $config[&apos;height&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [StarBr 画一个五角星边框]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $r          半径</span><br><span class="line">     * @param    int        $left       距离左边的距离</span><br><span class="line">     * @param    int        $top        距离上边的距离</span><br><span class="line">     */</span><br><span class="line">    public static function StarBr($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $r = $config[&apos;r&apos;];</span><br><span class="line">        $degree36 = deg2rad(36);</span><br><span class="line">        $l = 2 * $r * sin($degree36);</span><br><span class="line">        $a = $l * cos($degree36);</span><br><span class="line">        $b = $l * sin($degree36);</span><br><span class="line">        $c = $l / 2;</span><br><span class="line">        $d = $r * cos($degree36);</span><br><span class="line"></span><br><span class="line">        $px1 = $config[&apos;left&apos;];</span><br><span class="line">        $py1 = $config[&apos;top&apos;];</span><br><span class="line"></span><br><span class="line">        $px2 = $px1 + $a;</span><br><span class="line">        $py2 = $py1 + $b;</span><br><span class="line">        $px3 = $px1 + $c;</span><br><span class="line">        $py3 = $py1 + $r + $d;</span><br><span class="line">        $px4 = $px1 - $c;</span><br><span class="line">        $py4 = $py1 + $r + $d;</span><br><span class="line">        $px5 = $px1 - $a;</span><br><span class="line">        $py5 = $py1 + $b;</span><br><span class="line"></span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line"></span><br><span class="line">        imageline($mainBg, $px2, $py2, $px5, $py5, $color);</span><br><span class="line">        imageline($mainBg, $px1, $py1, $px3, $py3, $color);</span><br><span class="line">        imageline($mainBg, $px1, $py1, $px4, $py4, $color);</span><br><span class="line">        imageline($mainBg, $px2, $py2, $px4, $py4, $color);</span><br><span class="line">        imageline($mainBg, $px3, $py3, $px5, $py5, $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreateImage 新建一个图像画板]</span><br><span class="line">     * @param    url        $palette    图像的地址</span><br><span class="line">     * @param    string     $dst_w      目标图片的宽度</span><br><span class="line">     * @param    string     $dst_h      目标图片的高度</span><br><span class="line">     * @param    string     $bgWidth    画板的宽度</span><br><span class="line">     * @param    string     $bgHeight   画板的高度    这两项决定了图片如果小了是否会被拉伸</span><br><span class="line">     */</span><br><span class="line">    public static function CreateImage($palette, $dst_w = &apos;&apos;, $dst_h = &apos;&apos;, $bgWidth = &apos;&apos;, $bgHeight = &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $info = getimagesize($palette);</span><br><span class="line"></span><br><span class="line">        $backgroundFun = &apos;imagecreatefrom&apos; . image_type_to_extension($info[2], false);</span><br><span class="line">        $background = $backgroundFun($palette);</span><br><span class="line"></span><br><span class="line">        $backgroundWidth = imagesx($background);</span><br><span class="line">        $backgroundHeight = imagesy($background);</span><br><span class="line"></span><br><span class="line">        $imageRes = imageCreatetruecolor($bgWidth ? $bgWidth : $backgroundWidth, $bgHeight ? $bgHeight : $backgroundHeight);</span><br><span class="line">        $color = imagecolorallocate($imageRes, 255, 255, 255);</span><br><span class="line">        // 正式使用 这个定要注释</span><br><span class="line">        // imagecolortransparent($imageRes, $color);</span><br><span class="line">        imagefill($imageRes, 0, 0, $color);</span><br><span class="line"></span><br><span class="line">        imagecopyresized($imageRes, $background, 0, 0, 0, 0, $dst_w ? $dst_w : imagesx($background), $dst_h ? $dst_h : imagesy($background), imagesx($background), imagesy($background));</span><br><span class="line"></span><br><span class="line">        return $imageRes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreateChars 在画板中插入文字]</span><br><span class="line">     * @param    resource   $image      图片源</span><br><span class="line">     * @param    array      $config     配置信息</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     * @param    int        $num        次数越多文字越粗</span><br><span class="line">     * @param    int        $size       文字大小</span><br><span class="line">     * @param    int        $angle      旋转的角度 默认不旋转为0</span><br><span class="line">     * @param    int        $x          文字的坐标x</span><br><span class="line">     * @param    int        $y          文字的坐标y</span><br><span class="line">     * @param    int        $font       字体文件 这里一般为绝对路径</span><br><span class="line">     * @param    int        $text       文字内容</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    public static function CreateChars($image, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        //设置文字颜色</span><br><span class="line">        $color = imagecolorexactalpha($image, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;], $config[&apos;alpha&apos;]);</span><br><span class="line">        //循环多次为了加粗字体</span><br><span class="line">        for ($i = 1; $i &lt;= $config[&apos;num&apos;]; $i++) &#123;</span><br><span class="line"></span><br><span class="line">            imagettftext($image, $config[&apos;size&apos;], $config[&apos;angle&apos;], $config[&apos;x&apos;], $config[&apos;y&apos;], $color, $config[&apos;font&apos;], $config[&apos;text&apos;]);</span><br><span class="line">        &#125;</span><br><span class="line">        return $image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreateLine 画一条实线]</span><br><span class="line">     * @param    resource   $image      图片源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     * @param    int        $alpha      透明度 0不透明</span><br><span class="line">     * @param    int        $x1 x2      坐标x</span><br><span class="line">     * @param    int        $y1 y2      坐标y</span><br><span class="line">     */</span><br><span class="line">    public static function CreateLine($image, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        //设置线条颜色</span><br><span class="line">        $color = imagecolorexactalpha($image, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;], $config[&apos;alpha&apos;]);</span><br><span class="line">        //划线</span><br><span class="line">        imageline($image, $config[&apos;x1&apos;], $config[&apos;y1&apos;], $config[&apos;x2&apos;], $config[&apos;y2&apos;], $color);</span><br><span class="line">        return $image;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * [functionName 图片合并]</span><br><span class="line">     * 将 src_im 图像中坐标从 src_x，src_y 开始，宽度为 src_w，高度为 src_h 的一部分拷贝到 dst_im 图像中坐标为 dst_x 和 dst_y 的位置上。两图像将根据 pct</span><br><span class="line">     * 来决定合并程度，其值范围从 0 到 100。当 pct = 0 时，实际上什么也没做，当为 100 时对于调色板图像本函数和 imagecopy() 完全一样，它对真彩色图像实现了 alpha *</span><br><span class="line">     * 透明。</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static function ImagesMerge($mainBg, $second, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        imagecopymerge($mainBg, $second, $config[&apos;dst_x&apos;], $config[&apos;dst_y&apos;], $config[&apos;src_x&apos;], $config[&apos;src_y&apos;], $config[&apos;src_w&apos;], $config[&apos;src_h&apos;], $config[&apos;pct&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * [AutoWrap 文字换行]</span><br><span class="line">     * @param    int        $fontsize   字体大小</span><br><span class="line">     * @param    int        $angle      角度大小</span><br><span class="line">     * @param    int        $fontface   字体文件</span><br><span class="line">     * @param    string     $string     文字内容</span><br><span class="line">     * @param    width      $width      最大宽度 也就是达到这个宽度之后会换行</span><br><span class="line">     */</span><br><span class="line">    public static function AutoWrap($fontsize, $angle, $fontface, $string, $width)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $content = &quot;&quot;;</span><br><span class="line">        // 将字符串拆分成一个个单字 保存到数组 letter 中</span><br><span class="line">        for ($i = 0; $i &lt; mb_strlen($string); $i++) &#123;</span><br><span class="line">            $letter[] = mb_substr($string, $i, 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        foreach ($letter as $l) &#123;</span><br><span class="line">            $teststr = $content . &quot;&quot; . $l;</span><br><span class="line">            $testbox = imagettfbbox($fontsize, $angle, $fontface, $teststr);</span><br><span class="line">            // 判断拼接后的字符串是否超过预设的宽度</span><br><span class="line">            if (($testbox[2] &gt; $width) &amp;&amp; ($content !== &quot;&quot;)) &#123;</span><br><span class="line">                $content .= &quot;\n&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            $content .= $l;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $content = mb_convert_encoding($content, &quot;html-entities&quot;, &quot;utf-8&quot;);</span><br><span class="line"></span><br><span class="line">        return $content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [getInfo 获取图片信息]</span><br><span class="line">     * @param    url        $name       图片地址</span><br><span class="line">     * @return   array</span><br><span class="line">     */</span><br><span class="line">    public static function getInfo($name)</span><br><span class="line">    &#123;</span><br><span class="line">        $info = getimagesize($name);</span><br><span class="line"></span><br><span class="line">        $width = $info[0];</span><br><span class="line">        $height = $info[1];</span><br><span class="line">        $mime = $info[&apos;mime&apos;];</span><br><span class="line">        switch ($mime) &#123;</span><br><span class="line">            case &apos;image/jpeg&apos;:</span><br><span class="line">                $res = imagecreatefromjpeg($name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;image/gif&apos;:</span><br><span class="line">                $res = imagecreatefromgif($name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;image/png&apos;:</span><br><span class="line">                $res = imagecreatefrompng($name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;image/wbmp&apos;:</span><br><span class="line">                $res = imagecreatefromwbmp($name);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        return array(&apos;width&apos; =&gt; $width, &apos;height&apos; =&gt; $height, &apos;res&apos; =&gt; $res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [look 在浏览器中显示图片]</span><br><span class="line">     * @param    resource   $imageRes   图片源</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static function look($imageRes)</span><br><span class="line">    &#123;</span><br><span class="line">        header(&quot;Content-type:image/png&quot;);</span><br><span class="line">        imagejpeg($imageRes);</span><br><span class="line">        imagedestroy($imageRes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [load 下载图片]</span><br><span class="line">     * @param    resource   $img  图片源</span><br><span class="line">     * @param    url        $name 主图地址</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static function load($img, $name)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $info = self::getInfo($name);</span><br><span class="line"></span><br><span class="line">        $ext = pathinfo($name, PATHINFO_EXTENSION);</span><br><span class="line">        $file_path = &apos;./&apos; . date(&apos;Y-m-d&apos;);</span><br><span class="line"></span><br><span class="line">        if (!file_exists($file_path)) &#123;</span><br><span class="line">            mkdir($file_path, 0777, true);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $rand_name = $file_path . &apos;/&apos; . md5(mt_rand() . time()) . &quot;.&quot; . $ext;</span><br><span class="line"></span><br><span class="line">        switch ($ext) &#123;</span><br><span class="line">            case &apos;jpg&apos;:</span><br><span class="line">            case &apos;jpeg&apos;:</span><br><span class="line">            case &apos;jpe&apos;:</span><br><span class="line">                imagejpeg($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;png&apos;:</span><br><span class="line">                imagepng($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;gif&apos;:</span><br><span class="line">                imagegif($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;bmp&apos;:</span><br><span class="line">            case &apos;wbmp&apos;:</span><br><span class="line">                imagewbmp($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        //销毁资源</span><br><span class="line">        imagedestroy($info[&apos;res&apos;]);</span><br><span class="line">        imagedestroy($img);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用htpasswd为web网站增加安全性</title>
      <link href="/%E4%BD%BF%E7%94%A8htpasswd%E4%B8%BAweb%E7%BD%91%E7%AB%99%E5%A2%9E%E5%8A%A0%E5%AE%89%E5%85%A8%E6%80%A7/"/>
      <url>/%E4%BD%BF%E7%94%A8htpasswd%E4%B8%BAweb%E7%BD%91%E7%AB%99%E5%A2%9E%E5%8A%A0%E5%AE%89%E5%85%A8%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一.引言</p></blockquote><font color="#ff5722">什么是 htpasswd ?</font><br>&emsp;(1)htpasswd是开源 http 服务器apache httpd的一个命令工具，用于生成 http 基本认证的密码文件。<br>&emsp;(2)nginx底层提供了 <a href="http://www.nginx.cn/doc/standard/httpauthbasic.html" target="_blank" rel="noopener">HttpAuthBasic</a>模块，这个模块支持最基本的http认证，这是http协议支持的。当你访问网站时候会弹出一个对话框要求你输入账号密码,只要输入正确才能访问对应的网站。<br><font color="#ff5722">如果认证失败会怎么样 ?</font><br><a id="more"></a><br><img src="/使用htpasswd为web网站增加安全性/img/htpasswd.png"><br><font color="#ff5722">这样做的目的是什么 ?</font><br>&emsp;(1)为了禁止访问特殊的网页(这里暂时还没了解到特殊的用法…之后再补充)<br>&emsp;(2)是的,我用这个的原因是为walle项目安全考虑的,因为walle官方推荐为了安全尽量放在内网(这里应该是为了防止暴力破解),之前的的博文也有讲到可以使用双向认证,但是对初学者而言是很不友好、有点麻烦的,那么这个htpasswd就非常之简单了，就是敢敢单单。哎！坐下坐下这是基操。<br><blockquote><p>二.安装&amp;&amp;配置</p></blockquote><br>&emsp;第一步:检测是否已经安装了 httpd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#httpd -v</span><br><span class="line">Server version: Apache/2.4.6 (CentOS)</span><br><span class="line">Server built:   Apr 24 2019 13:45:48</span><br><span class="line"></span><br><span class="line">#没安装的执行</span><br><span class="line">#yum -y install httpd </span><br></pre></td></tr></table></figure><br>&emsp;第二步:创建用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#这里必须是nginx的安装目录.passwd后面是 账号 密码</span><br><span class="line"></span><br><span class="line">#htpasswd -bc /etc/nginx/.passwd daichongweb daichongweb</span><br><span class="line">#生成成功:Adding password for user daichongweb</span><br><span class="line"></span><br><span class="line">#注意:不同的机子可能nginx下的文件不同有的人是.htpasswd</span><br></pre></td></tr></table></figure><br>&emsp;第三步:nginx配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location  /  &#123;</span><br><span class="line">auth_basic            &quot;这里随意起个名字&quot;;</span><br><span class="line">auth_basic_user_file  /etc/nginx/.passwd;#这里是nginx安装目录下的密码文件</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&emsp;第四步:检测配置&amp;&amp;重启服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#nginx -t</span><br><span class="line"></span><br><span class="line">#nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">#nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br><span class="line"></span><br><span class="line">#重启</span><br><span class="line">#nginx -s reload</span><br></pre></td></tr></table></figure><br>&emsp;第五步:访问域名测试<br><img src="/使用htpasswd为web网站增加安全性/img/htpasswd1.png"><br><blockquote><p>三.其他操作</p></blockquote><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#删除用户</span><br><span class="line">#htpasswd -D /etc/nginx/.passwd daichongweb</span><br><span class="line"></span><br><span class="line">#修改密码</span><br><span class="line">#htpasswd -d /etc/nginx/.passwd daichongweb123</span><br><span class="line"></span><br><span class="line">#其他命令</span><br><span class="line">-c：创建一个加密文件</span><br><span class="line">-n：不更新加密文件，只将加密后的用户名密码显示在屏幕上</span><br><span class="line">-m：默认采用MD5算法对密码进行加密</span><br><span class="line">-d：采用CRYPT算法对密码进行加密</span><br><span class="line">-p：不对密码进行进行加密，即明文密码</span><br><span class="line">-s：采用SHA算法对密码进行加密</span><br><span class="line">-b：在命令行中一并输入用户名和密码而不是根据提示输入密码</span><br><span class="line">-D：删除指定的用户</span><br></pre></td></tr></table></figure><br><font color="#ff5722">本篇文章到这里就结束了，感谢大家的支持！</font>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】用jquery做爬虫</title>
      <link href="/%E7%94%A8jquery%E5%81%9A%E7%88%AC%E8%99%AB/"/>
      <url>/%E7%94%A8jquery%E5%81%9A%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>引言</p></blockquote><p>&emsp;之前公司有需求要做一个采集信息的工具,包括获取商品信息导入数据库,比价什么的功能,没办法只能尝试这做一下。<br>&emsp;考虑到是做定向爬取,我就选择了jquery,因为jquery相比其他语言做爬虫是简单轻松很多。<br><blockquote><p>不同语言自然会有不同用处。离开环境谈哪个好，哪个不好都是耍流氓。<br>1，如果是自己做着玩的话，定向爬几个页面，效率不是核心要求的话，问题不会大，什么语言都行的，性能差异不会大。当然，如果碰到十分复杂的页面，正则写的很复杂的话，爬虫的可维护性就会下降。<br><a id="more"></a><br>2，如果是做定向爬取，而目标又要解析动态js。<br>那么这个时候，用普通的请求页面，然后得到内容的方法肯定不行了，就要一个类似firfox，chrome的js引擎来对js代码做动态解析。这个时候推荐casperJS+phantomjs或slimerJS+phantomjs</p><p></p><p><br>3，如果是大规模的网站爬取。<br>这个时候就要考虑到，效率，扩展性，可维护性，等等了。<br>大规模的爬取涉及的方面很多，比如分布式爬取，判重机制，任务调度。这些问题深入下去哪一个简单了？<br>语言选取这个时候很重要。<br>NodeJs：做爬虫效率很高。高并发，多线程编程变成了简单的遍历和callback，内存cpu占用小，要处理好callback。</p><p>PHP：各种框架到处有，随便拉个来用都行。但是，PHP的效率真的有问题…不多说<br>Python:我用python写的比较多，对各种问题都有比较好的支持。scrapy框架很好用，优点多。<br>我觉得js也不是很适合写…效率问题。没写过，估计会有麻烦一堆。<br>据我知道的，大公司也有用c++的，总之大多数都是在开源框架上改造。真重新造个轮子的不多吧。<br>不值。</p><footer><strong>来自segmentfault</strong><cite>一位大佬</cite></footer></blockquote><br><blockquote><p>jquery实现</p></blockquote><br><figure class="highlight plain"><figcaption><span>抓取代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">javascript: (function() &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        var Arr = &#123;</span><br><span class="line">            &apos;name&apos;: getTitle(),</span><br><span class="line">            &apos;img&apos;: getImgs(),</span><br><span class="line">            &apos;price&apos;: getPirce(),</span><br><span class="line">            &apos;sku&apos;: getSku(),</span><br><span class="line">            &apos;desc&apos;: getDesc(),</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取图片</span><br><span class="line">        function getImgs() &#123;</span><br><span class="line">            var imgArr = [];</span><br><span class="line">            $(&quot;#dt-tab ul li&quot;).each(function(k, v) &#123;</span><br><span class="line">                var imgJson = JSON.parse($(v).attr(&apos;data-imgs&apos;));</span><br><span class="line">                if (imgJson) &#123;</span><br><span class="line">                    imgArr.push(imgJson.preview);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;);</span><br><span class="line">            return imgArr;</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取名称</span><br><span class="line">        function getTitle() &#123;</span><br><span class="line">            var _this = $(&apos;#mod-detail-title .d-title&apos;);</span><br><span class="line">            return _this.html();</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取价格</span><br><span class="line">        function getPirce() &#123;</span><br><span class="line">            var _this = $(&quot;#mod-detail-price .price .ladder-3-1&quot;);</span><br><span class="line">            var priceJson = JSON.parse(_this.attr(&apos;data-range&apos;));</span><br><span class="line">            return priceJson.price;</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取sku属性</span><br><span class="line">        function getSku() &#123;</span><br><span class="line">            var skuArr = [];</span><br><span class="line">            var _this = $(&quot;.obj-sku .table-sku tr&quot;);</span><br><span class="line">            if (_this) &#123;</span><br><span class="line">                var step = 0;</span><br><span class="line">                _this.each(function(k, v) &#123;</span><br><span class="line">                    step++;</span><br><span class="line">                    skuArr.push(&#123;</span><br><span class="line">                        &apos;sku_name&apos;: $(v).find(&apos;.name span&apos;).html(),</span><br><span class="line">                        &apos;price&apos;: $(v).find(&apos;.price span .value&apos;).html(),</span><br><span class="line">                        &apos;img&apos;: getSkuImg(step),</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;;</span><br><span class="line">            return skuArr;</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取商品详情</span><br><span class="line">        function getDesc() &#123;</span><br><span class="line">            var descArr = [];</span><br><span class="line">            var _this = $(&quot;#mod-detail-description img&quot;);</span><br><span class="line">            if (_this) &#123;</span><br><span class="line">                _this.each(function(k, v) &#123;</span><br><span class="line">                    var url = $(v).attr(&apos;src&apos;);</span><br><span class="line">                    var patt = new RegExp(&quot;[a-zA-z]+://[^\s]*&quot;);</span><br><span class="line">                    if(patt.test(url))&#123;</span><br><span class="line">                        descArr.push(url);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;;</span><br><span class="line">            return descArr;</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取sku图片</span><br><span class="line">        function getSkuImg(step) &#123;</span><br><span class="line">            if ($(&quot;#dt-tab ul li&quot;) &amp;&amp; $(&quot;.obj-sku .table-sku tr&quot;)) &#123;</span><br><span class="line">                return $(&quot;#dt-tab ul li:eq(&quot; + step + &quot;) .box-img img&quot;).attr(&apos;src&apos;);</span><br><span class="line">            &#125;;</span><br><span class="line">            return &apos;&apos;;</span><br><span class="line">        &#125;;</span><br><span class="line">        if(confirm(&apos;获取成功，确认要采集吗？&apos;)==true)&#123;</span><br><span class="line">            console.log(Arr);</span><br><span class="line">            return false;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                type:&quot;post&quot;,</span><br><span class="line">                url:&apos;www.daichongweb.com&apos;,</span><br><span class="line">                data:&#123;</span><br><span class="line">                    post:Arr</span><br><span class="line">                &#125;,</span><br><span class="line">                dataType:&apos;json&apos;,</span><br><span class="line">                success:function(res)&#123;</span><br><span class="line">                    if(res.code==0)&#123;</span><br><span class="line">                        alert(&apos;采集成功！&apos;);</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        alert(res.message);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,error:function(res)&#123;</span><br><span class="line">                    alert(&apos;采集失败！&apos;);</span><br><span class="line">                &#125;,beforeSend:function(res)&#123;</span><br><span class="line">                    $(&apos;body&apos;).append(&apos;&lt;div id=&quot;daichongweb&quot; style=&quot;position:fixed;top:0;left:0;background: rgba(0, 0, 0, .5);text-align: center;line-height: 20;font-size: 30px;color: white;width:100vw;height:100vh;z-index:1000000000;&quot;&gt;采集中！&lt;/div&gt;&apos;);</span><br><span class="line">                &#125;,complete:function(res)&#123;</span><br><span class="line">                    $(&quot;#daichongweb&quot;).remove();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (err) &#123;</span><br><span class="line">        alert(err);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><br><a href="https://detail.1688.com/offer/532767414753.html?spm=a312h.2018_new_sem.dh_002.9.4182da6cBnSleC&tracelog=p4p&clickid=b71344bc8a2845a89bec27e826ef5244&sessionid=ca394d2c134b91816dc881204b47063c" target="_blank" rel="noopener">定向商品链接->1688.com</a>&emsp;当然了,这个采集代码不只是针对这一个商品,它可以抓取和他页面结构一样的所有商品。</p><p><font color="#ff5722">PS:这里的抓取可根据自己的实际业务来改变,比如需要让页面中的轮播图切换这个才能获取,那就在抓取之前写个切换的脚本;切换一张抓取一张;</font><br><blockquote><p>怎么才能在谷歌中运行这个脚本</p></blockquote><br>&emsp;方法一：直接放在控制台(这里并不推荐使用,因为公司的人不可能都懂代码,而且操作麻烦)。<br>&emsp;方法二：在浏览器中添加书签,把代码复制到网址栏里,要采集的时候点击一下就ok了！<br><img src="/用jquery做爬虫/img/jquery.png"></p><p><font color="#ff5722">PS:整体运用情况看,个人觉得jquery做采集还是挺不错的。当然相比php、python的话显得有点低端的感觉,那也没办法谁让php、python是动态获取的呢?</font><br>之后会用php或python做个一个动态抓取的脚本,当然也包括比价之类的运用…..<br><blockquote><p>后端处理数据(可忽略)</p></blockquote><br><figure class="highlight php"><figcaption><span>php处理</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'./oss/autoload.php'</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">OSS</span>\<span class="title">OssClient</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">OSS</span>\<span class="title">Core</span>\<span class="title">OssException</span>;</span><br><span class="line"></span><br><span class="line">header(<span class="string">'Content-Type: text/html;charset=utf-8'</span>);</span><br><span class="line">header(<span class="string">'Access-Control-Allow-Origin:*'</span>); <span class="comment">// *代表允许任何网址请求</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Methods:POST,GET,OPTIONS,DELETE'</span>); <span class="comment">// 允许请求的类型</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Credentials: true'</span>); <span class="comment">// 设置是否允许发送 cookies</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Headers: Content-Type,Content-Length,Accept-Encoding,X-Requested-with, Origin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST)&#123;</span><br><span class="line"></span><br><span class="line">$post = $_POST[<span class="string">'post'</span>];</span><br><span class="line"><span class="keyword">if</span>($post)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理大图</span></span><br><span class="line">$imgArr = $post[<span class="string">'img'</span>];</span><br><span class="line"><span class="keyword">if</span>($imgArr)&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($imgArr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$name = saveImgToLocal($v);</span><br><span class="line">$ossPath = <span class="string">'collect/'</span>.date(<span class="string">'Ym'</span>).<span class="string">'/'</span>.$name;</span><br><span class="line">uploadImgOss($ossPath,<span class="string">'./img/'</span>.$name);</span><br><span class="line">$imgArr[$k] = $ossPath;</span><br><span class="line">&#125;</span><br><span class="line">$post[<span class="string">'img'</span>] = $imgArr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'sku'</span>, $post))&#123;</span><br><span class="line"><span class="comment">//处理小图</span></span><br><span class="line">$sku = $post[<span class="string">'sku'</span>];</span><br><span class="line"><span class="keyword">if</span>($sku)&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($sku <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$name = saveImgToLocal($v[<span class="string">'img'</span>]);</span><br><span class="line">$ossPath = <span class="string">'collect/'</span>.date(<span class="string">'Ym'</span>).<span class="string">'/'</span>.$name;</span><br><span class="line">uploadImgOss($ossPath,<span class="string">'./img/'</span>.$name);</span><br><span class="line">$sku[$k][<span class="string">'img'</span>] = $ossPath;</span><br><span class="line">&#125;</span><br><span class="line">$post[<span class="string">'sku'</span>] = $sku;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'desc'</span>, $post))&#123;</span><br><span class="line"><span class="comment">//处理详情图</span></span><br><span class="line">$desc = $post[<span class="string">'desc'</span>];</span><br><span class="line"><span class="keyword">if</span>($desc)&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($desc <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$name = saveImgToLocal($v);</span><br><span class="line">$ossPath = <span class="string">'collect/'</span>.date(<span class="string">'Ym'</span>).<span class="string">'/'</span>.$name;</span><br><span class="line">uploadImgOss($ossPath,<span class="string">'./img/'</span>.$name);</span><br><span class="line">$desc[$k] = $ossPath;</span><br><span class="line">&#125;</span><br><span class="line">$post[<span class="string">'desc'</span>] = $desc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//连接数据库</span></span><br><span class="line">$Db = mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"root"</span>,<span class="string">"daichongweb"</span>,<span class="string">"shop"</span>);</span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_errno($Db)) </span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"连接 MySQL 失败: "</span> . mysqli_connect_error(); </span><br><span class="line">&#125;</span><br><span class="line">insertDb($Db,$post);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存图片到本地</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveImgToLocal</span><span class="params">($telefile,$path=<span class="string">'./img/'</span>)</span></span>&#123;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $telefile);</span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, <span class="number">120</span>);</span><br><span class="line">    $file = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line"></span><br><span class="line">    $filename = pathinfo($telefile, PATHINFO_BASENAME);</span><br><span class="line">    $resource = fopen($path . $filename, <span class="string">'a'</span>);</span><br><span class="line">    fwrite($resource, $file);</span><br><span class="line">    fclose($resource);</span><br><span class="line">    <span class="keyword">return</span> $filename;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上传图片的oss</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uploadImgOss</span><span class="params">($object,$filePath)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">$accessKeyId = <span class="string">"阿里ossKeyID"</span>;</span><br><span class="line">$accessKeySecret = 阿里ossKeySecret;</span><br><span class="line">$endpoint = <span class="string">"项目地址"</span>;</span><br><span class="line">$bucket = <span class="string">"项目名称"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    $ossClient = <span class="keyword">new</span> OssClient($accessKeyId, $accessKeySecret, $endpoint);</span><br><span class="line">   $ossClient-&gt;uploadFile($bucket, $object, $filePath);</span><br><span class="line">&#125; <span class="keyword">catch</span>(OssException $e) &#123;</span><br><span class="line">   print_r($e-&gt;getMessage());</span><br><span class="line">   <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获得随机字符串</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $len             需要的长度</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $special        是否需要特殊符号</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> string       返回随机字符串</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandomStr</span><span class="params">($len, $special = false)</span></span>&#123;</span><br><span class="line">$chars = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>, <span class="string">"f"</span>, <span class="string">"g"</span>, <span class="string">"h"</span>, <span class="string">"i"</span>, <span class="string">"j"</span>, <span class="string">"k"</span>,</span><br><span class="line">    <span class="string">"l"</span>, <span class="string">"m"</span>, <span class="string">"n"</span>, <span class="string">"o"</span>, <span class="string">"p"</span>, <span class="string">"q"</span>, <span class="string">"r"</span>, <span class="string">"s"</span>, <span class="string">"t"</span>, <span class="string">"u"</span>, <span class="string">"v"</span>,</span><br><span class="line">    <span class="string">"w"</span>, <span class="string">"x"</span>, <span class="string">"y"</span>, <span class="string">"z"</span>, <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>, <span class="string">"G"</span>,</span><br><span class="line">    <span class="string">"H"</span>, <span class="string">"I"</span>, <span class="string">"J"</span>, <span class="string">"K"</span>, <span class="string">"L"</span>, <span class="string">"M"</span>, <span class="string">"N"</span>, <span class="string">"O"</span>, <span class="string">"P"</span>, <span class="string">"Q"</span>, <span class="string">"R"</span>,</span><br><span class="line">    <span class="string">"S"</span>, <span class="string">"T"</span>, <span class="string">"U"</span>, <span class="string">"V"</span>, <span class="string">"W"</span>, <span class="string">"X"</span>, <span class="string">"Y"</span>, <span class="string">"Z"</span>, <span class="string">"0"</span>, <span class="string">"1"</span>, <span class="string">"2"</span>,</span><br><span class="line">    <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>($special)&#123;</span><br><span class="line">    $chars = array_merge($chars, <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">"!"</span>, <span class="string">"@"</span>, <span class="string">"#"</span>, <span class="string">"$"</span>, <span class="string">"?"</span>, <span class="string">"|"</span>, <span class="string">"&#123;"</span>, <span class="string">"/"</span>, <span class="string">":"</span>, <span class="string">";"</span>,</span><br><span class="line">        <span class="string">"%"</span>, <span class="string">"^"</span>, <span class="string">"&amp;"</span>, <span class="string">"*"</span>, <span class="string">"("</span>, <span class="string">")"</span>, <span class="string">"-"</span>, <span class="string">"_"</span>, <span class="string">"["</span>, <span class="string">"]"</span>,</span><br><span class="line">        <span class="string">"&#125;"</span>, <span class="string">"&lt;"</span>, <span class="string">"&gt;"</span>, <span class="string">"~"</span>, <span class="string">"+"</span>, <span class="string">"="</span>, <span class="string">","</span>, <span class="string">"."</span></span><br><span class="line">    ));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$charsLen = count($chars) - <span class="number">1</span>;</span><br><span class="line">shuffle($chars);                            <span class="comment">//打乱数组顺序</span></span><br><span class="line">$str = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$len; $i++)&#123;</span><br><span class="line">     $str .= $chars[mt_rand(<span class="number">0</span>, $charsLen)];    <span class="comment">//随机取出一位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//把数据插入数据库</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertDb</span><span class="params">($Db,$data)</span></span>&#123;</span><br><span class="line"><span class="comment">//商品主表</span></span><br><span class="line">$pd_product_field = [</span><br><span class="line"><span class="string">'product_art_no'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'product_number'</span> =&gt; getRandomStr(<span class="number">32</span>),</span><br><span class="line"><span class="string">'pd_name'</span> =&gt; $data[<span class="string">'name'</span>],</span><br><span class="line"><span class="string">'pd_subtitle'</span> =&gt;<span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_descs'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_category_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_seller_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_brand_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'express_tpl_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'meun_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_unit'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_weight'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_weight_unit'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_volume'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_volume_unit'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'min_price'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'market_price'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'cost_price'</span>=&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'detail_descr'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_key_word'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_remark'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_picture_prefix'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_detail_info'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'detail_title'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'created_at'</span> =&gt; date(<span class="string">'Y-m-d H:i:s'</span>),</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$pd_detail_info = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'desc'</span>] <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$pd_detail_info .= <span class="string">'&lt;img src="'</span>.$v.<span class="string">'"&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$pd_product_field[<span class="string">'pd_detail_info'</span>] = addslashes(bin2hex(gzcompress($pd_detail_info)));</span><br><span class="line">$pd_product_field[<span class="string">'pd_image_url'</span>] = implode(<span class="string">','</span>,$data[<span class="string">'img'</span>]);</span><br><span class="line">$pd_product_field[<span class="string">'pd_translation_pic'</span>] = implode(<span class="string">','</span>,$data[<span class="string">'img'</span>]);</span><br><span class="line">$pd_product_keys = <span class="string">''</span>;</span><br><span class="line">$pd_product_values = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($pd_product_field <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$pd_product_keys .= $key.<span class="string">','</span>;</span><br><span class="line">$pd_product_values .= <span class="string">"'"</span>.$value.<span class="string">"'"</span>.<span class="string">','</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$pd_product_keys = trim($pd_product_keys,<span class="string">','</span>);</span><br><span class="line">$pd_product_values = trim($pd_product_values,<span class="string">','</span>);</span><br><span class="line">$inser_pd_product = <span class="string">"insert into pd_product($pd_product_keys) value($pd_product_values)"</span>;</span><br><span class="line"></span><br><span class="line">mysqli_autocommit($Db,<span class="keyword">false</span>);<span class="comment">//开启事务</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">$product_number = $pd_product_field[<span class="string">'product_number'</span>];</span><br><span class="line">$pd_product_reslut = mysqli_query($Db,$inser_pd_product);</span><br><span class="line">$product_id = mysqli_insert_id($Db);</span><br><span class="line">$pd_sku_result = <span class="number">0</span>;</span><br><span class="line">$pd_sku_properties_reslut = <span class="number">0</span>;</span><br><span class="line">$sku_unique_code = getRandomStr(<span class="number">32</span>);</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'sku'</span>,$data) &amp;&amp; count($data[<span class="string">'sku'</span>])&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'sku'</span>] <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line"></span><br><span class="line">$property = $value[<span class="string">'sku_name'</span>];</span><br><span class="line">$pd_price = $value[<span class="string">'price'</span>];</span><br><span class="line">$sku_picture_url = $value[<span class="string">'img'</span>];</span><br><span class="line"></span><br><span class="line">$insert_pd_sku = <span class="string">"insert into pd_sku(sku_unique_code,product_number,property,sku_code,product_id) value('$sku_unique_code','$product_number','$property','',$product_id)"</span>;</span><br><span class="line">$pd_sku_result = mysqli_query($Db,$insert_pd_sku);</span><br><span class="line">$sku_id = mysqli_insert_id($Db);</span><br><span class="line"></span><br><span class="line">$insert_pd_sku_properties = <span class="string">"insert into pd_sku_properties(sku_id,sku_unique_code,product_id,product_number,sku_value,pd_price,sku_picture_url,sku_code) value($sku_id,'',$product_id,'$product_number','$property','$pd_price','$sku_picture_url','')"</span>;</span><br><span class="line">$pd_sku_properties_reslut = mysqli_query($Db,$insert_pd_sku_properties);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$pd_sku_result = <span class="number">1</span>;</span><br><span class="line">$pd_sku_properties_reslut = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($pd_product_reslut &amp;&amp; $pd_sku_result &amp;&amp; $pd_sku_properties_reslut)&#123;</span><br><span class="line">mysqli_commit($Db);<span class="comment">//提交事务</span></span><br><span class="line">$code = <span class="number">0</span>;</span><br><span class="line">$message = <span class="string">'插入成功'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mysqli_rollback($Db);<span class="comment">//回滚</span></span><br><span class="line">$code = <span class="number">1</span>;</span><br><span class="line">$message = <span class="string">'插入失败'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (\<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">mysqli_rollback($Db);<span class="comment">//回滚</span></span><br><span class="line">$code = <span class="number">1</span>;</span><br><span class="line">$message = $e-&gt;getMessage();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除本地下载的图片</span></span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'img'</span>] <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$arr = explode(<span class="string">'/'</span>,$value);</span><br><span class="line">unlink(<span class="string">'./img/'</span>.array_pop($arr));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'desc'</span>, $data))&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'desc'</span>] <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$arr = explode(<span class="string">'/'</span>,$value);</span><br><span class="line">unlink(<span class="string">'./img/'</span>.array_pop($arr));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'sku'</span>, $data))&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'sku'</span>] <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$arr = explode(<span class="string">'/'</span>,$value[<span class="string">'img'</span>]);</span><br><span class="line">unlink(<span class="string">'./img/'</span>.array_pop($arr));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> json_encode([</span><br><span class="line"><span class="string">'code'</span> =&gt; $code,</span><br><span class="line"><span class="string">'message'</span> =&gt; $message</span><br><span class="line">]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】walle配置或部署可能会遇到的小问题</title>
      <link href="/walle%E9%85%8D%E7%BD%AE%E6%88%96%E9%83%A8%E7%BD%B2%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
      <url>/walle%E9%85%8D%E7%BD%AE%E6%88%96%E9%83%A8%E7%BD%B2%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一.<b>引言</b></p></blockquote><p>&emsp;作为一个刚接触walle不久的新手,在配置和部署的过程中难免会遇到一些奇奇怪怪的问题。当然排除一些本身就对Linux什么的玩的比较好的大神。<br>&emsp;本来想多写点字凑个字数…后来想想还是算了。<br><blockquote><p>二.<b>配置时</b></p></blockquote><br>&emsp;在<font color="#ff5722">项目管理-新建项目</font>里,新增项目的时候可能会出现的问题<br>&emsp;意思是目标机最少要有一个<br><a id="more"></a><br><img src="/walle配置或部署可能会遇到的小问题/img/error.png"><br>&emsp;操作步骤<br><img src="/walle配置或部署可能会遇到的小问题/img/error1.png"><br>&emsp;正确位置<br><img src="/walle配置或部署可能会遇到的小问题/img/error2.png"><br><blockquote><p>三.<b>部署时</b></p></blockquote><br>&emsp;部署的时候可能出现这样的错误,因为啥呢？因为你在目标机上没有创建根目录<br><img src="/walle配置或部署可能会遇到的小问题/img/error4.png"><br>&emsp;就是这个<font color="#ff5722">data</font>目录,虽然他提示说会自动生成,但是没生成…倒是那个<font color="#ff5722">datar</font>能自动生成<br><img src="/walle配置或部署可能会遇到的小问题/img/error3.png"><br><blockquote><p>四.<b>访问时</b></p></blockquote><br>&emsp;访问的时候出现这个错误,就要检查一下的nginx配置是否正确<br><img src="/walle配置或部署可能会遇到的小问题/img/error6.png"><br>&emsp;看看是否缺了<font color="#ff5722">下图所示</font>,或者是端口占用、域名配置不一致的情况<br><img src="/walle配置或部署可能会遇到的小问题/img/error5.png"><br>&emsp;如果是长时间闲置的时候也会弹出一个<font color="#ff5722">后台服务未启动</font>,这个不用担心没有什么问题</p><p><font color="#ff5722">PS:其他情况在walle官网上有介绍,如502/404等错误</font><br><blockquote><p>五.<b>安全方面</b></p></blockquote><br>&emsp;官网建议把walle部署在内网,这样应该是没有什么大问题。<br>&emsp;这里的话推荐搞个双向认证,这个也是我研究好久的。<br><blockquote><p>六.<b>最后</b></p></blockquote><br>说起来用的频率不是很高,更多的问题还是需要长时间的使用才能发现,当然了本篇文章会持续的更新(在发现bug的前提下..)。</p>]]></content>
      
      
      <categories>
          
          <category> liunx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> walle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>walle搭建项目部署系统</title>
      <link href="/walle%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%B3%BB%E7%BB%9F/"/>
      <url>/walle%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>二.<b>前言</b>-<font color="#ff5722">为什么要使用walle来管理项目</font></p></blockquote><blockquote><p>walle 让用户代码发布终于可以不只能选择 jenkins！支持各种web代码发布，php、java、python、go等代码的发布、回滚可以通过web来一键完成。walle 一个可自由配置项目，更人性化，高颜值，支持git、多用户、多语言、多项目、多环境同时部署的开源上线部署系统</p><footer><strong>引言</strong><cite><a href="http://www.walle-web.io/docs/" target="_blank" rel="noopener">来自walle官网</a></cite></footer></blockquote><p>&emsp;<font color="#ff5722">1)</font>.个人而言,walle为我提供了一个非常方便的项目管理平台,从项目开发到项目测试再到项目上线walle为整个流程提供了一套完美的解决方案。</p><p>&emsp;<font color="#ff5722">2)</font>.对公司团队而言,walle为管理者提供了一个非常好的项目管理工具。对项目质量、项目的进度、程序的安全和可靠性等等都提供了一定的保障。<br><a id="more"></a><br><blockquote><p>三.<b>正文</b>-<font color="#ff5722">walle到底能做什么</font></p></blockquote><br><img src="/walle搭建项目部署系统/img/walle.png"><br>&emsp;<font color="#ff5722">PS:</font>walle做的工作就是当你提交代码上线的时候,他会从宿主机(<font color="#ff5722">walle系统所在的机器</font>)向你配置的git地址拉取代码、打包、上传到目标机器(<font color="#ff5722">正式环境所在的机器</font>)上去、然后解压成完整的项目。</p><font color="#ff5722">问:</font>walle仅仅只能做这些工作吗？<br><font color="#ff5722">答:</font>1).当然不是啦!每次提交上线单(项目代码),walle都会保存一份在目标机上。当你新上线的程序发现了bug,这是你可以选择回滚代码(<font color="#ff5722">ai,这个就和InnoDB的事务有些相似了</font>)。<br><br>&emsp;2).相比传统的ftp和sftp部署项目,walle就更加显得安全和可靠。<br><br>&emsp;3).相比jenkins,walle是由国人开发;界面、操作更加具有亲和力。<br><br>&emsp;4).同样他具有相比jenkins相同的特性pre_deploy、post_deploy、pre_release、post_release等高级任务这对于大部分开发框架来说都是非常棒的一个功能。<br><br><font color="#ff5722">总结</font>:walle的优点并不止这些,更多的内容需要大家亲自去发现和挖掘。<br><blockquote><p>四.<b>搭建walle部署系统-<a href="http://www.walle-web.io/docs/installation.html" target="_blank" rel="noopener">官网文档</a><br></b></p></blockquote><br>&emsp;walle本身是由Python开发,但web需要使用nginx服务;所以搭建lnmp环境是比不可少的一步。<br><br>&emsp;第一步:克隆项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/meolu/walle-web.git</span><br></pre></td></tr></table></figure><br>&emsp;第二步: 配置nginx<br><figure class="highlight plain"><figcaption><span>nginx配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">upstream webservers &#123;</span><br><span class="line">    server 0.0.0.0:5000 weight=1; # 负载设置</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  你的域名或ip; # 域名设置</span><br><span class="line">    access_log   /usr/local/nginx/logs/walle.log main;</span><br><span class="line">    index index.html index.htm; # 日志目录</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ /index.html;</span><br><span class="line">        add_header access-control-allow-origin *;</span><br><span class="line">        root 指定到walle项目下fe目录; # 前端代码已集成到walle-web，即walle-web/fe的绝对路径</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /api/ &#123;</span><br><span class="line">        add_header access-control-allow-origin *;</span><br><span class="line">        proxy_pass      http://webservers;</span><br><span class="line">        proxy_set_header X-Forwarded-Host $host:$server_port;</span><br><span class="line">        proxy_set_header  X-Real-IP  $remote_addr;</span><br><span class="line">        proxy_set_header    Origin        $host:$server_port;</span><br><span class="line">        proxy_set_header    Referer       $host:$server_port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /socket.io/ &#123;</span><br><span class="line">        add_header access-control-allow-origin *;</span><br><span class="line">        proxy_pass      http://webservers;</span><br><span class="line">        proxy_set_header X-Forwarded-Host $host:$server_port;</span><br><span class="line">        proxy_set_header  X-Real-IP  $remote_addr;</span><br><span class="line">        proxy_set_header    Origin        $host:$server_port;</span><br><span class="line">        proxy_set_header    Referer       $host:$server_port;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header X-NginX-Proxy true;</span><br><span class="line"></span><br><span class="line">        # WebScoket Support</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&emsp;第三步: 添加hosts<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line"># 新增一行</span><br><span class="line">127.0.0.1  你的域名 # 与nginx配置一致</span><br></pre></td></tr></table></figure><br>&emsp;第四步: 安装Python 2.7 + pip。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 切换到walle-web根目录下操作</span><br><span class="line">sh admin.sh init</span><br></pre></td></tr></table></figure><br>&emsp;第五步: 修改walle配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 切换到walle-web根目录下操作</span><br><span class="line">vi walle/config/settings_prod.py</span><br><span class="line"># @TODO 是为要修改的部分</span><br><span class="line"># 服务启动 @TODO</span><br><span class="line"># HOST 修改为与 nginx server_name 一致.</span><br><span class="line"># 后续在web hooks与通知中用到此域名.</span><br><span class="line">HOST = 你的域名</span><br><span class="line">PORT = 5000</span><br><span class="line"># https True, http False</span><br><span class="line">SSL = False</span><br><span class="line"></span><br><span class="line"># 数据库设置 @TODO</span><br><span class="line">SQLALCHEMY_DATABASE_URI = &apos;mysql://user:password@localhost:3306/walle?charset=utf8&apos;</span><br><span class="line"></span><br><span class="line"># 本地代码检出路径（用户查询分支, 编译, 打包） #TODO</span><br><span class="line">CODE_BASE = 项目路径,也就是宿主机的git仓库的路径</span><br><span class="line"></span><br><span class="line"># 日志存储路径 @TODO</span><br><span class="line"># 默认为walle-web项目下logs, 可自定义路径, 需以 / 结尾</span><br><span class="line"># LOG_PATH = &apos;/var/logs/walle/&apos;</span><br><span class="line">LOG_PATH = os.path.join(Config.PROJECT_ROOT, &apos;logs&apos;)</span><br><span class="line">LOG_PATH_ERROR = os.path.join(LOG_PATH, &apos;error.log&apos;)</span><br><span class="line">LOG_PATH_INFO = os.path.join(LOG_PATH, &apos;info.log&apos;)</span><br><span class="line">LOG_FILE_MAX_BYTES = 100 * 1024 * 1024</span><br><span class="line"></span><br><span class="line"># 邮箱配置 @TODO</span><br><span class="line">MAIL_SERVER = &apos;smtp.exmail.qq.com&apos;</span><br><span class="line">MAIL_PORT = 465</span><br><span class="line">MAIL_USE_SSL = True</span><br><span class="line">MAIL_USE_TLS = False</span><br><span class="line">MAIL_DEFAULT_SENDER = &apos;service@walle-web.io&apos;</span><br><span class="line">MAIL_USERNAME = &apos;service@walle-web.io&apos;</span><br><span class="line">MAIL_PASSWORD = &apos;Ki9y&amp;3U82&apos;</span><br></pre></td></tr></table></figure><br>&emsp;第六步: 初始化项目。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据库</span><br><span class="line">mysql  -hxx -uxx -p -e&apos;CREATE SCHEMA walle&apos;</span><br><span class="line"># Data Migration</span><br><span class="line">sh admin.sh migration</span><br></pre></td></tr></table></figure><br>&emsp;第七步: 启动walle。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">sh admin.sh start</span><br><span class="line"># 重启</span><br><span class="line">sh admin.sh restart </span><br><span class="line"># 升级</span><br><span class="line">sh admin.sh upgrade</span><br><span class="line"># Migration</span><br><span class="line">sh admin.sh migration</span><br></pre></td></tr></table></figure><br>最后访问你的域名就可以访问了！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">超管：super@walle-web.io \ Walle123</span><br><span class="line">所有者：owner@walle-web.io \ Walle123</span><br><span class="line">负责人：master@walle-web.io \ Walle123</span><br><span class="line">开发者：developer@walle-web.io \ Walle123</span><br><span class="line">访客：reporter@walle-web.io \ Walle123</span><br></pre></td></tr></table></figure><br><font color="#ff5722">PS:下篇文章将会介绍如何配置项目、项目配置中可能会遇到的问题及解决办法、上线项目要注意的事项</font>]]></content>
      
      
      <categories>
          
          <category> liunx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> walle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】hexo+github+coding搭建博客(绑定多域名)</title>
      <link href="/hexo-github-coding%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-%E7%BB%91%E5%AE%9A%E5%A4%9A%E5%9F%9F%E5%90%8D/"/>
      <url>/hexo-github-coding%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-%E7%BB%91%E5%AE%9A%E5%A4%9A%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<p>&emsp;一.最近服务器快到期了,也突然想起之前有个网友问我怎么用hexo+github搭建个人博客,好多天没有回他,心里也总是过意不去。不论他有没有解决这个问题,现在也需要补发一篇关于hexo+github+coding搭建个人博客的文章了。</p><p>&emsp;二.也希望通过这篇博客,能让更多正处于初期阶段的同学顺利的搭建属于自己的博客;也同样适合没有编程经验的同学来亲手感觉一下编程的乐趣！<br><a id="more"></a><br>&emsp;三.相比使用个人服务器搭建而言利用github或coding搭建博客更加省事省力又省钱,最便宜的服务器一年也需要一千左右的租赁费,而使用github、coding、码云等搭建是完全免费的,并且不用部署服务器环境,也不用担心证书的问题。<br><blockquote><p>第一步:hexo本地环境的搭建</p></blockquote><br><a>ps:这里因为hexo官网有教程,我就不一一介绍了,简单介绍一下搭建流程</a></p><a>hexo本地搭建流程:</a><p>&emsp;&emsp;1).安装git<br>&emsp;&emsp;2).安装nodejs<br>&emsp;&emsp;3).安装hexo</p><a>参数配置</a><p>1).首先是根目录下<a>_config.yml</a>文件的配置。<br>&emsp;&emsp;1.配置导航和博客基本信息。<br>&emsp;&emsp;2.配置部署地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#文章生成配置</span><br><span class="line">#permalink: :year/:month/:day/:title/ </span><br><span class="line">//文章路径 原有的路径为‘daihongweb.com/2019/04/22/hexo+github+coding搭建博客(绑定多域名)’</span><br><span class="line">permalink: :title/ </span><br><span class="line">//文章路径 改为路径为‘daihongweb.com/hexo+github+coding搭建博客(绑定多域名)’ 有利于seo优化</span><br><span class="line">permalink_defaults:</span><br><span class="line">#代码部署配置</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">      coding: coding仓库地址,master,//master是代码分支</span><br><span class="line">      github: github仓库地址,master,</span><br></pre></td></tr></table></figure><br><a>ps:这里建议大家再本地把一切搞好之后再添部署地址，或者在本地测试的时候不要使用 hexo d 命令</a><br><blockquote><p>第二步:搭建远程仓库</p></blockquote><br>1).coding建立git仓库<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/add.png"><br>2).获取git地址<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/address.png" class="结果"><br><a>ps:这里建议大家使用https,使用ssh需要秘钥什么的比较麻烦</a><br>3).github建立git仓库<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/github_add.png"><br>4).获取git地址<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/github_address.png"><br><blockquote><p>第三步:部署项目</p></blockquote><br><a>ps:部署的时候可能会弹出要求登录的输入框,这个第一次部署的时候输入一次,之后就不需要再输入了</a><br>1).项目中执行<br><figure class="highlight plain"><figcaption><span>部署项目</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo c &amp;&amp; hexo g &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><br><a>ps:当你访问博客的时候你会发现文章内所有的图片都加载不出来,解决办法如下</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#项目根目录下_config.yml</span><br><span class="line">external_link: true</span><br><span class="line">post_asset_folder: true</span><br><span class="line">relative_link: true</span><br><span class="line">future: true</span><br></pre></td></tr></table></figure><br><a>ps:修改之后把图片移入文章名称对应的文件夹下的img文件夹下;修改文章中引入的路径;在重新执行上边的命令就ok了</a><br><blockquote><p>第四步:开启pages服务</p></blockquote><br>1).coding开启pages服务<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/coding_start.png"><br><img src="/hexo-github-coding搭建博客-绑定多域名/img/coding_show.png"><br><a>ps:coding开启之后它会自动部署一次,点击自动分配的域名地址查看是否有问题</a></p><p>2).github开始pages服务<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/github_start.png"><br>在下面可以找到：<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/github_show.png"><br>显示成这样就说明部署成功了！<br><blockquote><p>第五步:绑定个人域名，并实现多域名绑定</p></blockquote><br>首先你需要购买一个域名并且已备案。<br>1).添加解析<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/dns.png"><br><a>ps:我这里是用的阿里云的,记录类型为CNAME,记录值为你github或coding的地址;所有的服务商解析都是一样的！</a><br>2).对应的github绑定个人域名<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/bind_github.png"><br><a>ps:下面勾选的是开始https,记得勾选上;之后会提示你开始失败什么的,不用担心。稍等1小时再去刷新就好了！</a><br>3).coding绑定个人域名<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/bind_coding.png"><br><a>ps:绑定之后点击申请,有的时候会出现错误,暂时还没有找到解决的办法;添加绑定之后记得点击上边的部署！</a></p><blockquote><p>总结:问题来了,到底是怎么实现绑定多个域名的？啊哈哈,其实就是利用多个pages服务;例如现有2个域名,那么一个域名绑定coding,一个域名绑定github;并且还可以实现国外的访问分配到github上,国内的访问分配到coding上来提升访问速度！</p><footer><strong>Daichongweb.blog</strong></footer></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>composer 报错php_pdo_firebird.dll找不到指定模块</title>
      <link href="/composer-%E6%8A%A5%E9%94%99php-pdo-firebird-dll%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E6%A8%A1%E5%9D%97/"/>
      <url>/composer-%E6%8A%A5%E9%94%99php-pdo-firebird-dll%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>自从把php版本切换到7.0后，一旦使用composer就会出现php_pdo_firebird.dll找不到指定模块的错误，而且还不止这一个。百度查过很多资料最后都是没有解决，最后受到一篇博客的启发，尝试在php环境里卸载掉这些扩展，最后，，居然解决了？？<br><a id="more"></a><br>实际的原因是因为在PHP7中已经不再支持使用ext/mysql这个扩展了,把不支持的扩展直接给卸载掉就ok了。<br><blockquote><p>错误信息：</p></blockquote><br><img src="/composer-报错php-pdo-firebird-dll找不到指定模块/img/pdo.png" class="报错"><br><blockquote><p>修改方法：</p></blockquote><br>根据实际情况而定，我用的是phpstudy<br><img src="/composer-报错php-pdo-firebird-dll找不到指定模块/img/save.png" class="修改扩展"><br><blockquote><p>结果：</p></blockquote><br><img src="/composer-报错php-pdo-firebird-dll找不到指定模块/img/composer.png" class="结果"></p><p>最后又试了几次，发现只要是报错什么模块找不到，就直接卸载。</p>]]></content>
      
      
      <categories>
          
          <category> php扩展类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sublime text3 不能安装插件</title>
      <link href="/sublime-text3-%E4%B8%8D%E8%83%BD%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/"/>
      <url>/sublime-text3-%E4%B8%8D%E8%83%BD%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>用sublime的小伙伴会发现最近用Package Control安装插件的时候总会提示请前往一个地址寻求帮助的一句话。我在百度上也了解了一下，大多都说是被墙了或者是版本的问题，真实的原因还不知道是那个，不管了反正能解决就行。</p><p>解决方案：<br><a id="more"></a><br><blockquote><p>第一步：下载channel_v3.json文件到本地</p></blockquote><br>文件地址：<br><a>channe_v3.json /img/channel_v3.json</a></p><blockquote><p>第二步：修改配置</p></blockquote><p>找到：<br><img src="/sublime-text3-不能安装插件/img/sublime.png" class="配置方法"><br>打开内容<br><img src="/sublime-text3-不能安装插件/img/sublime1.png" class="文件内容"><br>添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;channels&quot;:</span><br><span class="line">[</span><br><span class="line">&quot;D:/PHPTutorial/channel_v3.json&quot;//文件的地址</span><br><span class="line">],</span><br></pre></td></tr></table></figure><br>最后关闭sublime重启，ctrl+shift+p 找个插件试试果然可以了！！</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sublime Text3自动格式化php代码</title>
      <link href="/sublime-Text3%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96php%E4%BB%A3%E7%A0%81/"/>
      <url>/sublime-Text3%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96php%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>sublime text3很小的一个代码开发工具，但功能却很强大。开发者可安装各种插件帮助开发，提升代码质量和开发效率，相比一些HD或pS的开发工具，个人还是比较喜欢sublime。</p><p>这篇文章主要讲sublime中自动格式化php代码的插件介绍和安装配置。<br><a id="more"></a><br>首先下载插件<a href="https://github.com/nanch/phpfmt_stable" target="_blank" rel="noopener">phpfmt</a></p><p>下载之后把文件名改为phpfmt放入：首选项-》浏览插件目录中。重启sublime。</p><p>第二步：选择首选项-》package Settings-》phpfmt-》settings-Default 点击</p><p>第三步：配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;version&quot;: 4,</span><br><span class="line">&quot;php_bin&quot;:&quot;D:/PHPTutorial/php/php-7.2.1-nts/php.exe&quot;,//你的php安装路径</span><br><span class="line">&quot;format_on_save&quot;:true,</span><br><span class="line">&quot;option&quot;: &quot;value&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>保存之后重启，按ctrl+s就会自动格式化了，然后格式化的还是不美观。</p><p>那么下一步选择PSR2，按住ctrl+shift+p，输入phpfmt: toggle PSR2 回车，在测试你就会发现格式漂亮了许多。</p><p>注意：ctrl+shift+p无法使用是需要安装package Control 百度搜一下教程，这里就不一一介绍了</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql把字段的值用逗号连接成字符串</title>
      <link href="/mysql%E6%8A%8A%E5%AD%97%E6%AE%B5%E7%9A%84%E5%80%BC%E7%94%A8%E9%80%97%E5%8F%B7%E8%BF%9E%E6%8E%A5%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/mysql%E6%8A%8A%E5%AD%97%E6%AE%B5%E7%9A%84%E5%80%BC%E7%94%A8%E9%80%97%E5%8F%B7%E8%BF%9E%E6%8E%A5%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<p>两张多对多关系的表进行数据关联查询，有两种常见的写法(我只知道两种,嘿嘿)：<br>(1) 从主表中查出来所关联的字段，例如order_id，然后循环数组将order_id用逗号隔开；副表进行in查询（当然这种写法比较low,新手使用的比较多）</p><p>(2) 使用leftJoin关联，左边为主表<br>以上仅举例</p><p>有些情况下只能使用先查再in的写法，那么怎么简化它呢(就不想先查再循环连接)？</p><p>那么一个mysql的函数就能使用上了，他就是<a>GROUP_CONCAT()</a>.这个函数就是把某个字段的值用字符串连接成<a>A,B,C</a>这样的格式<br><a id="more"></a><br>用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GROUP_CONCAT(字段) </span><br></pre></td></tr></table></figure><br>去重时用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GROUP_CONCAT(DISTINCT(字段))</span><br></pre></td></tr></table></figure><br>执行查询语句之后就会得到这个字段用逗号隔开的值</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpExcel分析复杂表格数据(远程文件)</title>
      <link href="/phpExcel%E5%88%86%E6%9E%90%E5%A4%8D%E6%9D%82%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE-%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6/"/>
      <url>/phpExcel%E5%88%86%E6%9E%90%E5%A4%8D%E6%9D%82%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE-%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>phpExcel是一个专门操作数据表格的类，他可以导入、导出excel表格中的数据，简单、漂亮，非常适合导入、导出、分析数据来使用。</p><p>以下代码主要为了实现从阿里OSS上获取数据表格，并分析表格数据导入数据库，唯一不同的是这个表格是不规则，分析数据的话相对来数复杂了一些，废话不多少，下面直接介绍如何处理这种复杂的表格：<br><a id="more"></a><br><blockquote><p>第一步：分析表格</p></blockquote><br><img src="/phpExcel分析复杂表格数据-远程文件/img/1.png"><br>经过处理，把这个底色为白色的表格处理成正常的形式<br><img src="/phpExcel分析复杂表格数据-远程文件/img/2.png"><br>经过处理可以发现，这个表格的数据是有规律的。<br>坐标B6是账号，C6是房号，D6是房类，一次类推，每行不同的数据都是由不同字母和数字的组合。</p><p>特殊的一点就是房价在行数据的下一行，通过观察可以发现，每行的真实数据的列坐标是偶数，相对应的房价都是在奇数上，这样一分析就可以找到方法分析数据了。</p><blockquote><p>第二步：实现代码</p></blockquote><figure class="highlight php"><figcaption><span>实现代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">'../excel/Classes/PHPExcel/IOFactory.php'</span>);<span class="comment">//静态</span></span><br><span class="line">file_put_contents(<span class="string">'abc.xls'</span>,file_get_contents(<span class="string">'https://www.baidu.com/20190226/caf55125b3f510b9242235bfa7f06212.xls'</span>));</span><br><span class="line"></span><br><span class="line">$filePath = <span class="string">'abc.xls'</span>;</span><br><span class="line">$fileType = PHPExcel_IOFactory::identify($filePath);<span class="comment">//检测文件类型</span></span><br><span class="line">$fileRead = PHPExcel_IOFactory::createReader($fileType);<span class="comment">//读取文件</span></span><br><span class="line">$excelObj = $fileRead-&gt;load($filePath);</span><br><span class="line">$sheet = $excelObj-&gt;getActiveSheet();</span><br><span class="line">$highestRow = $sheet-&gt;getHighestRow();<span class="comment">//行数</span></span><br><span class="line">$highestColumn = $sheet-&gt;getHighestColumn();<span class="comment">//列数</span></span><br><span class="line"></span><br><span class="line">$dataSet = <span class="keyword">array</span>();<span class="comment">//数据</span></span><br><span class="line"><span class="comment">//这里是从第6行开始，因为上5行都是空的，直接过滤</span></span><br><span class="line"><span class="keyword">for</span>($row = <span class="number">6</span>;$row&lt;=$highestRow<span class="number">-4</span>;$row++)&#123;</span><br><span class="line">    $dataSet[$row] = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">//列从B开始A也是空的</span></span><br><span class="line"><span class="keyword">for</span>($column=<span class="string">"B"</span>;$column&lt;=$highestColumn;$column++)&#123;</span><br><span class="line"><span class="comment">//如果列坐标是F(房价) and 是奇数行，说明已经到房价那一行了</span></span><br><span class="line"><span class="keyword">if</span>($column==<span class="string">'F'</span> &amp;&amp; $row%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="comment">//列坐标是F 行坐标7 7-1 就是上一行,这里的意思就是上一行的F里的值等于下一行的F的值</span></span><br><span class="line">$dataSet[$row<span class="number">-1</span>][$column] = $sheet-&gt;getCell($column.$row)-&gt;getValue();</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//如果列坐标是L和N说明是时间</span></span><br><span class="line"><span class="keyword">if</span>($column ==<span class="string">'L'</span> || $column == <span class="string">'N'</span>)&#123;</span><br><span class="line">$time = $sheet-&gt;getCell($column.$row)-&gt;getValue();</span><br><span class="line"><span class="comment">//转化时间</span></span><br><span class="line">$dataSet[$row][$column] = date(<span class="string">'Y-m-d H:i:s'</span>,PHPExcel_Shared_Date::ExcelToPHP($time));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$dataSet[$row][$column] = $sheet-&gt;getCell($column.$row)-&gt;getValue();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除已经合并过的奇数行</span></span><br><span class="line"><span class="keyword">if</span>($row%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">unset</span>($dataSet[$row]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//删除空数组</span></span><br><span class="line">$dataSet[$row] = array_filter($dataSet[$row]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($dataSet);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>第三步：查看结果</p></blockquote><figure class="highlight php"><figcaption><span>打印数据</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">6</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">233756</span></span><br><span class="line">            [C] =&gt; <span class="number">1</span>AC65</span><br><span class="line">            [D] =&gt; DDYG</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-04</span> <span class="number">12</span>:<span class="number">42</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-03</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">400</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">8</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">233758</span></span><br><span class="line">            [C] =&gt; <span class="number">1</span>BC65</span><br><span class="line">            [D] =&gt; DDYG</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [H] =&gt; <span class="number">48</span>+<span class="number">456</span>+<span class="number">844654654</span></span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-04</span> <span class="number">12</span>:<span class="number">44</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-03</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">400</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">10</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">241572</span></span><br><span class="line">            [C] =&gt; E55b</span><br><span class="line">            [D] =&gt; DDYG</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-16</span> <span class="number">09</span>:<span class="number">40</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-03</span><span class="number">-30</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">12</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">246484</span></span><br><span class="line">            [C] =&gt; <span class="number">2</span>AC52</span><br><span class="line">            [D] =&gt; YGTYF</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [H] =&gt; <span class="number">476</span>+<span class="number">5456456156415641</span></span><br><span class="line">            [I] =&gt; 博客</span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-25</span> <span class="number">17</span>:<span class="number">23</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-27</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">362</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">14</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">246485</span></span><br><span class="line">            [C] =&gt; <span class="number">2</span>BC52</span><br><span class="line">            [D] =&gt; YGTYF</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [H] =&gt; <span class="number">415645156</span></span><br><span class="line">            [I] =&gt; 博客</span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-25</span> <span class="number">17</span>:<span class="number">24</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-27</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">362</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">16</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">246486</span></span><br><span class="line">            [C] =&gt; D86a</span><br><span class="line">            [D] =&gt; DDYG</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [H] =&gt; <span class="number">156</span>+<span class="number">1112</span></span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-25</span> <span class="number">17</span>:<span class="number">25</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-28</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [P] =&gt; 业主自主</span><br><span class="line">            [F] =&gt; <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>很完美，如有其它需要可根据代码调整。</p>]]></content>
      
      
      <categories>
          
          <category> php扩展类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phpExcel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel小程序模板消息发送</title>
      <link href="/larveral%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81/"/>
      <url>/larveral%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81/</url>
      
        <content type="html"><![CDATA[<p>今天来一篇laravel5.5的小程序模板消息发送示例，总感觉用laravel框架写的代码逼格高了很多，奇怪！！</p><p>1.小程序向用户发送模板消息分为两步：<br>    第一步：用户在小程序上进行表单操作(例如提交表单),此时前端要获取到form_id传递给后端<br>    第二步：后端接收到from_id，再查询用户的openid，按照微信文档的数据格式进行发送<br>2.发送之前有一下几个前提:<br>    第一:微信小程序以开通了消息服务<br>    第二:微信小程序以配置了模板消息<br>    第三:发送的数据内容必须和微信小程序配置的模板消息一致<br>    第四:获取到正确的用户openid<br>    第五:获取到未过期的微信access_token<br><a id="more"></a><br><blockquote><p>首先是发送示例:</p></blockquote></p><figure class="highlight php"><figcaption><span>php代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WxHelper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * seedTempMessage 发送模板消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> DaiChong</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@DateTime</span> 2019-01-04</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>    array      $seedData    需要发送的数据 格式为(key=&gt;value)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>    string     $tempKey     tempkey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>   json</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">seedTempMessage</span><span class="params">($seedData,$tempKey)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( <span class="keyword">empty</span>($seedData) )&#123;</span><br><span class="line">            <span class="keyword">self</span>::seedError(<span class="string">'请传输数据(格式为Array)！'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送模板消息地址</span></span><br><span class="line">        $postUrl = config(<span class="string">"company.seedTempMeg"</span>);</span><br><span class="line">        <span class="keyword">if</span>( $postUrl == <span class="keyword">false</span> )&#123;</span><br><span class="line">            <span class="keyword">self</span>::seedError(<span class="string">'未定义微信模板消息地址(seedTempMeg)！'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($tempKey)&#123;</span><br><span class="line">            <span class="comment">//查询消息模板内容</span></span><br><span class="line">            $temp = \App\Models\WechatMessageModel::where(<span class="string">'temp_key'</span>,$tempKey)-&gt;first()-&gt;toArray();</span><br><span class="line">            <span class="keyword">if</span>( <span class="keyword">empty</span>($temp) )&#123;</span><br><span class="line">                <span class="keyword">self</span>::seedError(<span class="string">'未添加此模板!'</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $seedData[<span class="string">'template_id'</span>] = $temp[<span class="string">'temp_id'</span>];</span><br><span class="line">            $temp_context = $temp[<span class="string">'context'</span>];</span><br><span class="line">            $temp_json = vsprintf($temp_context,$seedData);<span class="comment">//替换数据</span></span><br><span class="line"></span><br><span class="line">            $temp_array = json_decode($temp_json,<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//获取AccessToken</span></span><br><span class="line">            $accessToken = <span class="keyword">self</span>::getAccessToken();</span><br><span class="line">            $postUrl = str_replace(<span class="string">'ACCESS_TOKEN'</span>, $accessToken, $postUrl);</span><br><span class="line">            $curl = <span class="keyword">new</span> \JSocket();</span><br><span class="line">            $curl-&gt;setUrl($postUrl);</span><br><span class="line">            $curl-&gt;setRetFormat(\JSocket::retFormatText);</span><br><span class="line">            <span class="keyword">foreach</span> ($temp_array <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                $curl-&gt;setParam($key,$value);</span><br><span class="line">            &#125;</span><br><span class="line">            $curl-&gt;setTimeout(<span class="number">30</span>);</span><br><span class="line">            $curl-&gt;setHeader(<span class="string">"Content-Type:application/json"</span>);</span><br><span class="line">            $curl-&gt;setRequestType(\JSocket::retFormatJson);</span><br><span class="line">            $curl-&gt;setMethod(\JSocket::methodPost);</span><br><span class="line">            $curl-&gt;exe();</span><br><span class="line">            $result = $curl-&gt;getRet();</span><br><span class="line">            <span class="keyword">self</span>::seedError($result);</span><br><span class="line">            <span class="keyword">return</span> $result;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">self</span>::seedError(<span class="string">'未传入模板Key(tempKey)!'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取微信AccessToken 我这里已经做了access_token处理，具体细节按照微信文档进行操作或评论</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getAccessToken</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $access_token = \App\Data\WxAccessTokenData::info();</span><br><span class="line">        <span class="keyword">if</span> ($access_token)&#123;</span><br><span class="line">            <span class="keyword">return</span> $access_token;</span><br><span class="line">        &#125;</span><br><span class="line">        $getAccessTokenUrl = config(<span class="string">"company.getAccessToken"</span>);</span><br><span class="line">        $getAccessTokenUrl = str_replace([<span class="string">"APPID"</span>,<span class="string">"APPSECRET"</span>],[config(<span class="string">"company.appid"</span>),config(<span class="string">"company.appsecret"</span>)],$getAccessTokenUrl);</span><br><span class="line">        $curl = <span class="keyword">new</span> \JSocket();</span><br><span class="line">        $curl-&gt;setUrl($getAccessTokenUrl);</span><br><span class="line">        $curl-&gt;setRetFormat(\JSocket::retFormatJson);</span><br><span class="line">        $curl-&gt;setTimeout(<span class="number">30</span>);</span><br><span class="line">        $curl-&gt;setMethod(\JSocket::methodGet);</span><br><span class="line">        $curl-&gt;exe();</span><br><span class="line">        $r = $curl-&gt;getRet();</span><br><span class="line">        <span class="keyword">return</span> \App\Data\WxAccessTokenData::set($r[<span class="string">"access_token"</span>],$r[<span class="string">"expires_in"</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//发送失败</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">seedError</span><span class="params">($msg)</span></span>&#123;</span><br><span class="line">        \Log::info($msg);</span><br><span class="line">        <span class="keyword">return</span> \ResponseHelper::success([</span><br><span class="line">            <span class="string">'code'</span>    =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">'message'</span> =&gt; $msg</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数据配置:</p></blockquote><figure class="highlight json"><figcaption><span>配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"touser"</span>:<span class="string">"%s"</span>,</span><br><span class="line">    <span class="attr">"template_id"</span>:<span class="string">"%s"</span>,</span><br><span class="line">    <span class="attr">"page"</span>:<span class="string">"%s"</span>,</span><br><span class="line">    <span class="attr">"form_id"</span>:<span class="string">"%s"</span>,</span><br><span class="line">    <span class="attr">"data"</span>:&#123;</span><br><span class="line">        <span class="attr">"keyword1"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"keyword2"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"keyword3"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"keyword4"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"keyword5"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里配置也要和微信模板消息的配置一致，例如模板消息的配置内容最多到keyword8,那么这里就要在复制3个,”keyword5”:{“value”:”%s”}出来添加到后面，可以看到数据的内容都是用<a>%s</a>表示的，就是为了使用<a href="http://php.net/manual/en/function.vsprintf.php" title="php官网介绍" target="_blank" rel="noopener">vsprintf</a>替换数据。<br><blockquote><p>发送配置:</p></blockquote><br><figure class="highlight php"><figcaption><span>发送配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送模板消息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">postSeedTemp</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $request = \Request::all();</span><br><span class="line">        <span class="keyword">if</span>( $request[<span class="string">'openid'</span>] == <span class="keyword">false</span> || $request[<span class="string">'form_id'</span>] == <span class="keyword">false</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> \ResponseHelper::error(<span class="string">"缺少参数!"</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $array = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'touser'</span>       =&gt; $request[<span class="string">'openid'</span>],</span><br><span class="line">            <span class="string">'template_id'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="string">'page'</span>         =&gt; <span class="string">'pages/home/home'</span>,</span><br><span class="line">            <span class="string">'form_id'</span>      =&gt; $request[<span class="string">'form_id'</span>],</span><br><span class="line">            <span class="string">'keyword1'</span>     =&gt; <span class="string">'卖家正在积极准备商品'</span>,</span><br><span class="line">            <span class="string">'keyword2'</span>     =&gt; <span class="string">'顺丰快递'</span>,</span><br><span class="line">            <span class="string">'keyword3'</span>     =&gt; <span class="string">'4324242342'</span>,</span><br><span class="line">            <span class="string">'keyword4'</span>     =&gt; <span class="string">'S123456789'</span>,</span><br><span class="line">            <span class="string">'keyword5'</span>     =&gt; <span class="string">'你的物流状态已更新'</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> \ResponseHelper::success([</span><br><span class="line">            <span class="string">'result'</span> =&gt; \WxHelper::seedTempMessage($array,<span class="string">'logisticsMsg'</span>)</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>可以看出这里的配置和数据配置是一一对应的。<br><blockquote><p>curl模拟提交示例:</p></blockquote><br><figure class="highlight php"><figcaption><span>curl类</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JSocket</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> methodGet=<span class="string">"GET"</span>;              <span class="comment">//发起GET请求</span></span><br><span class="line">    <span class="keyword">const</span> methodPost=<span class="string">"POST"</span>;            <span class="comment">//发起POST请求</span></span><br><span class="line">    <span class="keyword">const</span> methodDelete=<span class="string">"DELETE"</span>;        <span class="comment">//发起DELETE请求</span></span><br><span class="line">    <span class="keyword">const</span> methodPut=<span class="string">"PUT"</span>;          <span class="comment">//发起PUT请求</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> retFormatJson=<span class="string">"JSON"</span>;     <span class="comment">//返回json格式</span></span><br><span class="line">    <span class="keyword">const</span> retFormatXml=<span class="string">"XML"</span>;       <span class="comment">//返回XML格式</span></span><br><span class="line">    <span class="keyword">const</span> retFormatText=<span class="string">"Text"</span>;       <span class="comment">//返回XML格式</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $ch;            <span class="comment">//链接对象</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> $url;               <span class="comment">//请求地址</span></span><br><span class="line">    <span class="keyword">private</span> $requestType;       <span class="comment">//请求方式</span></span><br><span class="line">    <span class="keyword">private</span> $param=[];             <span class="comment">//请求参数</span></span><br><span class="line">    <span class="keyword">private</span> $timeout=<span class="number">10</span>;           <span class="comment">//超时时间</span></span><br><span class="line">    <span class="keyword">private</span> $header=[];         <span class="comment">//请求头信息</span></span><br><span class="line">    <span class="keyword">private</span> $method=JSocket::methodGet;        <span class="comment">//请求方式</span></span><br><span class="line">    <span class="keyword">private</span> $file;          <span class="comment">//文件</span></span><br><span class="line">    <span class="keyword">private</span> $ssl;           <span class="comment">//证书文件</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> $ret;                                   <span class="comment">//返回结果</span></span><br><span class="line">    <span class="keyword">private</span> $retFormat=JSocket::retFormatJson;      <span class="comment">//返回格式</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ch = curl_init();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setRetFormat</span><span class="params">($retFormat)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;retFormat=$retFormat;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setRequestType</span><span class="params">($requestType)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;requestType=$requestType;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setUrl</span><span class="params">($url)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;url=$url;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setParam</span><span class="params">($key,$value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;param[$key]=$value;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getParam</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;param;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求超时时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $timeout</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setTimeout</span><span class="params">($timeout)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;timeout=$timeout;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求头</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $header</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setHeader</span><span class="params">($header)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;header[]=$header;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setMethod</span><span class="params">($method)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;method=$method;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置发送文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setFile</span><span class="params">($key,$file)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file[$key]=curl_file_create($file);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置整数文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $ssl</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ssl</span><span class="params">($ssl)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ssl=$ssl;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 请求接口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exe</span><span class="params">()</span></span>&#123;</span><br><span class="line">        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_TIMEOUT, <span class="keyword">$this</span>-&gt;timeout);</span><br><span class="line">        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;header)&#123;</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_HTTPHEADER, <span class="keyword">$this</span>-&gt;header);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_HEADER,<span class="keyword">FALSE</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">$this</span>-&gt;method)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="keyword">self</span>::methodPost:</span><br><span class="line">                curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POST, <span class="keyword">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;file)&#123;</span><br><span class="line">                    curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POSTFIELDS, <span class="keyword">$this</span>-&gt;file);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;param)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;requestType==<span class="keyword">self</span>::retFormatJson)&#123;</span><br><span class="line">                        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POSTFIELDS, json_encode(<span class="keyword">$this</span>-&gt;param));</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;requestType==<span class="keyword">self</span>::retFormatXml)&#123;</span><br><span class="line">                        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POSTFIELDS, \DataBaseHelper::arrayToXml(<span class="keyword">$this</span>-&gt;param));</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POSTFIELDS, http_build_query(<span class="keyword">$this</span>-&gt;param));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> <span class="keyword">self</span>::methodDelete:</span><br><span class="line">                curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_CUSTOMREQUEST, <span class="string">'DELETE'</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="keyword">self</span>::methodGet:</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;param)&#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;url = <span class="keyword">$this</span>-&gt;url . (strpos(<span class="keyword">$this</span>-&gt;url, <span class="string">'?'</span>) ? <span class="string">'&amp;'</span> : <span class="string">'?'</span>) . http_build_query(<span class="keyword">$this</span>-&gt;param);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ssl)&#123;</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSLCERTTYPE,<span class="string">'PEM'</span>);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSLCERT, <span class="keyword">$this</span>-&gt;ssl[<span class="string">'cert'</span>]);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSLKEYTYPE,<span class="string">'PEM'</span>);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSLKEY, <span class="keyword">$this</span>-&gt;ssl[<span class="string">'key'</span>]);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSL_VERIFYPEER,<span class="keyword">TRUE</span>);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSL_VERIFYHOST,<span class="number">2</span>);<span class="comment">//严格校验</span></span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_HEADER, <span class="keyword">FALSE</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;ssl[<span class="string">'ca'</span>]))&#123;</span><br><span class="line">                curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_CAINFO, <span class="keyword">$this</span>-&gt;ssl[<span class="string">'ca'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_URL, <span class="keyword">$this</span>-&gt;url);</span><br><span class="line">        $starttime=<span class="keyword">$this</span>-&gt;microtimeFloat();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ret = curl_exec(<span class="keyword">$this</span>-&gt;ch);</span><br><span class="line">        $endtime = <span class="keyword">$this</span>-&gt;microtimeFloat();</span><br><span class="line">        $errorNum=curl_errno(<span class="keyword">$this</span>-&gt;ch);</span><br><span class="line">        $errorMsg=curl_error(<span class="keyword">$this</span>-&gt;ch);</span><br><span class="line">        $runtime = number_format(($endtime-$starttime), <span class="number">4</span>).<span class="string">'s'</span>;</span><br><span class="line">        <span class="keyword">if</span>($errorNum)&#123;</span><br><span class="line">            Log::error(<span class="keyword">$this</span>-&gt;url, [<span class="string">"param"</span>=&gt;<span class="keyword">$this</span>-&gt;param,<span class="string">"result"</span>=&gt;$errorNum,<span class="string">"runtime"</span>=&gt;$runtime,<span class="string">"response"</span>=&gt;<span class="keyword">$this</span>-&gt;ret]);</span><br><span class="line">            Log::error(<span class="string">"curl请求错误信息："</span>.$errorMsg);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;http_code = curl_getinfo(<span class="keyword">$this</span>-&gt;ch,CURLINFO_HTTP_CODE); </span><br><span class="line">        curl_close (<span class="keyword">$this</span>-&gt;ch);</span><br><span class="line">        Log::info(<span class="keyword">$this</span>-&gt;url, [<span class="string">"param"</span>=&gt;<span class="keyword">$this</span>-&gt;param,<span class="string">"status"</span>=&gt;<span class="keyword">$this</span>-&gt;http_code,<span class="string">"runtime"</span>=&gt;$runtime,<span class="string">"response"</span>=&gt;<span class="keyword">$this</span>-&gt;ret]);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getRet</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">$this</span>-&gt;retFormat)&#123;</span><br><span class="line">            <span class="keyword">case</span> JSocket::retFormatJson:</span><br><span class="line">                <span class="keyword">return</span> json_decode(<span class="keyword">$this</span>-&gt;ret,<span class="keyword">TRUE</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> JSocket::retFormatXml:</span><br><span class="line">                <span class="keyword">return</span> \DataBaseHelper::xmlToArray(<span class="keyword">$this</span>-&gt;ret);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;ret;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHttpCode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;http_code;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 精确时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> type</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">microtimeFloat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($usec, $sec) = explode(<span class="string">" "</span>, microtime());</span><br><span class="line">        <span class="keyword">return</span> ((float)$usec + (float)$sec);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> php框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tp5模型事件‘before_insert’用法</title>
      <link href="/tp5%E6%A8%A1%E5%9E%8B%E4%BA%8B%E4%BB%B6%E2%80%98beforeInsert%E2%80%99%E7%94%A8%E6%B3%95/"/>
      <url>/tp5%E6%A8%A1%E5%9E%8B%E4%BA%8B%E4%BB%B6%E2%80%98beforeInsert%E2%80%99%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>tp5的模型事件只有在调用模型方法的时候生效，使用查询构造器是无效的。</p><footer><strong>引言TP5官网</strong></footer></blockquote><p>也就是说，不实例化模型进行操作before_insert这个方法是不执行的。</p><p>模型的意义就是为了简化控制器操作，简化逻辑处理，提升代码的整洁度和可读性。这样一来模型事件起到了至关重要的作用。<br><a id="more"></a><br>这篇文章就介绍一下模型事件‘before_insert’事件对于下单逻辑的帮助。<br><figure class="highlight php"><figcaption><span>模型ShopOrder</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">daichongweb</span>\<span class="title">helper</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopOrderM</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $table = <span class="string">'shop_text'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">self</span>::beforeInsert(<span class="function"><span class="keyword">function</span><span class="params">($ShopOrderM)</span></span>&#123;</span><br><span class="line"><span class="comment">//创建订单号</span></span><br><span class="line">       $ShopOrderM[<span class="string">'orderno'</span>] = helper::buildOrderno(<span class="string">'T'</span>, <span class="string">'shop_text'</span>);$ShopOrderM[<span class="string">'name'</span>] = $ShopOrderM[<span class="string">'name'</span>].<span class="string">'1'</span>;<span class="comment">//处理前端传过来的数据进行操作</span></span><br><span class="line">       <span class="keyword">return</span> $ShopOrderM;</span><br><span class="line">&#125;,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight php"><figcaption><span>控制器</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">daichongweb</span>\<span class="title">helper</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">response</span>\<span class="title">Json</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Cache</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">controller</span>\<span class="title">ShopMain</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商城下单接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopOrder</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下单测试</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">orderText</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$info = input();</span><br><span class="line"><span class="comment">//验证器</span></span><br><span class="line">$validate = <span class="keyword">new</span> \app\common\validate\ShopOrderV();</span><br><span class="line">        <span class="keyword">if</span>(!$validate-&gt;check($info)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Json([</span><br><span class="line"><span class="string">'code'</span>    =&gt; <span class="number">1</span>,</span><br><span class="line"><span class="string">'message'</span> =&gt; $validate-&gt;getError(),</span><br><span class="line">]);</span><br><span class="line">        &#125;</span><br><span class="line">$shopOrder = <span class="keyword">new</span> \app\common\model\ShopOrderM();</span><br><span class="line">$shopOrder-&gt;save($info);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从控制器的代码可以看出，控制器的逻辑处理只有接收数据、验证、执行插入。<br>生成订单、处理数据全部放在模型的新增前处理。<br>$ShopOrderM[‘name’] = $ShopOrderM[‘name’].’1’;这里就是自动向数据表的name插入数据。</p>]]></content>
      
      
      <categories>
          
          <category> php框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tp5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tp5类的属性不存在</title>
      <link href="/tp5%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E4%B8%8D%E5%AD%98%E5%9C%A8/"/>
      <url>/tp5%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E4%B8%8D%E5%AD%98%E5%9C%A8/</url>
      
        <content type="html"><![CDATA[<p>tp5模型新增关联报错类的属性不存在,即使数据表中存在需要的字段，但是依然报错app\common\model\Slide-&gt;is_slide类似的问题，其实是因为在使用关联模型新增的时候主表新增操作未使用模型新增。<br><a id="more"></a><br><figure class="highlight php"><figcaption><span>错误写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//直接新增未使用模型</span></span><br><span class="line">$result = Db::name(<span class="string">'table'</span>)-&gt;allowField(<span class="keyword">true</span>)-&gt;save($info);</span><br><span class="line"><span class="comment">//然后使用模型新增</span></span><br><span class="line">$model = <span class="keyword">new</span> \app\common\model\ShopCommentM();</span><br><span class="line">$model-&gt;comment_image()-&gt;saveAll($imageData);</span><br></pre></td></tr></table></figure></p><figure class="highlight php"><figcaption><span>正确写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先使用模型新增主表，再新增关联表</span></span><br><span class="line">$model = <span class="keyword">new</span> \app\common\model\ShopCommentM();</span><br><span class="line">$model-&gt;allowField(<span class="keyword">true</span>)-&gt;save($info);</span><br><span class="line">$model-&gt;comment_image()-&gt;saveAll($imageData);</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>模型文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//主表模型</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopCommentM</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $table = <span class="string">'shop_comment'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">comment_image</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(<span class="string">'ShopCommentImageM'</span>,<span class="string">'comment_id'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关联表模型</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopCommentImageM</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $table = <span class="string">'shop_comment_image'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tp5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php关于trait的使用</title>
      <link href="/php%E5%85%B3%E4%BA%8Etrait%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/php%E5%85%B3%E4%BA%8Etrait%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>关于trait之前可以说是完全没有了解过，看了官方文档之后才得知是php5.4的新特性,用来解决在不同结构(模块)下代码复用的问题.具体可以查看<a href="http://php.net/traits" target="_blank" rel="noopener">php手册</a><br>手册的介绍相对来说还是比较清晰的，那这篇文章就是为了献给那些不喜欢看文档，喜欢直接上手使用的童鞋.</p><p>首先介绍一下我的项目结构 我在Common模块下新建了一个文件traits 命名空间为 common/traits。</p><p>现在有多个模块需要使用相同的代码，那么就在traits下新建一个控制器,写入公用的代码<br><a id="more"></a><br><figure class="highlight php"><figcaption><span>common/traits/ShopGoods.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> \<span class="title">common</span>\<span class="title">traits</span>;</span><br><span class="line"><span class="keyword">trait</span> ShopGoods&#123;</span><br><span class="line"><span class="keyword">use</span> \<span class="title">app</span>\<span class="title">common</span>\<span class="title">traits</span>\<span class="title">ShopCommon</span>;<span class="comment">//这里是引用了其他的公共方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//商品数据</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">goodsList</span><span class="params">($company_id,$hotel_id = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$post = input();</span><br><span class="line"></span><br><span class="line">$post[<span class="string">'company_id'</span>] = $company_id;</span><br><span class="line">$post[<span class="string">'hotel_id'</span>] = $hotel_id;</span><br><span class="line"></span><br><span class="line">$post[<span class="string">'my'</span>] = <span class="keyword">isset</span>($post[<span class="string">'my'</span>])??<span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">$goods = <span class="keyword">new</span> ShopGoodsM();</span><br><span class="line"></span><br><span class="line">$model = $goods-&gt;alias(<span class="string">'goods'</span>)</span><br><span class="line">-&gt;leftJoin(<span class="string">'shop_goods_category gcat'</span>,<span class="string">'goods.id=gcat.goods_id'</span>)</span><br><span class="line">-&gt;leftJoin(<span class="string">'shop_category cat'</span>,<span class="string">'gcat.category_id=cat.category_id'</span>)</span><br><span class="line">-&gt;where(<span class="string">'cat.deletetime'</span>,<span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($post[<span class="string">'my'</span>])&#123;</span><br><span class="line">$model-&gt;withSearch([<span class="string">'company_id'</span>,<span class="string">'hotel_id'</span>],$post);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$model-&gt;withSearch([<span class="string">'company_id'</span>],$post);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$model-&gt;group(<span class="string">'goods.id'</span>);</span><br><span class="line">$list = $model-&gt;field(<span class="string">"GROUP_CONCAT(DISTINCT(cat.name)) as category_name,goods.*"</span>)</span><br><span class="line">-&gt;select();</span><br><span class="line"><span class="comment">//查询sku属性</span></span><br><span class="line"><span class="keyword">foreach</span> ($list <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$list[$key][<span class="string">'sku'</span>] = $goods-&gt;skus()-&gt;where(<span class="string">'goods_id'</span>,$value[<span class="string">'id'</span>])-&gt;field(<span class="string">'sku,price,stock,score'</span>)-&gt;select();</span><br><span class="line">&#125;</span><br><span class="line">$total = $model-&gt;count();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Json([</span><br><span class="line"><span class="string">'code'</span>    =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'message'</span> =&gt; <span class="string">'success'</span>,</span><br><span class="line"><span class="string">'data'</span>  =&gt; $list,</span><br><span class="line"><span class="string">'total'</span>  =&gt; $total</span><br><span class="line">]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>那上边这块代码现在有Company和Hotel两个模块要使用:<br><figure class="highlight php"><figcaption><span>company/index.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">company</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopGoods</span></span>&#123;</span><br><span class="line"><span class="keyword">use</span> \<span class="title">common</span>\<span class="title">traits</span>\<span class="title">ShopGoods</span>;<span class="comment">//引入公共的traits文件</span></span><br><span class="line"><span class="comment">//商品数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getGoods</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;goodsList(helper::getCompanyIdInCompany());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>这样的话Company和Hotel模块下只有写这两行代码就够了。</p><p>看到这里其实很多人会有疑问，说:这不和普通的代码公用是一个类型吗？<br>不不不！他们不一样，例如很多模块下的参数是无法公用的,company下的company_id在hotel模块下是无法调用的,但引入trait方法之后，你就可以在不同的模块下做参数处理,trait方法既可以通过默认参数的形式传递也可以接收post、get等方法的传递。<br>安全方面：trait方法不可直接通过接口访问、相比用公用的common方法做访问处理省事了很多！</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js一次提交却发起多次请求</title>
      <link href="/js%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4%E5%8D%B4%E5%8F%91%E8%B5%B7%E5%A4%9A%E6%AC%A1%E8%AF%B7%E6%B1%82/"/>
      <url>/js%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4%E5%8D%B4%E5%8F%91%E8%B5%B7%E5%A4%9A%E6%AC%A1%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<p>最近做前端的工作比较多,经常会遇到一些自己不太明白的问题，非常的懵逼。<br>比如做一个简单的ajax异步提交会出现两次请求的问题，也是最近遇见比较奇怪的问题。</p><p>经过排查之后发现两次出现两次请求的原因可能是：<br><blockquote><p>1.引入了两个同样的js,比如引入了两个同样的jquery插件</p></blockquote><br><a id="more"></a><br><blockquote><p>2.页面存在form表单，点击提交按钮之后又执行了form.submit(),这个form本身就会提交一次。</p></blockquote><br><blockquote><p>3.跨域请求，这个问题就比较深入一点了，js跨域的时候本身会发送两次请求，第一次是预查请求(option)，是为了查询是否支持跨域，第二次才是真正的数据请求。解决这个问题，首先后端要有允许跨域请求的处理，前端的header要加入application/x-www-form-urlencoded, multipart/form-data 或 text/plain中的一种，就可以解决了。</p></blockquote><br><figure class="highlight php"><figcaption><span>后端跨域处理</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Access-Control-Allow-Origin: *'</span>);</span><br><span class="line">header(<span class="string">"Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept"</span>);</span><br><span class="line">header(<span class="string">'Access-Control-Allow-Methods: GET, POST, PUT'</span>);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序服务商支付</title>
      <link href="/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9C%8D%E5%8A%A1%E5%95%86%E6%94%AF%E4%BB%98/"/>
      <url>/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9C%8D%E5%8A%A1%E5%95%86%E6%94%AF%E4%BB%98/</url>
      
        <content type="html"><![CDATA[<p>建议按照接口文档进行开发,不要直接使用sdk<br>下面贴上代码为大家一一介绍文档和真实情况的差距:<br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'./common/payConfig.php'</span>;</span><br><span class="line">$key = $payConfig[<span class="string">'key'</span>];</span><br><span class="line">$orderData = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">"appid"</span>            =&gt;   $payConfig[<span class="string">'appid'</span>],</span><br><span class="line"><span class="string">'mch_id'</span>           =&gt;   $payConfig[<span class="string">'mchid'</span>],</span><br><span class="line"><span class="string">'sub_appid'</span>        =&gt;   $payConfig[<span class="string">'sub_appid'</span>],</span><br><span class="line"><span class="string">'sub_mch_id'</span>       =&gt;   $mchid,</span><br><span class="line"><span class="string">'body'</span>             =&gt;   $body,</span><br><span class="line"><span class="string">'attach'</span>           =&gt;   $attach,</span><br><span class="line"><span class="string">'out_trade_no'</span>     =&gt;   $order_id,</span><br><span class="line"><span class="string">'total_fee'</span>        =&gt;   $total_price,</span><br><span class="line"><span class="string">'spbill_create_ip'</span> =&gt;   $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line"><span class="string">'notify_url'</span>       =&gt;   <span class="string">'daichongweb.com'</span>,</span><br><span class="line"><span class="string">'trade_type'</span>       =&gt;   <span class="string">'JSAPI'</span>,</span><br><span class="line"><span class="comment">// 'openid'        =&gt;   $UnionID, 这个是不需要的</span></span><br><span class="line"><span class="string">'goods_tag'</span>        =&gt;   <span class="string">'daichong'</span>,</span><br><span class="line"><span class="string">'nonce_str'</span>        =&gt;   <span class="keyword">$this</span>-&gt;getNonceStr(),</span><br><span class="line"><span class="string">'sub_openid'</span>       =&gt;   $mini_openid</span><br><span class="line">);</span><br><span class="line">ksort($orderData);</span><br><span class="line">reset($orderData);</span><br><span class="line">$buff = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($orderData <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span>($k != <span class="string">"sign"</span> &amp;&amp; $v != <span class="string">""</span> &amp;&amp; !is_array($v))&#123;</span><br><span class="line">      $buff .= ($k . <span class="string">"="</span> . $v . <span class="string">"&amp;"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">$buff = trim($buff, <span class="string">"&amp;"</span>);</span><br><span class="line">$buff = $buff.<span class="string">'&amp;key='</span>.$key;</span><br><span class="line">$signA = strtoupper(MD5($buff));</span><br><span class="line">$orderData[<span class="string">'sign'</span>] = $signA;</span><br><span class="line"></span><br><span class="line">$xml = <span class="keyword">$this</span>-&gt;arrayToXml($orderData);</span><br><span class="line"></span><br><span class="line">$url = <span class="string">"https://api.mch.weixin.qq.com/pay/unifiedorder"</span>;</span><br><span class="line">        </span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;https_post($url,$xml);</span><br><span class="line">$payArray = (<span class="keyword">array</span>)simplexml_load_string($result, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA);</span><br></pre></td></tr></table></figure><br>在代码上的差距其实只有一个openid,但是他还是会报错appid和sub_mch_id不匹配,解决这个问题的前提小程序和公众号的主体必须一致,也就是小程序和微信公众号必须在同一个服务商上绑定。绑定方式是在服务商户里找到’服务商功能‘-&gt;’特约商户管理‘找到对应商户点击配置<br><blockquote><p>第一步：</p></blockquote><br><img src="/小程序服务商支付/img/2.png" title="小程序服务商支付 配置"><br><blockquote><p>第二步：</p></blockquote><br><img src="/小程序服务商支付/img/1.png" title="小程序服务商支付 配置"><br>添加好之后就可以测试支付了，把支付参数返回给前端，啊就完事了!</p>]]></content>
      
      
      
        <tags>
            
            <tag> 小程序支付 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谷歌浏览器Flash没有添加按键</title>
      <link href="/%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8Flash%E6%B2%A1%E6%9C%89%E6%B7%BB%E5%8A%A0%E6%8C%89%E9%94%AE/"/>
      <url>/%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8Flash%E6%B2%A1%E6%9C%89%E6%B7%BB%E5%8A%A0%E6%8C%89%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p>关于谷歌浏览器不能使用Flash的问题大家肯定遇到过，只要在<a>设置-》高级-》内容管理-》Flash里添加网站就可以了</a><br>今天我更新了一下浏览器，升级到了最新的版本，发现Flash又使用不了。按照以往的流程去添加居然发现没有居然没有添加按钮<br><a id="more"></a><br>然后就是长达1个多小时的百度，试了无数的方法都没有解决，最后静下来思考之后才有了头绪。<br>那么最终的解决方法是什么呢？<br>首先：<br><figure class="highlight plain"><figcaption><span>在浏览器输入</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrome://flags/#run-all-flash-in-allow-mode</span><br></pre></td></tr></table></figure><br>搜索：<br><figure class="highlight plain"><figcaption><span>搜索</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enable Ephemeral Flash Permissions</span><br></pre></td></tr></table></figure><br>修改状态为Disabled<br>然后下面会弹出一个框，点击一下按钮就可以了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php根据二位数据中的某个键值排序</title>
      <link href="/php%E6%A0%B9%E6%8D%AE%E4%BA%8C%E4%BD%8D%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E9%94%AE%E5%80%BC%E6%8E%92%E5%BA%8F/"/>
      <url>/php%E6%A0%B9%E6%8D%AE%E4%BA%8C%E4%BD%8D%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E9%94%AE%E5%80%BC%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>下面先为大家介绍两个php函数：<br><a>array_column()</a>:返回输入数组中某个单一列的值。<br><blockquote class="pullquote"><p>小例子：</p></blockquote><br><figure class="highlight php"><figcaption><span>array_column的用法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="keyword">array</span>(</span><br><span class="line">  <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'id'</span> =&gt; <span class="number">5698</span>,</span><br><span class="line">    <span class="string">'first_name'</span> =&gt; <span class="string">'daichong'</span>,</span><br><span class="line">    <span class="string">'last_name'</span> =&gt; <span class="string">'css'</span>,</span><br><span class="line">  ),</span><br><span class="line">  <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'id'</span> =&gt; <span class="number">4767</span>,</span><br><span class="line">    <span class="string">'first_name'</span> =&gt; <span class="string">'dc'</span>,</span><br><span class="line">    <span class="string">'last_name'</span> =&gt; <span class="string">'js'</span>,</span><br><span class="line">  ),</span><br><span class="line">  <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'id'</span> =&gt; <span class="number">3809</span>,</span><br><span class="line">    <span class="string">'first_name'</span> =&gt; <span class="string">'DC'</span>,</span><br><span class="line">    <span class="string">'last_name'</span> =&gt; <span class="string">'web'</span>,</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line">$lastNames = array_column($a,<span class="string">'first_name'</span>)</span><br></pre></td></tr></table></figure><br><a id="more"></a><br><figure class="highlight php"><figcaption><span>打印结果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">  [<span class="number">0</span>] =&gt; daichong</span><br><span class="line">  [<span class="number">1</span>] =&gt; dc</span><br><span class="line">  [<span class="number">2</span>] =&gt; DC</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><a>array_multisort()</a>:返回指定排序后的数组。<br>函数返回排序数组。您可以输入一个或多个数组。函数先对第一个数组进行排序，接着是其他数组，如果两个或多个值相同，它将对下一个数组进行排序。<br>注释：字符串键名将被保留，但是数字键名将被重新索引，从 0 开始，并以 1 递增。<br><br>注释：您可以在每个数组后设置排序顺序和排序类型参数。如果没有设置，每个数组参数会使用默认值。<br><br><blockquote class="pullquote"><p>实践：</p></blockquote><figure class="highlight php"><figcaption><span>代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$arr=<span class="keyword">array</span>(</span><br><span class="line">      <span class="number">0</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">         <span class="string">'run_date'</span>=&gt;<span class="number">3</span>,</span><br><span class="line">          <span class="string">'count'</span>=&gt;<span class="string">'5'</span></span><br><span class="line">      ),</span><br><span class="line">      <span class="number">1</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">          <span class="string">'run_date'</span>=&gt;<span class="number">2</span>,</span><br><span class="line">          <span class="string">'count'</span>=&gt;<span class="string">'10'</span></span><br><span class="line">     ),</span><br><span class="line">     <span class="number">2</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">         <span class="string">'run_date'</span>=&gt;<span class="number">1</span>,</span><br><span class="line">         <span class="string">'count'</span>=&gt;<span class="string">'10'</span></span><br><span class="line">     )</span><br><span class="line"> );</span><br><span class="line">$date = array_column($arr, <span class="string">'run_date'</span>);</span><br><span class="line">array_multisort($date,SORT_ASC,$arr);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($arr);</span><br></pre></td></tr></table></figure><blockquote class="pullquote"><p>结果：</p></blockquote><figure class="highlight php"><figcaption><span>打印结果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [run_date] =&gt; <span class="number">1</span></span><br><span class="line">            [count] =&gt; <span class="number">10</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [run_date] =&gt; <span class="number">2</span></span><br><span class="line">            [count] =&gt; <span class="number">10</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [run_date] =&gt; <span class="number">3</span></span><br><span class="line">            [count] =&gt; <span class="number">5</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>是不是根据指定的键值进行排序了呢？</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web端存储数据(cookie,storage)选择和使用</title>
      <link href="/web%E7%AB%AF%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE-cookie-storage-%E9%80%89%E6%8B%A9%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/web%E7%AB%AF%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE-cookie-storage-%E9%80%89%E6%8B%A9%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>关于前端存储的方法用很多，最为常见的是cookie和locationStorage。</p><p>其中cookie的限制比较大，比如必须需要cookie.js、浏览器对cookie的数量限制(之前的浏览器每个域名限制cookie之恶能存储50个)，数据长度的限制(大部分浏览器是4085字节左右,但实际更小)。</p><p>locationstorage能存储4-5M大小的数据，有效期未永久。</p><p>application cache 是离线缓存，存储大小也是5M左右,他与其他两种方式的不同在与浏览器缓存是对单个文件，而applocation cache是对整个应用，当整个应用都缓存下来的时候可以达到无网络连接。</p><p>今天我要写的是locationstorage的sessionStorage，他们的用法完全相同，很简单，但是真的很实用。今天使用之后我觉得这个sessionStorage真的是太方便了。<br><a id="more"></a><br><blockquote><p>测试cookie存储</p></blockquote><br>最终发现1837的长度存不进去。<br><blockquote><p>sessionStorage 的使用</p></blockquote><br><figure class="highlight js"><figcaption><span>sessionStorage</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//存储</span></span><br><span class="line">sessionStorage.setItem(<span class="string">'newList'</span>,str)</span><br><span class="line"><span class="comment">//获取</span></span><br><span class="line">sessionStorage.getItem(<span class="string">'newList'</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php循环处理万条数据如何优化？</title>
      <link href="/php%E5%BE%AA%E7%8E%AF%E5%A4%84%E7%90%86%E4%B8%87%E6%9D%A1%E6%95%B0%E6%8D%AE%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%EF%BC%9F/"/>
      <url>/php%E5%BE%AA%E7%8E%AF%E5%A4%84%E7%90%86%E4%B8%87%E6%9D%A1%E6%95%B0%E6%8D%AE%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>今天来写一篇如何优化在循环里的sql。相信大家都会遇到在foreach里循环操作数据库，上学的时候一听到循环查表这类的词，哇！感觉很高端，殊不知这样的操作对数据库的压力是无限大的。像一个三级的分类数据操作，很多人会选择循环查表，毕竟这样的写法是最方便、最简单的。前期数据量小的时候是没有很明显的问题，到了一定程度，你会发现页面加载速度越来越慢，数据库的压力越来越大。这个时候你必须要选择修改你的程序了！</p><p>但是这篇文章不是来介绍如何优化循环查询的，是介绍如何来优化循环修改表数据的。<br><a id="more"></a><br>下面介绍一下我正在做的一些业务：<br><figure class="highlight php"><figcaption><span>数组</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [did] =&gt; <span class="number">1446175</span></span><br><span class="line">            [userid] =&gt; <span class="number">449310</span></span><br><span class="line">            [danhao] =&gt; W1808100219</span><br><span class="line">            [isno] =&gt; <span class="number">2</span></span><br><span class="line">            [green_state] =&gt; R</span><br><span class="line">            [id] =&gt; <span class="number">19</span></span><br><span class="line">            [time] =&gt; <span class="number">2018</span><span class="number">-08</span><span class="number">-10</span> <span class="number">11</span>:<span class="number">06</span>:<span class="number">30</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [did] =&gt; <span class="number">1446174</span></span><br><span class="line">            [userid] =&gt; <span class="number">456791</span></span><br><span class="line">            [danhao] =&gt; W1808100218</span><br><span class="line">            [isno] =&gt; <span class="number">2</span></span><br><span class="line">            [green_state] =&gt; R</span><br><span class="line">            [id] =&gt; <span class="number">34</span></span><br><span class="line">            [time] =&gt; <span class="number">2018</span><span class="number">-08</span><span class="number">-10</span> <span class="number">11</span>:<span class="number">06</span>:<span class="number">30</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [did] =&gt; <span class="number">1446172</span></span><br><span class="line">            [userid] =&gt; <span class="number">113637</span></span><br><span class="line">            [danhao] =&gt; W1808100217</span><br><span class="line">            [isno] =&gt; <span class="number">2</span></span><br><span class="line">            [green_state] =&gt; R</span><br><span class="line">            [id] =&gt; <span class="number">38</span></span><br><span class="line">            [time] =&gt; <span class="number">2018</span><span class="number">-08</span><span class="number">-10</span> <span class="number">11</span>:<span class="number">06</span>:<span class="number">30</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">3</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [did] =&gt; <span class="number">1446171</span></span><br><span class="line">            [userid] =&gt; <span class="number">10884</span></span><br><span class="line">            [danhao] =&gt; W1808100216</span><br><span class="line">            [isno] =&gt; <span class="number">2</span></span><br><span class="line">            [green_state] =&gt; R</span><br><span class="line">            [id] =&gt; <span class="number">5</span></span><br><span class="line">            [time] =&gt; <span class="number">2018</span><span class="number">-08</span><span class="number">-10</span> <span class="number">11</span>:<span class="number">06</span>:<span class="number">30</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">4</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [did] =&gt; <span class="number">1446169</span></span><br><span class="line">            [userid] =&gt; <span class="number">79165</span></span><br><span class="line">            [danhao] =&gt; W1808100214</span><br><span class="line">            [isno] =&gt; <span class="number">2</span></span><br><span class="line">            [green_state] =&gt; R</span><br><span class="line">            [id] =&gt; <span class="number">11</span></span><br><span class="line">            [time] =&gt; <span class="number">2018</span><span class="number">-08</span><span class="number">-10</span> <span class="number">11</span>:<span class="number">06</span>:<span class="number">30</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">code snippet</span><br></pre></td></tr></table></figure></p><p>这个功能的要求是同步订单，数据就像上边展示的一样 green_state 的值是不固定的，可能是R也可能是X,这个代表的是订单的状态。<br>我现在要做的是拿这个订单状态去把他相应的字段值改成这个状态。</p><blockquote><p>原始写法:循环修改</p></blockquote><figure class="highlight php"><figcaption><span>逻辑</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>($order <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">    Db::query(<span class="string">"update order set green_state=$v['green_state'] set did=$v['did']"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的写法有多少条数据就会请求数据库多少次，无疑是最消耗性能的写法。<br><blockquote><p>优化写法：链接sql</p></blockquote><br><figure class="highlight php"><figcaption><span>逻辑代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//预定sql s</span></span><br><span class="line">$Rsql = <span class="string">''</span>;</span><br><span class="line">$RsetIds = <span class="string">''</span>;</span><br><span class="line"><span class="comment">//e</span></span><br><span class="line"><span class="comment">//取消sql s</span></span><br><span class="line">$Xsql = <span class="string">''</span>;</span><br><span class="line">$XsetIds = <span class="string">''</span>;</span><br><span class="line"><span class="comment">//e</span></span><br><span class="line"><span class="comment">//I</span></span><br><span class="line">$Isql = <span class="string">''</span>;</span><br><span class="line">$IsetIds = <span class="string">''</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//O</span></span><br><span class="line">$Osql = <span class="string">''</span>;</span><br><span class="line">$OsetIds = <span class="string">''</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//N</span></span><br><span class="line">$Nsql = <span class="string">''</span>;</span><br><span class="line">$NsetIds = <span class="string">''</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//D</span></span><br><span class="line">$Dsql = <span class="string">''</span>;</span><br><span class="line">$DsetIds = <span class="string">''</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">foreach</span> ($order_data <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$order_data[$k][<span class="string">'time'</span>] = date(<span class="string">'Y-m-d H:i:s'</span>);</span><br><span class="line">$data = json_decode(<span class="keyword">$this</span>-&gt;order_info($pms[<span class="string">'url'</span>],$pms[<span class="string">'jiudian'</span>],$pms[<span class="string">'hotelgroupId'</span>],$v[<span class="string">'danhao'</span>]),<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">if</span>($data[<span class="string">'resultCode'</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">        $order_data[$k][<span class="string">'green_state'</span>] = $data[<span class="string">'guest'</span>][<span class="string">'sta'</span>];</span><br><span class="line">&#125;</span><br><span class="line">       <span class="comment">//组合sql R类型 预定</span></span><br><span class="line"><span class="keyword">if</span>($order_data[$k][<span class="string">'green_state'</span>]==<span class="string">'R'</span>)&#123;</span><br><span class="line">$Rsql = <span class="string">"set green_state='R'"</span>;</span><br><span class="line">$RsetIds .= $v[<span class="string">'did'</span>].<span class="string">','</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//组合sql X类型 取消</span></span><br><span class="line"><span class="keyword">if</span>($order_data[$k][<span class="string">'green_state'</span>]==<span class="string">'X'</span>)&#123;</span><br><span class="line">$Xsql = <span class="string">"set green_state='X'"</span>;</span><br><span class="line">$XsetIds .= $v[<span class="string">'did'</span>].<span class="string">','</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//组合sql I类型 在住</span></span><br><span class="line"><span class="keyword">if</span>($order_data[$k][<span class="string">'green_state'</span>]==<span class="string">'I'</span>)&#123;</span><br><span class="line">$Isql = <span class="string">"set green_state='I'"</span>;</span><br><span class="line">$IsetIds .= $v[<span class="string">'did'</span>].<span class="string">','</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//组合sql O类型 退房</span></span><br><span class="line"><span class="keyword">if</span>($order_data[$k][<span class="string">'green_state'</span>]==<span class="string">'O'</span>)&#123;</span><br><span class="line">$Osql = <span class="string">"set green_state='O'"</span>;</span><br><span class="line">$OsetIds .= $v[<span class="string">'did'</span>].<span class="string">','</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//组合sql N类型 应到未到</span></span><br><span class="line"><span class="keyword">if</span>($order_data[$k][<span class="string">'green_state'</span>]==<span class="string">'N'</span>)&#123;</span><br><span class="line">$Nsql = <span class="string">"set green_state='N'"</span>;</span><br><span class="line">$NsetIds .= $v[<span class="string">'did'</span>].<span class="string">','</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//组合sql D类型 删除</span></span><br><span class="line"><span class="keyword">if</span>($order_data[$k][<span class="string">'green_state'</span>]==<span class="string">'D'</span>)&#123;</span><br><span class="line">$Dsql = <span class="string">"set green_state='D'"</span>;</span><br><span class="line">$DsetIds .= $v[<span class="string">'did'</span>].<span class="string">','</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$RsetIds = trim($RsetIds,<span class="string">','</span>);</span><br><span class="line">$XsetIds = trim($XsetIds,<span class="string">','</span>);</span><br><span class="line">$IsetIds = trim($IsetIds,<span class="string">','</span>);</span><br><span class="line">$OsetIds = trim($OsetIds,<span class="string">','</span>);</span><br><span class="line">$NsetIds = trim($NsetIds,<span class="string">','</span>);</span><br><span class="line">$DsetIds = trim($DsetIds,<span class="string">','</span>);</span><br><span class="line">$sql = <span class="string">"update order $Rsql where did in($RsetIds)"</span>;</span><br></pre></td></tr></table></figure><br>以上就是我根据需求调整的代码，通过不同订单类型组成不同的sql，最终实现6条sql完成6个类型的修改，如果是10w条数据，那么请求数据库的次数是6次，相比之前的次数降低了9千多次！达到了优化的效果，当然这个代码还有优化的空间。<br>以上代码只是为大家提供思路，具体业务逻辑还要根据实际情况而定！</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php做一个简单的日志功能</title>
      <link href="/php%E5%81%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%97%A5%E5%BF%97%E5%8A%9F%E8%83%BD/"/>
      <url>/php%E5%81%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%97%A5%E5%BF%97%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>今天一直在和别的公司对接接口，之前的对接都没有做来往日志，这样的话功能出了问题要针对性的找到问题的原因比较麻烦，逼不得已只能做个日志记录一下。而且程序还没有使用任何框架，又不想研究别人的代码，没办法只能自己简单的做一个写入日志的功能。<br><a id="more"></a><br><blockquote><p>实现逻辑:</p></blockquote><br><figure class="highlight php"><figcaption><span>写入文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 写入日志</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> must $path 写入日志的地址(./log/)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> must $data 写入内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> optional $fileName 文件名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Number 1 成功 0 失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write_log</span><span class="params">($path,$data,$fileName=<span class="string">'error'</span>)</span></span>&#123;</span><br><span class="line">        $file_path = $path.date(<span class="string">'Y-m-d'</span>);</span><br><span class="line"><span class="comment">//文件夹不存在创建文件夹</span></span><br><span class="line">        <span class="keyword">if</span>(!file_exists($file_path))&#123;</span><br><span class="line">            mkdir($file_path,<span class="number">0777</span>,<span class="keyword">true</span>);  </span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//文件完整路径</span></span><br><span class="line">        $file = $path.date(<span class="string">'Y-m-d'</span>).<span class="string">"/"</span>.$fileName.<span class="string">".txt"</span>;</span><br><span class="line"><span class="comment">//打开文件 "a+" 读写方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建</span></span><br><span class="line">        $handle = fopen($file,<span class="string">"a+"</span>);</span><br><span class="line"><span class="comment">//写入文件 </span></span><br><span class="line">        $str = fwrite($handle,date(<span class="string">'Y-m-d H:i:s'</span>).<span class="string">':'</span>.json_encode($data).<span class="string">"\n"</span>);</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line">        fclose($handle);</span><br><span class="line">        <span class="keyword">if</span>($str)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br><blockquote><p>调用方法:</p></blockquote><br><figure class="highlight php"><figcaption><span>调用</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> Db::write_log(<span class="string">'./log/'</span>,<span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>),<span class="string">'greenCloudReturnMsg'</span>);</span><br></pre></td></tr></table></figure><br><blockquote><p>效果：</p></blockquote><br><img src="/php做一个简单的日志功能/../img/log/1_log.png" title="php实现写入日志"><br><img src="/php做一个简单的日志功能/../img/log/2_log.png" title="php实现写入日志"><br><img src="/php做一个简单的日志功能/../img/log/3_log.png" title="php实现写入日志"></p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql更新sql优化</title>
      <link href="/mysql%E6%9B%B4%E6%96%B0sql%E4%BC%98%E5%8C%96/"/>
      <url>/mysql%E6%9B%B4%E6%96%B0sql%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>mysql on duplicate key update 对于不是很常用的人来说是比较陌生的。那么他到底是用来干什么的呢？下面就介绍一下：</p><p>比如在我们做一个点击量的功能，程序的逻辑是这样的：<br>在用户点击的时候我们首先要判断数据表中已经存在了这个人的数据，如果存在日志表对应的用户点击次数加1，如果不存在新增一条数据。</p><p>那么按照正常的编程需要有两条sql</p><p>先查询数据表中是否有，有了执行修改操作，没有执行添加操作。一条查询一条修改或添加。</p><p>那么有了这个on duplicate key update 之后就可以把这两个sql简化为一条，减少了数据的查询次数、避免了数据重复而且少打一些代码，可谓是一举三得！<br><a id="more"></a><br><figure class="highlight plain"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into t_my (id,click) VALUES (2,1) on DUPLICATE KEY UPDATE click=click+1;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发获取unionID</title>
      <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E8%8E%B7%E5%8F%96unionID/"/>
      <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E8%8E%B7%E5%8F%96unionID/</url>
      
        <content type="html"><![CDATA[<p>这几天在做一个微信小程序，在微信公众平台已经完成的配置，以及接口的开发。最后却发现小程序的openid和微信公众号的不一致，再看了微信文档之后发现，小程序和微信公号的openid都是独立的。只有一个UnionID是通用的，到这里就可以通过微信的接口getuserinfo去获取了。但是有很多人是获取不到的，下面就介绍一下有什么情况是获取不到的：<br><blockquote><p>第一种情况：微信请求用户授权，用户未同意</p></blockquote><br><blockquote><p>第二种情况：用户没有关注过小程序绑定的公众号、也没有登录过</p></blockquote><br><blockquote><p>第三种：在微信公众平台未绑定开发者</p></blockquote><br>如果这三种情况都没有，是可以获取到unionId的。<br><a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sublime配置自动上传文件</title>
      <link href="/sublime%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
      <url>/sublime%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>最近一直在修改公司老系统上的bug,因为老系统上没有安装git以及其他的版本控制软件，所以只能用ftp上传。</p><p>这个过程是极为痛苦的，要想修改一个文件必须先下载，再修改，再上传。每次点来点去终于把我搞烦了，今天下定决心一定要搞一个自动上传。</p><p>之后就是在百度不断的找资料，在融合了多篇资料的精华后终于搭建成功！</p><p>一次次的测试后，哈哈哈哈！！！！！！完全没问题！！！！！！！</p><p>下面为大家奉献实现步骤：<br><a id="more"></a><br><blockquote class="pullquote [class]"><p>第一步：打开sublime 安住Ctrl+Shift+p</p></blockquote><br><img src="/sublime配置自动上传文件/img/2.png" title="sublime配置sftp自动上传 sublime命令"><br><blockquote class="pullquote [class]"><p>第二步：输入sftp，回车。注意要选择名字为sftp的，这里因为我安装过了所以搜不到！</p></blockquote><br><img src="/sublime配置自动上传文件/img/4.png" title="sublime配置sftp自动上传 sublime命令"><br>等待安装完成后进行下一步！<br><blockquote class="pullquote [class]"><p>第三步：配置插件参数</p></blockquote><br><img src="/sublime配置自动上传文件/img/3.png" title="sublime配置sftp自动上传 配置参数"><br><blockquote class="pullquote [class]"><p>第四步：测试</p></blockquote><br><img src="/sublime配置自动上传文件/img/1.png" title="sublime配置sftp自动上传 测试"><br>到这里自动上传的功能就已经完成了，如果有遇到问题请在下面留言或发邮件，我会尽力帮你解答！</p>]]></content>
      
      
      
        <tags>
            
            <tag> tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号支付回调中发送模板消息的问题以及如何实现发送模板消息</title>
      <link href="/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%94%AF%E4%BB%98%E5%9B%9E%E8%B0%83%E4%B8%AD%E5%8F%91%E9%80%81%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF%E7%9A%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%8F%91%E9%80%81%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF/"/>
      <url>/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%94%AF%E4%BB%98%E5%9B%9E%E8%B0%83%E4%B8%AD%E5%8F%91%E9%80%81%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF%E7%9A%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%8F%91%E9%80%81%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>最近在做一个微信上的会员系统，涉及到微信支付回调中发送模板消息的问题。从来不喜欢看微信文档的我遇到了非常多的坑，最终还是填平了，希望大家再看了我这篇文章之后能少走些弯路吧！</p><p>下面为大家贴出代码：<br><figure class="highlight php"><figcaption><span>支付回调</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//调用模板消息</span></span><br><span class="line">user_pay(<span class="number">100</span>,$userid,$openid,<span class="string">'pay_success'</span>,$integral.<span class="string">'元'</span>,$balance.<span class="string">'元'</span>);</span><br><span class="line"><span class="comment">//向微信发送支付成功</span></span><br><span class="line">$textTpl=<span class="string">"&lt;xml&gt;</span></span><br><span class="line"><span class="string">&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;</span></span><br><span class="line"><span class="string">&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;</span></span><br><span class="line"><span class="string">&lt;/xml&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $textTpl;</span><br></pre></td></tr></table></figure><br><a id="more"></a><br><figure class="highlight php"><figcaption><span>模板消息</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取access_token</span></span><br><span class="line">$access_token=access_tokens($appid,$appsecret,$mulu);</span><br><span class="line"><span class="comment">//点击模板的跳转地址</span></span><br><span class="line">$url=$a[<span class="string">'titleurl'</span>].<span class="string">"?action=my"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取通知模板Id</span></span><br><span class="line">$mb = $mbID;</span><br><span class="line"><span class="comment">//充值成功通知</span></span><br><span class="line"><span class="keyword">if</span>($type==<span class="string">'pay_success'</span>)&#123;</span><br><span class="line">$name = <span class="string">'充值成功！'</span>;</span><br><span class="line">$time = date(<span class="string">"Y-m-d H:i:s"</span>);</span><br><span class="line">$remark = <span class="string">"恭喜您充值成功了！您可以前往个人中心查看账户余额以及升级方式,感谢您的支持！"</span>;</span><br><span class="line"><span class="comment">//模板消息</span></span><br><span class="line">$template=<span class="keyword">array</span>(</span><br><span class="line"><span class="string">'touser'</span>=&gt;$openid,</span><br><span class="line"><span class="string">'template_id'</span>=&gt;$mb,</span><br><span class="line"><span class="string">'url'</span>=&gt;$url,</span><br><span class="line"><span class="string">'topcolor'</span>=&gt;<span class="string">"#7B68EE"</span>,</span><br><span class="line"><span class="string">'data'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line"><span class="string">'first'</span>=&gt;<span class="keyword">array</span>(<span class="string">'value'</span>=&gt;urlencode($name),<span class="string">'color'</span>=&gt;<span class="string">"#ff0000"</span>),</span><br><span class="line"><span class="string">'keyword1'</span>=&gt;<span class="keyword">array</span>(<span class="string">'value'</span>=&gt;urlencode($userid),<span class="string">'color'</span>=&gt;<span class="string">'#0000FE'</span>),</span><br><span class="line"><span class="string">'keyword2'</span>=&gt;<span class="keyword">array</span>(<span class="string">'value'</span>=&gt;urlencode($price),<span class="string">'color'</span>=&gt;<span class="string">'#000000'</span>),</span><br><span class="line"><span class="string">'keyword3'</span>=&gt;<span class="keyword">array</span>(<span class="string">'value'</span>=&gt;urlencode($balance),<span class="string">'color'</span>=&gt;<span class="string">'#000000'</span>),</span><br><span class="line"><span class="string">'keyword4'</span>=&gt;<span class="keyword">array</span>(<span class="string">'value'</span>=&gt;urlencode($time),<span class="string">'color'</span>=&gt;<span class="string">'#000000'</span>),</span><br><span class="line"><span class="string">'remark'</span>=&gt;<span class="keyword">array</span>(<span class="string">'value'</span>=&gt;urlencode($remark),<span class="string">'color'</span>=&gt;<span class="string">'#008000'</span>),</span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line">$json_template=json_encode($template);</span><br><span class="line">$url=<span class="string">"https://api.weixin.qq.com/cgi-bin/message/template/send?access_token="</span>.$access_token;</span><br><span class="line">$res=http_request($url,urldecode($json_template));</span><br><span class="line">$res = json_decode($res,<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">if</span>($res[<span class="string">'errcode'</span>]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>微信发送模板消息成功之后会回调你配置的消息地址<br><blockquote><p>注意在你配置的消息回调地址的方法中找到微信所回调的代码不能用exit或die来结束代码，支付回调将无法输出支付成功！</p></blockquote></p>]]></content>
      
      
      
        <tags>
            
            <tag> 微信支付 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php实现数据导出excel表格</title>
      <link href="/php%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BAexcel%E8%A1%A8%E6%A0%BC/"/>
      <url>/php%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BAexcel%E8%A1%A8%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<p>今天的博客内容是php实现导出excel,大家都知道实现php导出excel有很多种方法，最方便的是phpexcel这个插件，但是在处理海量数据的时候就会出现非常非常缓慢的情况。而且用这个插件要求的php版本是5.6以上，很不巧，我的php版本是5.4。用不了这个插件，只能另寻他法了！</p><p>刚开始的使用是使用前端的table导出,感觉不是很好用，代码量太大，不方便。</p><p>后来又尝试了几种方法，最后选择了一种最简单，最有效，代码量最少的方法！<br><a id="more"></a><br><figure class="highlight php"><figcaption><span>代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'./db.php'</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">index</span> <span class="keyword">extends</span> <span class="title">Db</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$data = Db::get_all(<span class="string">"select userid from order"</span>);</span><br><span class="line">header(<span class="string">"Content-type:application/vnd.ms-excel"</span>);<span class="comment">//设置导出格式</span></span><br><span class="line">        header(<span class="string">"Content-Disposition:filename=导出.xls"</span>);<span class="comment">//设置导出文件名称</span></span><br><span class="line">  header(<span class="string">"Cache-Control: max-age=0"</span>);<span class="comment">//数据不经过缓存，每次查询数据库</span></span><br><span class="line">$strexport=<span class="string">"Userid\r"</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($data <span class="keyword">as</span> $row)&#123;</span><br><span class="line">            $strexport.= $row[<span class="string">'userid'</span>].<span class="string">"\r"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">$strexport = iconv(<span class="string">'UTF-8'</span>,<span class="string">"GB2312//IGNORE"</span>,$strexport);</span><br><span class="line">        <span class="keyword">exit</span>($strexport);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> index;</span><br></pre></td></tr></table></figure></p><p>这段代码只是实现最简单的导出，具体的优化就需要大家去研究了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php转义html实体</title>
      <link href="/php%E8%BD%AC%E4%B9%89html%E5%AE%9E%E4%BD%93/"/>
      <url>/php%E8%BD%AC%E4%B9%89html%E5%AE%9E%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<p>经常使用各种编辑器的小伙伴们都会遇到，在复制一些带有样式文字到编辑器然后保存到数据库里之后一些特殊的符号被转义成了html实体。</p><p>例如：大于号和小于号，通过编辑器和框架的过滤和处理存到数据库的是&amp;gt和&lt;</p><p>然后在前端把数据输出到页面上之后还是数据库里的原文，并没有转义成正常的符号。</p><p>那么就需要用到这个php函数了：</p><figure class="highlight php"><figcaption><span>转义函数</span><a href="http://php.net/manual/zh/function.htmlspecialchars-decode.php" target="_blank" rel="noopener">官方文档</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlspecialchars_decode()</span><br></pre></td></tr></table></figure><p>在我使用之后发现他不仅能解决这些符号的问题，其他html标签的问题在转义后也能正常使用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信支付异步回调验证订单真实性</title>
      <link href="/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83%E9%AA%8C%E8%AF%81%E8%AE%A2%E5%8D%95%E7%9C%9F%E5%AE%9E%E6%80%A7/"/>
      <url>/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83%E9%AA%8C%E8%AF%81%E8%AE%A2%E5%8D%95%E7%9C%9F%E5%AE%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>最近在做一个充值功能，因为是微网站并且是在微信公众号内，所以选择了微信公众号支付。做过微信支付的小伙伴都知道微信支付的模式分为三种：</p><p>第一种：普通商户</p><p>第二种：服务商</p><p>第三种：银行服务</p><p>三种支付模式有很明显的不同，第一种就是最常见的普通微信公众号支付，支付需要微信公众号的appid appkey mc_id mc_key 四个支付参数。而这四个参数都是属于单独的微信支<br>付参数。<br><a id="more"></a><br>第二种是服务商模式，首先要有一个服务商的支付平台，然后通过这个服务商支付平台申请子商户平台。那么支付的时候同样的四个支付参数就要从服务商和子商户获得了，并不是<br>单独的一个公众号里的参数。具体大家可以看微信的文档。</p><p>第三种暂时没做过。</p><p>周所众知微信支付异步回调验证订单真实性是非常重要的，如果不做验证，在有人知道你的微信支付回调地址后就能直接请求你的支付回调地址，模仿微信支付回调达到不支付<br>金额就能充值、购买商品等操作！所以验证订单的真实性是每个程序员必须要做的！</p><p>那么具体的验证步骤有哪些呢？</p><p>第一步：接收微信返回的参数。<br>第二步：处理参数。<br>第三步：使用ksort排序参数，ASCII码从小到大排序.<br>第四步：在参数后面连接上(商户秘钥设置路径：微信商户平台(pay.weixin.qq.com)–&gt;账户设置–&gt;API安全–&gt;密钥设置)。<br>第五步：加密生成签名。<br>第六步：对比加密后的签名。</p><p>具体的步骤可以在微信支付开发文档中查看详细的签名生成和对比的步骤！</p><p>下面就是我根据微信文档写的代码：<br><figure class="highlight php"><figcaption><span>[生成签名及对比] []</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$postobj = $GLOBALS[<span class="string">'HTTP_RAW_POST_DATA'</span>];<span class="comment">//第一种方式</span></span><br><span class="line">$postobj = file_get_contents(<span class="string">"php://input"</span>);<span class="comment">//第二种方式</span></span><br><span class="line">$postObj = (<span class="keyword">array</span>)simplexml_load_string($postStr, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA);<span class="comment">//转化xml数据为数组</span></span><br><span class="line">    $result_code = $postObj[<span class="string">'result_code'</span>];<span class="comment">//微信返回的参数</span></span><br><span class="line"><span class="keyword">if</span>($result_code==<span class="string">"SUCCESS"</span>)&#123;<span class="comment">//参数值为SUCCESS时说明支付成功</span></span><br><span class="line">           $total_fee = $postObj[<span class="string">'total_fee'</span>];</span><br><span class="line">        <span class="comment">//签名算法 Start</span></span><br><span class="line">           ksort($postObj);<span class="comment">//排序参数</span></span><br><span class="line">           $buff = <span class="string">""</span>;</span><br><span class="line">           <span class="keyword">foreach</span> ($postObj <span class="keyword">as</span> $k =&gt; $v)<span class="comment">//处理参数按照key=&gt;value的形式组合成字符串</span></span><br><span class="line">           &#123;</span><br><span class="line">              <span class="keyword">if</span>($k != <span class="string">"sign"</span> &amp;&amp; $v != <span class="string">""</span> &amp;&amp; !is_array($v))&#123;<span class="comment">//去掉参数中的sign（微信返回的签名）</span></span><br><span class="line">                 $buff .= $k . <span class="string">"="</span> . $v . <span class="string">"&amp;"</span>;</span><br><span class="line">              &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           $buff = trim($buff, <span class="string">"&amp;"</span>);<span class="comment">//去除末尾的&amp;的符号</span></span><br><span class="line">           $buff = $buff.<span class="string">'&amp;key=秘钥'</span>;<span class="comment">//连接上商户支付秘钥</span></span><br><span class="line">           $signA = strtoupper(MD5($buff));<span class="comment">//MD5加密并转为小写</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>($postobj[<span class="string">'sign'</span>]==$signA &amp;&amp; $total_fee==真实的支付金额)&#123;</span><br><span class="line"><span class="comment">//订单真实</span></span><br><span class="line"><span class="comment">//逻辑处理</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//签名错误或支付错误</span></span><br><span class="line">       <span class="keyword">echo</span> <span class="string">'&lt;xml&gt;</span></span><br><span class="line"><span class="string">  &lt;return_code&gt;&lt;![CDATA[FAIL]]&gt;&lt;/return_code&gt;//success成功 fail失败</span></span><br><span class="line"><span class="string"> &lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;</span></span><br><span class="line"><span class="string">    &lt;/xml&gt;'</span>;<span class="comment">//返回微信消息否则微信会一直请求你的异步回调地址</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>注意：以上是针对服务商支付的签名对比方法，普通商户的方法基本上和这个是一致的（普通商户可能不需要去除sign）。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 微信支付 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php 单例模式连接数据库PDO</title>
      <link href="/php%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93PDO/"/>
      <url>/php%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93PDO/</url>
      
        <content type="html"><![CDATA[<p>本篇介绍一下php的单例模式以及PDO连接数据库的方法。</p><p>说到’单例模式‘php基础比较扎实的童鞋肯定不陌生，但像本人这样的程序猿基础不是很好的可能只是有些印象而已。</p><p>那么’单例模式‘到底是什么呢？</p><p>他其实是php框架底层比较常用的一种设计模式，例如’工厂模式‘、’注册树模式‘、’策略模式‘以及’观察者模式‘等等，都是php各大框架底层架构的核心所在！</p><p>所谓的’单例模式‘说白了其实就是’三私有，一公有‘。</p><p>’三私有‘：一个私有变量作为实例化对象存储，两个私有方法’<strong>clone‘防止克隆对象以及’</strong>construct‘。</p><p>’一公有‘：一个共有的方法用来检测和实例化类。<br><a id="more"></a><br>下面是代码：<br><figure class="highlight php"><figcaption><span>[单例类]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"> <span class="comment">//单例</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Uni</span></span>&#123;</span><br><span class="line">    <span class="comment">//创建静态私有的变量保存该类对象</span></span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">static</span> $instance;</span><br><span class="line">     <span class="comment">//防止直接创建对象</span></span><br><span class="line">     <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">     &#125;</span><br><span class="line">         <span class="comment">//防止克隆对象</span></span><br><span class="line">     <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">         <span class="comment">//判断$instance是否是Uni的对象</span></span><br><span class="line">         <span class="comment">//没有则创建</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">self</span>::$instance) &#123;</span><br><span class="line">            <span class="comment">//实例化本类对象 传入参数,实例化类会执行构造函数</span></span><br><span class="line">            <span class="keyword">self</span>::$instance = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=127.0.0.1;dbname=test'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::$instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询多条数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_all</span><span class="params">($sql,$type=<span class="number">1</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>($type==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//缓冲查询</span></span><br><span class="line">                $data = <span class="keyword">self</span>::getInstance()-&gt;query($sql)-&gt;fetchAll(PDO::FETCH_ASSOC);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//非缓冲查询</span></span><br><span class="line">                $uresult = <span class="keyword">self</span>::getInstance()-&gt;query($sql);</span><br><span class="line">                <span class="keyword">if</span> ($uresult) &#123;</span><br><span class="line">                   <span class="keyword">while</span> ($data[] = $uresult-&gt;fetch(PDO::FETCH_ASSOC)) &#123;&#125; </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $data;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'查询错误'</span>.$e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询单条数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_one</span><span class="params">($sql)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            $data = <span class="keyword">self</span>::getInstance()-&gt;query($sql)-&gt;fetch(PDO::FETCH_ASSOC);</span><br><span class="line">            <span class="keyword">return</span> $data;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'查询错误'</span>.$e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询单个字段</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_field</span><span class="params">($sql,$field)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            $data = <span class="keyword">self</span>::getInstance()-&gt;query($sql)-&gt;fetch(PDO::FETCH_ASSOC);</span><br><span class="line">            <span class="keyword">return</span> $data[$field];</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'查询错误'</span>.$e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>看到这里有的童鞋可能还会有些疑问：”这些代码到底是能起到什么作用呢？“，下面就为大家演示一下这个单例类到底是干什么用的。<br><figure class="highlight php"><figcaption><span>[演示代码]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//判断$instance是否是Uni的对象</span></span><br><span class="line">        <span class="comment">//没有则创建</span></span><br><span class="line">       <span class="keyword">if</span> (!<span class="keyword">self</span>::$instance) &#123; <span class="comment">// 这里在往上看到有的人是用 instanceof self 来判断的，大同小异。 </span></span><br><span class="line">           <span class="keyword">echo</span> <span class="number">1</span>;</span><br><span class="line">           <span class="comment">//实例化本类对象 传入参数,实例化类会执行构造函数</span></span><br><span class="line">           <span class="keyword">self</span>::$instance = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=127.0.0.1;dbname=test'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">self</span>::$instance;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>我们再连接数据库这里输出一个 1，然后调用一下这个方法：</p><figure class="highlight plain"><figcaption><span>[调用方法]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Uni::getInstance();</span><br><span class="line">//1</span><br></pre></td></tr></table></figure><p>我们会发现页面上输出了一个 ’1‘，这是没问题的。</p><p>接下来我们写一个循环：</p><figure class="highlight php"><figcaption><span>[循环调用]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt;<span class="number">10</span>; $i++) &#123; </span><br><span class="line">   Uni::getInstance(); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1</span></span><br></pre></td></tr></table></figure><p>到这我们会发现页面上输出的还是一个 ’1‘，说明我们多次调用这个类，但只连接了一次数据库。如果没有这个单例类，我们可能每次的查询都去连接数据库，过多的连接会导致数据库崩溃。</p><p>所以这个单例模式还是很重要的。</p><p>大家学到了吗？</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 删除表中重复的数据</title>
      <link href="/mysql%E5%88%A0%E9%99%A4%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE/"/>
      <url>/mysql%E5%88%A0%E9%99%A4%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>sql删除数据库重复的数据</p><p>今天在工作中遇到了一个注册绑定微信UID的问题。按正常逻辑来说，一个手机号只能绑定一个UId，但问题总是会只有你想不到没有你做不到，有个客户居然用一个手机号绑定了几百个手机号，具体是为了干什么就不说了。有一个人能想到这样的方法，就会有第二个人能想到，之后就不用说了越来越多。仅仅几天数据库里的数据已经几万条了，慢慢的我意识到了这样下去肯定是不行的，必须想办法解决。刚开始是手动删除重复的数据，但是太多了，手动删简直是没法弄，不删还不行，给字段加唯一索引必须要把重复的数据删掉.<br><a id="more"></a><br><figure class="highlight plain"><figcaption><span>[sql]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">delete from [table_name] where [primary key] in (select [primary key] from (select [primary key]</span><br><span class="line">FROM</span><br><span class="line">   [table_name]</span><br><span class="line">WHERE</span><br><span class="line">    [重复的字段名] IN (</span><br><span class="line">        SELECT</span><br><span class="line">            [primary key]</span><br><span class="line">        FROM</span><br><span class="line">            [table_name]</span><br><span class="line">        GROUP BY</span><br><span class="line">            [重复的字段名]</span><br><span class="line">        HAVING</span><br><span class="line">            count([重复的字段名]) &gt; 1</span><br><span class="line">    )</span><br><span class="line">AND [primary key] NOT IN (</span><br><span class="line">    SELECT</span><br><span class="line">        min([primary key])</span><br><span class="line">    FROM</span><br><span class="line">        [table_name]</span><br><span class="line">    GROUP BY</span><br><span class="line">        [重复的字段名]</span><br><span class="line">    HAVING</span><br><span class="line">        count([重复的字段名]) &gt; 1</span><br><span class="line">))a)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>这段sql不仅解决了我的燃眉之急，并且还帮我保留了重复数据中的一条最老的数据！</p><p>虽然sql写的很完美但是也要经过实践才能是不是正确的！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM [table_name] group by [重复的字段名] HAVING count(*)&gt;1</span><br></pre></td></tr></table></figure><br>查询条数为0，sql正确无误，漂亮！</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php将指定文字替换为相同数量的*号</title>
      <link href="/php%E5%B0%86%E6%8C%87%E5%AE%9A%E6%96%87%E5%AD%97%E6%9B%BF%E6%8D%A2%E4%B8%BA%E7%9B%B8%E5%90%8C%E6%95%B0%E9%87%8F%E7%9A%84-%E5%8F%B7/"/>
      <url>/php%E5%B0%86%E6%8C%87%E5%AE%9A%E6%96%87%E5%AD%97%E6%9B%BF%E6%8D%A2%E4%B8%BA%E7%9B%B8%E5%90%8C%E6%95%B0%E9%87%8F%E7%9A%84-%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p>替换文字为星号的功能经常会遇到，比如关键词过滤，聊天内容过滤等，话不多说直接上代码！</p><figure class="highlight php"><figcaption><span>[实现代码]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$text = <span class="string">"苏菲的世界安防科技按时付款链接萨达哈垃圾卡刷卡费SAP发生破房间爱上；靠谱积分卡普斯安徽交付恐怕是电话费破ID卡手IP卡"</span>;</span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">next_year</span><span class="params">($matches)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  $len = mb_strlen($matches[<span class="number">0</span>],<span class="string">'UTF8'</span>);</span><br><span class="line">  $res = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;=$len;$i++)&#123;</span><br><span class="line">  $res.=<span class="string">'*'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'链接'</span>,<span class="string">'卡'</span>);</span><br><span class="line">$preg_str = implode(<span class="string">'|'</span>,$arr);</span><br><span class="line"><span class="keyword">echo</span> preg_replace_callback(<span class="string">"/($preg_str)/"</span>,<span class="string">"next_year"</span>,$text);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php 数组分组 二维数组中，将某个键值相同的合并到一个数组中</title>
      <link href="/php%E6%95%B0%E7%BB%84%E5%88%86%E7%BB%84-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%EF%BC%8C%E5%B0%86%E6%9F%90%E4%B8%AA%E9%94%AE%E5%80%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E5%90%88%E5%B9%B6%E5%88%B0%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD/"/>
      <url>/php%E6%95%B0%E7%BB%84%E5%88%86%E7%BB%84-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%EF%BC%8C%E5%B0%86%E6%9F%90%E4%B8%AA%E9%94%AE%E5%80%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E5%90%88%E5%B9%B6%E5%88%B0%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><figcaption><span>原数据</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$arr    =   <span class="keyword">array</span></span><br><span class="line">(</span><br><span class="line">    <span class="number">0</span> =&gt; <span class="keyword">array</span></span><br><span class="line">    (</span><br><span class="line">        <span class="string">'initial'</span> =&gt; <span class="string">'A'</span>,</span><br><span class="line">        <span class="string">'typename'</span> =&gt; <span class="string">'奥迪'</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="number">1</span> =&gt; <span class="keyword">array</span></span><br><span class="line">    (</span><br><span class="line">        <span class="string">'initial'</span> =&gt; <span class="string">'F'</span>,</span><br><span class="line">        <span class="string">'typename'</span> =&gt;<span class="string">'F1'</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="number">2</span> =&gt; <span class="keyword">array</span></span><br><span class="line">    (</span><br><span class="line">        <span class="string">'initial'</span> =&gt; <span class="string">'F'</span>,</span><br><span class="line">        <span class="string">'typename'</span> =&gt; <span class="string">'F2'</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight php"><figcaption><span>[合并代码]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$result =  <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">    $result[$v[<span class="string">'initial'</span>]][] = $v;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>[分组后的数组]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [A] =&gt; <span class="keyword">Array</span></span><br><span class="line">    (</span><br><span class="line">        [<span class="number">0</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [initial] =&gt; A</span><br><span class="line">            [typename] =&gt; 奥迪</span><br><span class="line">         )</span><br><span class="line"></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [F] =&gt; <span class="keyword">Array</span></span><br><span class="line">    (</span><br><span class="line">        [<span class="number">0</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [initial] =&gt; F</span><br><span class="line">            [typename] =&gt; F1</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        [<span class="number">1</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [initial] =&gt; F</span><br><span class="line">            [typename] =&gt; F2</span><br><span class="line">         )</span><br><span class="line"></span><br><span class="line">       )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux重装系统后ssh连接认证的问题</title>
      <link href="/Linux%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%90%8Essh%E8%BF%9E%E6%8E%A5%E8%AE%A4%E8%AF%81%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/Linux%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%90%8Essh%E8%BF%9E%E6%8E%A5%E8%AE%A4%E8%AF%81%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><figcaption><span>[命令行报错提示]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line"></span><br><span class="line">@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span><br><span class="line"></span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line"></span><br><span class="line">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span><br><span class="line"></span><br><span class="line">Someone could be eavesdropping on you right now (man-in-the-middle attack)!</span><br><span class="line"></span><br><span class="line">It is also possible that a host key has just been changed.</span><br><span class="line"></span><br><span class="line">The fingerprint for the ECDSA key sent by the remote host is</span><br><span class="line"></span><br><span class="line">SHA256:Qv4XPuXFuO1G8s0teCXRANvVnZy1jjIFKkp8yfJgLeA.</span><br><span class="line"></span><br><span class="line">Please contact your system administrator.</span><br><span class="line"></span><br><span class="line">Add correct host key in /c/Users/Administrator/.ssh/known_hosts to get rid of this message.</span><br><span class="line"></span><br><span class="line">Offending ECDSA key in /c/Users/Administrator/.ssh/known_hosts:3</span><br><span class="line"></span><br><span class="line">ECDSA host key for 58.87.72.33 has changed and you have requested strict checking.</span><br><span class="line"></span><br><span class="line">Host key verification failed.</span><br></pre></td></tr></table></figure><p>对于一个小白来说，这个是完全看不懂的，下面就告诉大家如何解决这个问题。</p><p>首先用ssh第一次连接sever,sever会生成一个公钥和一个私钥，私钥存在连接方的本地，系统重装后sever会重新生成一个公钥，然后连接方的私钥已经和sever的公钥不匹配，导致报错无法登录。</p><p>解决方法：</p><p>ssh-keygen -R xx.xx.xx.xx 后面跟ip即可删除指定服务器的公钥文件，再次连接时重新生成，并覆盖掉连接方的私钥。</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>liunx重装系统后ssh连接认证的问题</title>
      <link href="/liunx%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%90%8Essh%E8%BF%9E%E6%8E%A5%E8%AE%A4%E8%AF%81%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/liunx%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%90%8Essh%E8%BF%9E%E6%8E%A5%E8%AE%A4%E8%AF%81%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><figcaption><span>[命令行报错提示]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line"></span><br><span class="line">@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span><br><span class="line"></span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line"></span><br><span class="line">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span><br><span class="line"></span><br><span class="line">Someone could be eavesdropping on you right now (man-in-the-middle attack)!</span><br><span class="line"></span><br><span class="line">It is also possible that a host key has just been changed.</span><br><span class="line"></span><br><span class="line">The fingerprint for the ECDSA key sent by the remote host is</span><br><span class="line"></span><br><span class="line">SHA256:Qv4XPuXFuO1G8s0teCXRANvVnZy1jjIFKkp8yfJgLeA.</span><br><span class="line"></span><br><span class="line">Please contact your system administrator.</span><br><span class="line"></span><br><span class="line">Add correct host key in /c/Users/Administrator/.ssh/known_hosts to get rid of this message.</span><br><span class="line"></span><br><span class="line">Offending ECDSA key in /c/Users/Administrator/.ssh/known_hosts:3</span><br><span class="line"></span><br><span class="line">ECDSA host key for 58.87.72.33 has changed and you have requested strict checking.</span><br><span class="line"></span><br><span class="line">Host key verification failed.</span><br></pre></td></tr></table></figure><p>对于一个小白来说，这个是完全看不懂的，下面就告诉大家如何解决这个问题。</p><p>首先用ssh第一次连接sever,sever会生成一个公钥和一个私钥，私钥存在连接方的本地，系统重装后sever会重新生成一个公钥，然后连接方的私钥已经和sever的公钥不匹配，导致报错无法登录。</p><p>解决方法：</p><p>ssh-keygen -R xx.xx.xx.xx 后面跟ip即可删除指定服务器的公钥文件，再次连接时重新生成，并覆盖掉连接方的私钥。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jquery简单实现图片懒加载</title>
      <link href="/jquery%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
      <url>/jquery%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<p>最近突发奇想，想优化web网站。我是一个后端程序员，但对js很感兴趣，之前总听说图片懒加载可以优化网站，本来以为是很难得技术，今天亲手试了一下才发现是如此简单。下面为大家奉上我的代码！<br><a id="more"></a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">'Hello Welcome to DaiChong.Blog!'</span>);</span><br></pre></td></tr></table></figure></p><figure class="highlight html"><figcaption><span>[首先是html部分]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">*&#123;</span><br><span class="line"><span class="css"> <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"> <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"> <span class="selector-tag">list-style</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">img&#123;</span><br><span class="line"><span class="css"> <span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css"> <span class="selector-tag">width</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'1.png'</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'1.png'</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'1.png'</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'1.png'</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'1.png'</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><!-- more --><figure class="highlight js"><figcaption><span>[juqery部分]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"> $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="comment">//代替数据</span></span><br><span class="line">     <span class="keyword">var</span> arr = [<span class="string">'./1.jpg'</span>,<span class="string">'./01.png'</span>,<span class="string">'./02.png'</span>,<span class="string">'./03.png'</span>,<span class="string">'./03(1).png'</span>,<span class="string">'./客房1.png'</span>,<span class="string">'./客房2.png'</span>];</span><br><span class="line">     <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line">     $.each(arr,<span class="function"><span class="keyword">function</span> (<span class="params">k,v</span>) </span>&#123;</span><br><span class="line">         str+=<span class="string">'&lt;li&gt;&lt;img data-src="'</span>+v+<span class="string">'"&gt;&lt;/li&gt;'</span>;</span><br><span class="line">     &#125;)</span><br><span class="line">     $(<span class="string">"ul"</span>).html(str);</span><br><span class="line">     <span class="comment">//初始化一次</span></span><br><span class="line">     load_img();</span><br><span class="line">  &#125;)</span><br><span class="line">    $(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        load_img();</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">load_img</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//可视区域的高度</span></span><br><span class="line">        <span class="keyword">var</span> view_height = $(<span class="built_in">window</span>).height();</span><br><span class="line">        <span class="comment">//滚动条的高度</span></span><br><span class="line">        <span class="keyword">var</span> scroll_top = $(<span class="built_in">window</span>).scrollTop();</span><br><span class="line">        $(<span class="string">'ul li img'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">k,v</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> top = $(v).offset().top-scroll_top;</span><br><span class="line">            <span class="keyword">if</span>(top&lt;view_height)&#123;</span><br><span class="line">                $(v).attr(<span class="string">'src'</span>,$(v).attr(<span class="string">'data-src'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
